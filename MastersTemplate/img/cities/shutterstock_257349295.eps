%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Eastern European
%%Title: california v-03.eps
%%Creator: Adobe Illustrator(R) 15.1
%%For: Szaby
%%CreationDate: 3/1/2015
%%BoundingBox: 0 0 644 659
%%HiResBoundingBox: 0 0 643.4678 658.0264
%%CropBox: 0 0 643.4678 658.0264
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 15.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 15.1.0 x39 R agm 4.5189 ct 5.1875%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 3 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.0-c060 61.134777, 2010/02/12-17:32:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS5.1</xmp:CreatorTool>
         <xmp:CreateDate>2015-03-01T20:12:16+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2015-03-01T20:12:17+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2015-03-01T20:12:17+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>176</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAsAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8Akao7KzKpKruxA2Fdt80r&#xA;3NtYpbCOwZgpIUVYgbAVpv8ATii0ZcaLqtvFHLLbOEli+sKQCaRcuPNqfZFfHxGTMCGqOeEiQDyN&#xA;fFBZBudiruLULUNBsT23xQqXNtPbTNBOhjlTZkbqKiuEiuaIyEhY5KeBk7FXvGk/8cKz/wCYWL/k&#xA;2M2w+j4PF5v72X9Y/ewvOQd0xP8ANPzBqegeSb7UtMkEN8jQpDMVV+POVVY8XDKfhJ6jMrRYo5Mg&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">denever jo</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>643.467773</stDim:w>
            <stDim:h>658.026367</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DocumentID>xmp.did:64E38F703EC0E411849C91F5531B6B94</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:64E38F703EC0E411849C91F5531B6B94</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:E968D298E697E3119B01FB79E908CEA6</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:63E38F703EC0E411849C91F5531B6B94</stRef:instanceID>
            <stRef:documentID>xmp.did:63E38F703EC0E411849C91F5531B6B94</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:E968D298E697E3119B01FB79E908CEA6</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:E968D298E697E3119B01FB79E908CEA6</stEvt:instanceID>
                  <stEvt:when>2014-02-17T17:17:21+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EA68D298E697E3119B01FB79E908CEA6</stEvt:instanceID>
                  <stEvt:when>2014-02-17T17:34:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EB68D298E697E3119B01FB79E908CEA6</stEvt:instanceID>
                  <stEvt:when>2014-02-17T17:49:34+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:EC68D298E697E3119B01FB79E908CEA6</stEvt:instanceID>
                  <stEvt:when>2014-02-17T17:51:30+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:ED68D298E697E3119B01FB79E908CEA6</stEvt:instanceID>
                  <stEvt:when>2014-02-17T18:06:38+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0EFCB535FE97E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T20:06:22+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:0FFCB535FE97E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T20:07:12+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:10FCB535FE97E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T20:22:12+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:11FCB535FE97E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T20:35:50+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:12FCB535FE97E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T20:49:50+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:13FCB535FE97E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T21:08:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:14FCB535FE97E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T21:22:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:15FCB535FE97E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T21:37:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:16FCB535FE97E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T21:49:54+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:17FCB535FE97E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T21:58:51+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:206D9B4A1098E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T22:15:48+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:216D9B4A1098E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T22:28:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:226D9B4A1098E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T22:36:08+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:236D9B4A1098E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T22:50:33+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:246D9B4A1098E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T23:12:07+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:256D9B4A1098E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T23:27:10+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:266D9B4A1098E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-17T23:39:32+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:276D9B4A1098E311A4E0D0C3D0F19E88</stEvt:instanceID>
                  <stEvt:when>2014-02-18T00:04:25+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:BBA219999E98E3119C5C81CE46F56D7F</stEvt:instanceID>
                  <stEvt:when>2014-02-18T15:14:51+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:9B21D366DFB0E311865FB6E0C5214AE5</stEvt:instanceID>
                  <stEvt:when>2014-03-21T11:58:50+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2540ECAAE3B0E31197D9EF9DCB93731F</stEvt:instanceID>
                  <stEvt:when>2014-03-21T12:35:38+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AE61CD09DAB1E3119586F490CCFFCD98</stEvt:instanceID>
                  <stEvt:when>2014-03-22T17:52:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:B061CD09DAB1E3119586F490CCFFCD98</stEvt:instanceID>
                  <stEvt:when>2014-03-22T17:53:34+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:91957B8EBEB2E311AE31B59A83788EB4</stEvt:instanceID>
                  <stEvt:when>2014-03-23T21:44:02+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3223D6A5C8B2E311AE0283F47C96392F</stEvt:instanceID>
                  <stEvt:when>2014-03-23T22:20:59+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:3523D6A5C8B2E311AE0283F47C96392F</stEvt:instanceID>
                  <stEvt:when>2014-03-23T22:23:30+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:90FB3AC44CB3E3118CB9AC703619B274</stEvt:instanceID>
                  <stEvt:when>2014-03-24T14:30:36+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:CFB2D26C96C8E3118A4391313712E5B9</stEvt:instanceID>
                  <stEvt:when>2014-04-20T17:18:16+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:28665788AB6AE4119A458207EC86F61F</stEvt:instanceID>
                  <stEvt:when>2014-11-13T21:11:04+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:499EF4FD686BE4119A458207EC86F61F</stEvt:instanceID>
                  <stEvt:when>2014-11-13T21:12:20+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:AE667A2518C0E4118F8DF7DEDEE3251B</stEvt:instanceID>
                  <stEvt:when>2015-03-01T15:42:47+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:63E38F703EC0E411849C91F5531B6B94</stEvt:instanceID>
                  <stEvt:when>2015-03-01T20:11:53+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:64E38F703EC0E411849C91F5531B6B94</stEvt:instanceID>
                  <stEvt:when>2015-03-01T20:12:17+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS5.1</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <pdf:Producer>Adobe PDF library 9.90</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -658.026 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 658.026 li
643.468 658.026 li
643.468 0 li
cp
clp
[1 0 0 1 0 0 ]ct
643.468 658.026 mo
.00098838 658.026 li
.00098838 0 li
643.468 0 li
643.468 658.026 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.134188 .268528 .276066 .0165713 cmyk
f
156.667 534.794 mo
155.864 534.794 li
155.864 525.751 li
154.858 525.751 li
154.858 525.227 li
154.575 525.597 li
152.816 523.302 li
147.752 523.302 li
147.752 534.794 li
146.949 534.794 li
146.949 517.88 li
147.752 517.88 li
147.752 522.255 li
152.982 522.255 li
152.982 522.778 li
153.266 522.408 li
155.025 524.703 li
156.266 524.703 li
156.266 525.227 li
156.667 525.227 li
156.667 534.794 li
264.567 497.934 mo
264.567 494.11 li
260.905 494.11 li
259.441 492.519 li
259.441 486.787 li
257 482.009 li
254.07 487.105 li
254.07 494.11 li
252.851 494.11 li
252.851 498.252 li
243.328 498.252 li
243.328 496.022 li
234.784 496.022 li
234.784 517.361 li
235.186 517.361 li
235.186 532.955 li
234.382 532.955 li
234.382 517.361 li
220.781 517.361 li
220.781 525.884 li
219.979 525.884 li
219.979 517.361 li
220.38 517.361 li
220.38 495.386 li
215.253 495.386 li
215.253 493.793 li
213.788 493.793 li
213.788 491.245 li
207.929 491.245 li
207.929 495.386 li
200.118 495.386 li
200.118 507.488 li
200.52 507.488 li
200.52 518.634 li
199.717 518.634 li
199.717 507.488 li
197.346 507.488 li
197.346 518.634 li
196.543 518.634 li
196.543 507.488 li
196.944 507.488 li
196.944 500.799 li
193.77 498.252 li
181.075 498.252 li
181.075 496.022 li
174.972 496.022 li
174.972 498.252 li
173.02 498.252 li
171.524 499.957 li
186.406 499.957 li
186.406 500.481 li
186.808 500.481 li
186.808 505.054 li
188.954 505.054 li
188.954 505.577 li
189.355 505.577 li
189.355 521.735 li
207.845 521.735 li
207.845 522.259 li
208.246 522.259 li
208.246 534.794 li
207.442 534.794 li
207.442 522.783 li
188.954 522.783 li
183.199 522.783 li
183.199 526.337 li
182.798 526.337 li
182.798 526.86 li
177.469 526.86 li
177.469 534.794 li
176.666 534.794 li
176.666 526.337 li
177.066 526.337 li
177.066 525.812 li
182.397 525.812 li
182.397 522.259 li
182.798 522.259 li
182.798 521.735 li
188.552 521.735 li
188.552 506.101 li
186.406 506.101 li
186.406 505.577 li
186.005 505.577 li
186.005 501.006 li
171.066 501.006 li
171.066 505.577 li
168.342 505.577 li
168.342 534.794 li
167.538 534.794 li
167.538 505.577 li
166.915 505.577 li
166.915 503.348 li
161.545 503.348 li
161.545 506.214 li
157.395 506.214 li
157.395 510.673 li
157.796 510.673 li
157.796 516.953 li
164.969 516.953 li
164.969 517.475 li
165.369 517.475 li
165.369 531.333 li
164.567 531.333 li
164.567 518 li
157.395 518 li
157.395 517.475 li
156.993 517.475 li
156.993 510.673 li
153.978 510.673 li
153.978 517.361 li
145.433 517.361 li
145.433 501.438 li
141.283 497.614 li
137.376 501.756 li
137.376 516.087 li
133.106 516.087 li
133.106 519.673 li
132.705 519.673 li
132.705 520.196 li
128.861 520.196 li
128.861 525.36 li
138.884 525.36 li
138.884 517.88 li
139.284 517.88 li
139.001 517.51 li
141.646 514.059 li
141.929 514.43 li
142.214 514.059 li
144.548 517.107 li
144.265 517.475 li
144.665 517.475 li
144.665 525.884 li
144.665 534.794 li
143.863 534.794 li
143.863 525.884 li
143.863 517.692 li
141.929 515.172 li
139.686 518.098 li
139.686 525.884 li
139.284 525.884 li
139.284 526.407 li
128.459 526.407 li
126.313 526.407 li
126.313 531.118 li
125.912 531.118 li
125.912 531.643 li
122.493 531.643 li
122.493 534.794 li
121.69 534.794 li
121.69 531.118 li
122.092 531.118 li
122.092 530.595 li
125.511 530.595 li
125.511 525.884 li
125.912 525.884 li
125.912 525.36 li
128.058 525.36 li
128.058 519.673 li
128.459 519.673 li
128.459 519.15 li
132.305 519.15 li
132.305 516.087 li
131.517 516.087 li
131.517 514.494 li
123.705 514.494 li
123.705 463.219 li
121.019 463.219 li
121.019 460.67 li
119.311 459.397 li
107.348 459.397 li
107.348 463.537 li
104.174 463.537 li
104.174 472.454 li
102.954 472.454 li
102.954 518.634 li
103.355 518.634 li
103.355 525.884 li
102.553 525.884 li
102.553 518.634 li
82.1153 518.634 li
82.1153 527.347 li
115.724 527.347 li
115.724 527.871 li
116.125 527.871 li
116.125 534.794 li
115.322 534.794 li
115.322 528.394 li
82.1153 528.394 li
82.1153 533.132 li
81.3126 533.132 li
81.3126 518.634 li
81.7148 518.634 li
81.7148 502.073 li
56.3251 502.073 li
56.3251 506.214 li
56.7266 506.214 li
56.7266 533.132 li
55.9239 533.132 li
55.9239 506.214 li
53.8829 506.214 li
53.8829 509.08 li
50.9541 509.08 li
50.9541 511.309 li
51.1523 510.854 li
55.2149 513.846 li
55.0165 514.303 li
55.418 514.303 li
55.418 533.132 li
54.6152 533.132 li
54.6152 514.608 li
50.7568 511.767 li
50.9541 511.309 li
46.8038 509.08 li
30.1387 509.08 li
30.1387 539.018 li
267.603 539.018 li
267.603 497.934 li
264.567 497.934 li
.912474 .787625 .619837 .97467 cmyk
f
46.0508 630.054 mo
48.3018 630.054 li
48.3018 642.332 li
52.0059 642.332 li
52.0059 644.379 li
46.0508 644.379 li
46.0508 630.054 li
cp
f
55.0557 641.084 mo
55.0557 642.107 55.5049 642.496 56.2207 642.496 cv
56.9375 642.496 57.3877 642.107 57.3877 641.084 cv
57.3877 633.348 li
57.3877 632.324 56.9375 631.936 56.2207 631.936 cv
55.5049 631.936 55.0557 632.324 55.0557 633.348 cv
55.0557 641.084 li
cp
52.8037 633.491 mo
52.8037 631.2 54.0117 629.89 56.2207 629.89 cv
58.4316 629.89 59.6387 631.2 59.6387 633.491 cv
59.6387 640.941 li
59.6387 643.233 58.4316 644.543 56.2207 644.543 cv
54.0117 644.543 52.8037 643.233 52.8037 640.941 cv
52.8037 633.491 li
cp
f
63.1377 634.003 mo
63.0977 634.003 li
63.0977 644.379 li
61.0713 644.379 li
61.0713 630.054 li
63.8945 630.054 li
66.166 638.629 li
66.208 638.629 li
66.208 630.054 li
68.2129 630.054 li
68.2129 644.379 li
65.9004 644.379 li
63.1377 634.003 li
cp
f
73.2061 636.398 mo
76.3574 636.398 li
76.3574 640.941 li
76.3574 643.233 75.2109 644.543 73.002 644.543 cv
70.791 644.543 69.6455 643.233 69.6455 640.941 cv
69.6455 633.491 li
69.6455 631.2 70.791 629.89 73.002 629.89 cv
75.2109 629.89 76.3574 631.2 76.3574 633.491 cv
76.3574 634.884 li
74.2285 634.884 li
74.2285 633.348 li
74.2285 632.324 73.7793 631.936 73.0625 631.936 cv
72.3457 631.936 71.8965 632.324 71.8965 633.348 cv
71.8965 641.084 li
71.8965 642.107 72.3457 642.476 73.0625 642.476 cv
73.7793 642.476 74.2285 642.107 74.2285 641.084 cv
74.2285 638.443 li
73.2061 638.443 li
73.2061 636.398 li
cp
f
83.2334 637.933 mo
83.2334 642.332 li
84.5225 642.332 li
85.2793 642.332 85.6885 641.984 85.6885 640.92 cv
85.6885 639.672 li
85.6885 638.342 85.2588 637.933 84.2354 637.933 cv
83.2334 637.933 li
cp
83.2334 632.1 mo
83.2334 635.886 li
84.1133 635.886 li
84.9512 635.886 85.4639 635.518 85.4639 634.371 cv
85.4639 633.573 li
85.4639 632.551 85.1152 632.1 84.3174 632.1 cv
83.2334 632.1 li
cp
87.7148 633.348 mo
87.7148 633.86 li
87.7148 635.333 87.2646 636.254 86.2617 636.726 cv
86.2617 636.766 li
87.4688 637.236 87.9404 638.301 87.9404 639.815 cv
87.9404 640.981 li
87.9404 643.191 86.7734 644.379 84.5225 644.379 cv
80.9814 644.379 li
80.9814 630.054 li
84.3789 630.054 li
86.7119 630.054 87.7148 631.138 87.7148 633.348 cv
cp
f
91.541 636.091 mo
94.6309 636.091 li
94.6309 638.138 li
91.541 638.138 li
91.541 642.332 li
95.4297 642.332 li
95.4297 644.379 li
89.29 644.379 li
89.29 630.054 li
95.4297 630.054 li
95.4297 632.1 li
91.541 632.1 li
91.541 636.091 li
cp
f
98.9697 639.836 mo
101.139 639.836 li
100.074 632.591 li
100.033 632.591 li
98.9697 639.836 li
cp
104.105 644.379 mo
101.834 644.379 li
101.445 641.78 li
98.6826 641.78 li
98.2939 644.379 li
96.2266 644.379 li
98.5186 630.054 li
101.813 630.054 li
104.105 644.379 li
cp
f
111.657 639.037 mo
111.657 640.941 li
111.657 643.233 110.511 644.543 108.301 644.543 cv
106.09 644.543 104.944 643.233 104.944 640.941 cv
104.944 633.491 li
104.944 631.2 106.09 629.89 108.301 629.89 cv
110.511 629.89 111.657 631.2 111.657 633.491 cv
111.657 634.884 li
109.528 634.884 li
109.528 633.348 li
109.528 632.324 109.078 631.936 108.361 631.936 cv
107.646 631.936 107.196 632.324 107.196 633.348 cv
107.196 641.084 li
107.196 642.107 107.646 642.476 108.361 642.476 cv
109.078 642.476 109.528 642.107 109.528 641.084 cv
109.528 639.037 li
111.657 639.037 li
cp
f
115.278 644.379 mo
113.027 644.379 li
113.027 630.054 li
115.278 630.054 li
115.278 636.193 li
117.836 636.193 li
117.836 630.054 li
120.129 630.054 li
120.129 644.379 li
117.836 644.379 li
117.836 638.24 li
115.278 638.24 li
115.278 644.379 li
cp
f
119.311 608.24 mo
107.348 608.24 li
107.348 604.649 li
104.174 604.649 li
104.174 596.918 li
102.954 596.918 li
102.954 556.874 li
103.355 556.874 li
103.355 550.588 li
102.553 550.588 li
102.553 556.874 li
82.1153 556.874 li
82.1153 549.318 li
115.724 549.318 li
115.724 548.864 li
116.125 548.864 li
116.125 542.861 li
115.322 542.861 li
115.322 548.41 li
82.1153 548.41 li
82.1153 544.302 li
81.3126 544.302 li
81.3126 556.874 li
81.7148 556.874 li
81.7148 571.234 li
56.3251 571.234 li
56.3251 567.643 li
56.7266 567.643 li
56.7266 544.302 li
55.9239 544.302 li
55.9239 567.643 li
53.8829 567.643 li
53.8829 565.158 li
50.9541 565.158 li
50.9541 563.226 li
51.1523 563.62 li
55.2149 561.025 li
55.0165 560.63 li
55.418 560.63 li
55.418 544.302 li
54.6152 544.302 li
54.6152 560.365 li
50.7568 562.829 li
50.9541 563.226 li
46.8038 565.158 li
30.1387 565.158 li
30.1387 539.198 li
267.603 539.198 li
267.603 574.824 li
264.567 574.824 li
264.567 578.139 li
260.905 578.139 li
259.441 579.519 li
259.441 584.49 li
257 588.633 li
254.07 584.214 li
254.07 578.139 li
252.851 578.139 li
252.851 574.548 li
243.328 574.548 li
243.328 576.481 li
234.784 576.481 li
234.784 557.977 li
235.186 557.977 li
235.186 544.455 li
234.382 544.455 li
234.382 557.977 li
220.781 557.977 li
220.781 550.588 li
219.979 550.588 li
219.979 557.977 li
220.38 557.977 li
220.38 577.034 li
215.253 577.034 li
215.253 578.415 li
213.788 578.415 li
213.788 580.623 li
207.929 580.623 li
207.929 577.034 li
200.118 577.034 li
200.118 566.538 li
200.52 566.538 li
200.52 556.874 li
199.717 556.874 li
199.717 566.538 li
197.346 566.538 li
197.346 556.874 li
196.543 556.874 li
196.543 566.538 li
196.944 566.538 li
196.944 572.339 li
193.77 574.548 li
181.075 574.548 li
181.075 576.481 li
174.972 576.481 li
174.972 574.548 li
173.02 574.548 li
171.524 573.069 li
186.406 573.069 li
186.406 572.614 li
186.808 572.614 li
186.808 568.65 li
188.954 568.65 li
188.954 568.196 li
189.355 568.196 li
189.355 554.185 li
207.845 554.185 li
207.845 553.73 li
208.246 553.73 li
208.246 542.861 li
207.442 542.861 li
207.442 553.276 li
188.954 553.276 li
183.199 553.276 li
183.199 550.194 li
182.798 550.194 li
182.798 549.74 li
177.469 549.74 li
177.469 542.861 li
176.666 542.861 li
176.666 550.194 li
177.066 550.194 li
177.066 550.649 li
182.397 550.649 li
182.397 553.73 li
182.798 553.73 li
182.798 554.185 li
188.552 554.185 li
188.552 567.742 li
186.406 567.742 li
186.406 568.196 li
186.005 568.196 li
186.005 572.16 li
171.066 572.16 li
171.066 568.196 li
168.342 568.196 li
168.342 542.861 li
167.538 542.861 li
167.538 568.196 li
166.915 568.196 li
166.915 570.129 li
161.545 570.129 li
161.545 567.643 li
157.395 567.643 li
157.395 563.776 li
157.796 563.776 li
157.796 558.331 li
164.969 558.331 li
164.969 557.878 li
165.369 557.878 li
165.369 545.861 li
164.567 545.861 li
164.567 557.424 li
157.395 557.424 li
157.395 557.878 li
156.993 557.878 li
156.993 563.776 li
153.978 563.776 li
153.978 557.977 li
145.433 557.977 li
145.433 571.786 li
141.283 575.101 li
137.376 571.51 li
137.376 559.082 li
133.106 559.082 li
133.106 555.974 li
132.705 555.974 li
132.705 555.519 li
128.861 555.519 li
128.861 551.041 li
138.884 551.041 li
138.884 557.528 li
139.284 557.528 li
139.001 557.85 li
141.646 560.841 li
141.929 560.519 li
142.214 560.841 li
144.548 558.199 li
144.265 557.878 li
144.665 557.878 li
144.665 550.588 li
144.665 542.861 li
143.863 542.861 li
143.863 550.588 li
143.863 557.691 li
141.929 559.877 li
139.686 557.34 li
139.686 550.588 li
139.284 550.588 li
139.284 550.133 li
128.459 550.133 li
126.313 550.133 li
126.313 546.048 li
125.912 546.048 li
125.912 545.594 li
122.493 545.594 li
122.493 542.861 li
121.69 542.861 li
121.69 546.048 li
122.092 546.048 li
122.092 546.503 li
125.511 546.503 li
125.511 550.588 li
125.912 550.588 li
125.912 551.041 li
128.058 551.041 li
128.058 555.974 li
128.459 555.974 li
128.459 556.426 li
132.305 556.426 li
132.305 559.082 li
131.517 559.082 li
131.517 560.464 li
123.705 560.464 li
123.705 604.927 li
121.019 604.927 li
121.019 607.136 li
119.311 608.24 li
146.949 542.861 mo
146.949 557.528 li
147.752 557.528 li
147.752 553.734 li
152.982 553.734 li
152.982 553.28 li
153.266 553.601 li
155.025 551.611 li
156.266 551.611 li
156.266 551.157 li
156.667 551.157 li
156.667 542.861 li
155.864 542.861 li
155.864 550.702 li
154.858 550.702 li
154.858 551.157 li
154.575 550.836 li
152.816 552.826 li
147.752 552.826 li
147.752 542.861 li
146.949 542.861 li
.270756 .351293 .358556 .108919 cmyk
f
480.361 504.632 mo
480.361 500.668 li
480.904 500.668 li
480.904 499.968 li
484.154 499.968 li
484.154 497.998 li
484.698 497.998 li
484.698 497.295 li
498.13 497.295 li
498.13 485.312 li
491.625 485.312 li
491.625 494.646 li
483.433 494.646 li
483.433 492.438 li
478.452 492.438 li
478.452 504.632 li
480.361 504.632 li
cp
.912474 .787625 .619837 .97467 cmyk
f
520.66 497.295 mo
520.66 497.998 li
521.204 497.998 li
521.204 499.968 li
525.296 499.968 li
525.296 500.668 li
525.841 500.668 li
525.841 502.301 li
527.403 502.301 li
528.387 502.301 li
529.229 502.301 li
529.917 502.301 li
529.917 493.173 li
527.249 493.173 li
527.249 489.243 li
520.392 489.243 li
520.392 484.575 li
517.345 484.575 li
507.028 484.575 li
507.028 497.295 li
520.66 497.295 li
cp
f
397.106 493.22 mo
401.955 493.22 li
406.497 493.22 li
406.497 481.875 li
405.325 481.875 li
405.325 480.4 li
397.516 480.4 li
397.516 483.102 li
396.563 485.559 li
396.563 488.752 li
397.106 488.752 li
397.106 493.22 li
cp
f
619.155 524.555 mo
618.77 525.051 li
616.103 521.611 li
609.023 521.611 li
600.015 521.611 li
600.015 522.732 li
599.47 522.732 li
598.928 522.732 li
598.928 520.91 li
599.47 520.91 li
599.47 520.209 li
608.479 520.209 li
608.479 514.365 li
606.617 514.365 li
606.617 515.566 li
606.073 515.566 li
606.073 516.268 li
595.378 516.268 li
595.378 525.802 li
594.835 525.802 li
594.835 526.502 li
580.206 526.502 li
580.206 527.801 li
579.663 527.801 li
579.119 527.801 li
579.119 525.795 li
579.663 525.795 li
579.663 525.099 li
594.292 525.099 li
594.292 515.566 li
594.835 515.566 li
594.835 514.867 li
605.531 514.867 li
605.531 513.666 li
606.073 513.666 li
606.073 512.964 li
609.023 512.964 li
609.023 513.666 li
609.567 513.666 li
609.567 520.209 li
616.329 520.209 li
616.329 520.91 li
616.712 520.414 li
619.54 524.061 li
619.155 524.555 li
544.982 520.91 mo
544.982 510.766 li
545.526 510.766 li
545.526 510.064 li
560.558 510.064 li
560.558 510.766 li
560.558 511.467 li
546.069 511.467 li
546.069 520.91 li
545.526 520.91 li
544.982 520.91 li
528.931 527.793 mo
528.387 527.793 li
527.844 527.793 li
527.844 517.443 li
494.109 517.443 li
494.109 516.744 li
494.109 516.043 li
513.796 516.043 li
513.796 515.566 li
513.796 512.373 li
511.607 512.373 li
511.46 511.973 li
511.413 511.843 511.362 511.734 511.312 511.624 cv
511.308 511.624 li
511.182 511.621 li
511.057 511.62 li
510.929 511.619 li
510.803 511.617 li
510.677 511.615 li
510.55 511.611 li
510.424 511.611 li
510.298 511.607 li
510.171 511.605 li
510.045 511.604 li
509.919 511.604 li
509.792 511.601 li
509.722 511.601 li
509.612 511.764 509.521 511.926 509.46 512.047 cv
509.3 512.373 li
502.192 512.373 li
502.046 511.967 li
501.982 511.792 501.918 511.629 501.852 511.475 cv
501.835 511.475 li
501.708 511.474 li
501.582 511.471 li
501.455 511.471 li
501.328 511.467 li
501.202 511.467 li
501.077 511.463 li
500.951 511.461 li
500.823 511.458 li
500.697 511.458 li
500.571 511.455 li
500.445 511.453 li
500.318 511.45 li
500.192 511.448 li
500.065 511.448 li
499.94 511.445 li
499.813 511.443 li
499.687 511.441 li
499.561 511.441 li
499.434 511.435 li
499.308 511.435 li
499.211 511.434 li
499.145 511.566 li
498.99 511.92 li
486.084 511.92 li
486.084 517.65 li
485.54 517.65 li
484.997 517.65 li
484.997 511.219 li
485.54 511.219 li
485.54 510.518 li
498.375 510.518 li
498.729 509.851 499.554 508.533 500.689 508.596 cv
501.525 508.639 502.261 509.438 502.878 510.972 cv
508.72 510.972 li
509.051 510.411 509.771 509.379 510.715 509.445 cv
511.33 509.492 511.858 510.006 512.281 510.972 cv
514.339 510.972 li
514.339 511.672 li
514.883 511.672 li
514.883 515.566 li
514.883 516.043 li
528.387 516.043 li
528.387 516.744 li
528.931 516.744 li
528.931 527.793 li
494.653 527.793 mo
494.109 527.793 li
493.566 527.793 li
493.566 517.65 li
494.109 517.65 li
494.653 517.65 li
494.653 527.793 li
616.219 504.719 mo
616.219 507.416 li
613.55 507.416 li
613.55 514.299 li
611.266 514.299 li
611.266 499.806 li
606.12 499.806 li
606.12 493.42 li
592.213 493.42 li
592.213 510.615 li
588.022 510.615 li
588.022 507.416 li
583.069 507.416 li
583.069 505.209 li
569.162 505.209 li
569.162 509.631 li
568.372 509.631 li
568.372 515.139 li
586.547 515.139 li
586.547 515.84 li
587.089 515.84 li
587.089 523.807 li
586.547 523.807 li
586.002 523.807 li
586.002 516.539 li
563.208 516.539 li
563.208 518.76 li
563.788 518.76 li
563.788 519.461 li
564.333 519.461 li
564.333 521.387 li
566.317 521.387 li
566.317 522.088 li
566.861 522.088 li
566.861 527.793 li
566.317 527.793 li
565.773 527.793 li
565.773 522.788 li
563.788 522.788 li
563.788 522.088 li
563.246 522.088 li
563.246 520.162 li
559.854 520.162 li
551.97 520.162 li
551.97 520.367 li
551.97 522.088 li
551.97 523.807 li
551.427 523.807 li
551.427 524.509 li
546.771 524.509 li
546.771 527.793 li
546.229 527.793 li
545.685 527.793 li
545.685 523.807 li
546.229 523.807 li
546.229 523.106 li
550.883 523.106 li
550.883 522.088 li
550.883 520.367 li
550.883 519.461 li
551.427 519.461 li
551.427 518.76 li
559.854 518.76 li
560.015 518.76 li
560.015 511.672 li
560.558 511.672 li
561.101 511.672 li
561.101 518.76 li
562.121 518.76 li
562.121 515.84 li
562.664 515.84 li
562.664 515.139 li
567.286 515.139 li
567.286 509.631 li
567.829 509.631 li
567.829 490.963 li
563.638 489.243 li
563.638 487.523 li
556.779 487.523 li
556.779 482.857 li
550.111 482.857 li
550.111 489.243 li
543.825 489.243 li
543.825 512.578 li
532.395 512.578 li
532.395 507.416 li
531.252 507.416 li
531.252 503.735 li
529.917 503.735 li
529.917 503.703 li
529.229 503.703 li
528.387 503.703 li
527.403 503.703 li
525.296 503.703 li
525.296 503.001 li
524.753 503.001 li
524.753 501.369 li
520.66 501.369 li
520.66 500.668 li
520.117 500.668 li
520.117 498.697 li
506.485 498.697 li
506.485 497.998 li
505.941 497.998 li
505.941 484.575 li
506.485 484.575 li
506.485 482.119 li
504.771 480.645 503.437 471.559 503.437 471.559 cv
501.912 471.559 li
501.15 479.172 498.674 482.611 498.674 482.611 cv
498.674 485.311 li
499.217 485.311 li
499.217 497.998 li
498.674 497.998 li
498.674 498.697 li
485.241 498.697 li
485.241 500.668 li
484.698 500.668 li
484.698 501.369 li
481.448 501.369 li
481.448 505.332 li
480.904 505.332 li
480.904 506.033 li
478.452 506.033 li
478.452 511.219 li
477.908 511.219 li
477.364 511.219 li
477.364 492.438 li
477.908 492.438 li
477.908 489.243 li
476.385 489.243 li
476.385 486.295 li
472.765 483.84 li
469.336 486.051 li
469.336 489.243 li
468.192 489.243 li
468.192 491.454 li
463.431 491.454 li
462.097 486.295 459.62 491.208 459.62 491.208 cv
459.62 491.359 li
452.246 491.359 li
452.246 490.66 li
451.77 490.996 li
451.723 490.887 451.672 490.773 451.619 490.66 cv
451.611 490.66 li
451.582 490.66 li
451.553 490.66 li
451.522 490.66 li
451.491 490.66 li
451.462 490.66 li
451.432 490.66 li
451.4 490.66 li
451.371 490.66 li
451.341 490.66 li
451.31 490.66 li
451.28 490.66 li
451.249 490.66 li
451.22 490.66 li
451.189 490.66 li
451.159 490.66 li
451.129 490.66 li
451.099 490.66 li
451.069 490.66 li
451.039 490.66 li
451.009 490.66 li
450.978 490.66 li
450.948 490.66 li
450.919 490.66 li
450.887 490.66 li
450.856 490.66 li
450.827 490.66 li
450.798 490.66 li
450.767 490.66 li
450.736 490.66 li
450.707 490.66 li
450.677 490.66 li
450.646 490.66 li
450.616 490.66 li
450.587 490.66 li
450.556 490.66 li
450.525 490.66 li
450.494 490.66 li
450.465 490.66 li
450.434 490.66 li
450.405 490.66 li
450.374 490.66 li
450.345 490.66 li
450.314 490.66 li
450.284 490.66 li
450.254 490.66 li
450.224 490.66 li
450.193 490.66 li
450.164 490.66 li
450.132 490.66 li
450.103 490.66 li
450.072 490.66 li
450.042 490.66 li
450.012 490.66 li
449.981 490.66 li
449.952 490.66 li
449.922 490.66 li
449.891 490.66 li
449.861 490.66 li
449.832 490.66 li
449.801 490.66 li
449.77 490.66 li
449.739 490.66 li
449.71 490.66 li
449.68 490.66 li
449.649 490.66 li
449.619 490.66 li
449.59 490.66 li
449.56 490.66 li
449.529 490.66 li
449.499 490.66 li
449.469 490.66 li
449.439 490.66 li
449.409 490.66 li
449.377 490.66 li
449.349 490.66 li
449.317 490.66 li
449.287 490.66 li
449.257 490.66 li
449.228 490.66 li
449.197 490.66 li
449.167 490.66 li
449.137 490.66 li
449.106 490.66 li
449.075 490.66 li
449.046 490.66 li
449.016 490.66 li
448.985 490.66 li
448.955 490.66 li
448.925 490.66 li
448.895 490.66 li
448.864 490.66 li
448.835 490.66 li
448.805 490.66 li
448.774 490.66 li
448.745 490.66 li
448.714 490.66 li
448.685 490.66 li
448.654 490.66 li
448.622 490.66 li
448.594 490.66 li
448.563 490.66 li
448.532 490.66 li
448.502 490.66 li
448.474 490.66 li
448.442 490.66 li
448.412 490.66 li
448.382 490.66 li
448.371 490.66 li
448.316 490.777 448.271 490.885 448.239 490.966 cv
448.091 491.359 li
445.906 491.359 li
445.906 505.332 li
445.906 510.518 li
456.76 510.518 li
456.76 509.679 li
457.304 509.679 li
457.304 508.979 li
461.518 508.979 li
461.518 509.679 li
462.062 509.679 li
462.062 510.518 li
465.17 510.518 li
465.17 511.219 li
465.714 511.219 li
465.714 527.793 li
465.17 527.793 li
464.627 527.793 li
464.627 511.92 li
461.518 511.92 li
461.518 511.219 li
460.976 511.219 li
460.976 510.381 li
457.847 510.381 li
457.847 511.219 li
457.304 511.219 li
457.304 511.92 li
445.363 511.92 li
445.363 511.219 li
444.818 511.219 li
444.818 506.033 li
439.022 506.033 li
439.022 509.679 li
438.479 509.679 li
438.479 510.381 li
436.495 510.381 li
436.495 511.219 li
435.95 511.219 li
435.95 511.92 li
429.488 511.92 li
429.488 511.219 li
428.945 511.219 li
428.945 510.381 li
417.529 510.381 li
417.529 512.76 li
416.985 512.76 li
416.985 513.461 li
410.384 513.461 li
410.384 512.76 li
410.384 512.058 li
416.442 512.058 li
416.442 509.679 li
416.985 509.679 li
416.985 508.979 li
429.488 508.979 li
429.488 509.679 li
430.032 509.679 li
430.032 510.518 li
435.408 510.518 li
435.408 509.679 li
435.95 509.679 li
435.95 508.979 li
437.936 508.979 li
437.936 505.332 li
438.479 505.332 li
438.479 504.632 li
444.818 504.632 li
444.818 490.66 li
445.363 490.66 li
445.363 489.961 li
447.427 489.961 li
447.787 489.162 448.687 487.508 449.971 487.465 cv
450.919 487.426 451.778 488.279 452.556 489.961 cv
459.62 489.961 li
459.62 472.786 li
454.668 472.786 li
454.668 470.82 li
442.476 470.82 li
442.476 472.541 li
440.379 472.541 li
437.331 475.242 li
437.331 485.067 li
437.875 485.067 li
437.875 507.416 li
437.331 507.416 li
436.788 507.416 li
436.788 485.067 li
434.637 485.067 li
434.637 504.064 li
434.093 504.064 li
433.549 504.064 li
433.549 485.067 li
434.093 485.067 li
434.093 463.453 li
415.994 460.259 li
407.041 460.259 li
407.041 481.875 li
407.584 481.875 li
407.584 493.22 li
410.384 493.22 li
410.384 493.92 li
410.926 493.92 li
410.926 506.715 li
421.219 506.715 li
421.219 505.332 li
421.762 505.332 li
421.762 504.632 li
435.95 504.632 li
435.95 505.332 li
436.495 505.332 li
436.495 507.416 li
435.95 507.416 li
435.408 507.416 li
435.408 506.033 li
422.306 506.033 li
422.306 507.416 li
421.762 507.416 li
421.762 508.115 li
410.384 508.115 li
410.384 507.416 li
409.839 507.416 li
409.839 494.621 li
402.497 494.621 li
402.497 513.508 li
406.168 513.508 li
406.168 514.209 li
406.712 514.209 li
406.712 516.405 li
430.612 516.405 li
430.612 517.105 li
431.157 517.105 li
431.157 521.66 li
458.568 521.66 li
458.568 522.359 li
459.11 522.359 li
459.11 527.793 li
458.568 527.793 li
458.024 527.793 li
458.024 523.061 li
431.157 523.061 li
431.157 527.793 li
430.612 527.793 li
430.068 527.793 li
430.068 522.359 li
430.068 517.809 li
406.168 517.809 li
406.168 517.105 li
405.625 517.105 li
405.625 514.91 li
401.955 514.91 li
397.106 514.91 li
397.106 517.105 li
396.563 517.105 li
396.563 517.809 li
392.242 517.809 li
392.242 526.164 li
391.699 526.164 li
391.155 526.164 li
391.155 524.873 li
358.809 524.873 li
358.809 527.793 li
358.266 527.793 li
357.721 527.793 li
357.721 524.17 li
358.266 524.17 li
358.266 523.471 li
391.155 523.471 li
391.155 517.105 li
391.699 517.105 li
391.699 516.405 li
396.019 516.405 li
396.019 514.209 li
396.563 514.209 li
396.563 513.508 li
401.41 513.508 li
401.41 494.621 li
396.563 494.621 li
396.563 493.92 li
396.019 493.92 li
396.019 488.752 li
396.563 488.752 li
390.086 482.365 li
382.845 489.734 li
379.607 489.734 li
379.607 487.523 li
371.986 480.4 li
363.605 487.523 li
363.605 489.98 li
362.462 489.98 li
362.462 492.191 li
361.196 492.191 li
361.196 493.92 li
360.653 493.92 li
360.653 494.621 li
356.42 494.621 li
356.42 520.185 li
355.877 520.185 li
355.333 520.185 li
355.333 510.018 li
350.528 510.018 li
346.587 512.643 li
346.587 518.229 li
346.043 518.229 li
346.043 518.929 li
336.49 518.929 li
336.49 518.229 li
336.49 517.527 li
345.499 517.527 li
345.499 512.215 li
346.043 512.215 li
345.793 511.594 li
350.147 508.695 li
350.398 509.317 li
350.398 508.618 li
355.333 508.618 li
355.333 493.92 li
355.877 493.92 li
355.877 493.22 li
360.109 493.22 li
360.109 492.191 li
360.365 492.191 li
360.365 483.84 li
358.65 483.84 li
358.65 478.135 li
352.363 478.135 li
336.552 479.908 li
336.552 485.311 li
335.029 485.311 li
335.029 518.229 li
326.645 518.229 li
326.645 529.775 li
623.038 529.775 li
623.038 504.719 li
616.219 504.719 li
f
498.13 568.543 mo
491.625 568.543 li
491.625 560.447 li
483.433 560.447 li
483.433 562.363 li
478.452 562.363 li
478.452 551.789 li
480.361 551.789 li
480.361 555.227 li
480.904 555.227 li
480.904 555.833 li
484.154 555.833 li
484.154 557.542 li
484.698 557.542 li
484.698 558.15 li
498.13 558.15 li
498.13 568.543 li
.270756 .351293 .358556 .108919 cmyk
f
520.392 569.181 mo
517.345 569.181 li
507.028 569.181 li
507.028 558.15 li
520.66 558.15 li
520.66 557.542 li
521.204 557.542 li
521.204 555.833 li
525.296 555.833 li
525.296 555.227 li
525.841 555.227 li
525.841 553.81 li
527.403 553.81 li
528.387 553.81 li
529.229 553.81 li
529.917 553.81 li
529.917 561.725 li
527.249 561.725 li
527.249 565.133 li
520.392 565.133 li
520.392 569.181 li
f
405.325 572.801 mo
397.516 572.801 li
397.516 570.459 li
396.563 568.328 li
396.563 565.559 li
397.106 565.559 li
397.106 561.685 li
401.955 561.685 li
406.497 561.685 li
406.497 571.522 li
405.325 571.522 li
405.325 572.801 li
f
415.994 590.267 mo
407.041 590.267 li
407.041 571.522 li
407.584 571.522 li
407.584 561.685 li
410.384 561.685 li
410.384 561.077 li
410.926 561.077 li
410.926 549.982 li
421.219 549.982 li
421.219 551.182 li
421.762 551.182 li
421.762 551.789 li
435.95 551.789 li
435.95 551.182 li
436.495 551.182 li
436.495 549.375 li
435.95 549.375 li
435.408 549.375 li
435.408 550.574 li
422.306 550.574 li
422.306 549.375 li
421.762 549.375 li
421.762 548.768 li
410.384 548.768 li
410.384 549.375 li
409.839 549.375 li
409.839 560.469 li
402.497 560.469 li
402.497 544.092 li
406.168 544.092 li
406.168 543.484 li
406.712 543.484 li
406.712 541.58 li
430.612 541.58 li
430.612 540.973 li
431.157 540.973 li
431.157 537.023 li
458.568 537.023 li
458.568 536.417 li
459.11 536.417 li
459.11 531.705 li
458.568 531.705 li
458.024 531.705 li
458.024 535.809 li
431.157 535.809 li
431.157 531.705 li
430.612 531.705 li
430.068 531.705 li
430.068 536.417 li
430.068 540.363 li
406.168 540.363 li
406.168 540.973 li
405.625 540.973 li
405.625 542.877 li
401.955 542.877 li
397.106 542.877 li
397.106 540.973 li
396.563 540.973 li
396.563 540.363 li
392.242 540.363 li
392.242 533.117 li
391.699 533.117 li
391.155 533.117 li
391.155 534.238 li
358.809 534.238 li
358.809 531.705 li
358.266 531.705 li
357.721 531.705 li
357.721 534.846 li
358.266 534.846 li
358.266 535.453 li
391.155 535.453 li
391.155 540.973 li
391.699 540.973 li
391.699 541.58 li
396.019 541.58 li
396.019 543.484 li
396.563 543.484 li
396.563 544.092 li
401.41 544.092 li
401.41 560.469 li
396.563 560.469 li
396.563 561.077 li
396.019 561.077 li
396.019 565.559 li
396.563 565.559 li
390.086 571.097 li
382.845 564.706 li
379.607 564.706 li
379.607 566.623 li
371.986 572.801 li
363.605 566.623 li
363.605 564.494 li
362.462 564.494 li
362.462 562.577 li
361.196 562.577 li
361.196 561.077 li
360.653 561.077 li
360.653 560.469 li
356.42 560.469 li
356.42 538.302 li
355.877 538.302 li
355.333 538.302 li
355.333 547.117 li
350.528 547.117 li
346.587 544.843 li
346.587 539.998 li
346.043 539.998 li
346.043 539.392 li
336.49 539.392 li
336.49 539.998 li
336.49 540.605 li
345.499 540.605 li
345.499 545.213 li
346.043 545.213 li
345.793 545.753 li
350.147 548.266 li
350.398 547.727 li
350.398 548.332 li
355.333 548.332 li
355.333 561.077 li
355.877 561.077 li
355.877 561.685 li
360.109 561.685 li
360.109 562.577 li
360.365 562.577 li
360.365 569.818 li
358.65 569.818 li
358.65 574.766 li
352.363 574.766 li
336.552 573.227 li
336.552 568.543 li
335.029 568.543 li
335.029 539.998 li
326.645 539.998 li
326.645 529.986 li
623.038 529.986 li
623.038 551.714 li
616.219 551.714 li
616.219 549.375 li
613.55 549.375 li
613.55 543.406 li
611.266 543.406 li
611.266 555.974 li
606.12 555.974 li
606.12 561.512 li
592.213 561.512 li
592.213 546.6 li
588.022 546.6 li
588.022 549.375 li
583.069 549.375 li
583.069 551.288 li
569.162 551.288 li
569.162 547.453 li
568.372 547.453 li
568.372 542.679 li
586.547 542.679 li
586.547 542.07 li
587.089 542.07 li
587.089 535.162 li
586.547 535.162 li
586.002 535.162 li
586.002 541.463 li
563.208 541.463 li
563.208 539.538 li
563.788 539.538 li
563.788 538.93 li
564.333 538.93 li
564.333 537.261 li
566.317 537.261 li
566.317 536.652 li
566.861 536.652 li
566.861 531.705 li
566.317 531.705 li
565.773 531.705 li
565.773 536.045 li
563.788 536.045 li
563.788 536.652 li
563.246 536.652 li
563.246 538.322 li
559.854 538.322 li
551.97 538.322 li
551.97 538.144 li
551.97 536.652 li
551.97 535.162 li
551.427 535.162 li
551.427 534.553 li
546.771 534.553 li
546.771 531.705 li
546.229 531.705 li
545.685 531.705 li
545.685 535.162 li
546.229 535.162 li
546.229 535.77 li
550.883 535.77 li
550.883 536.652 li
550.883 538.144 li
550.883 538.93 li
551.427 538.93 li
551.427 539.538 li
559.854 539.538 li
560.015 539.538 li
560.015 545.685 li
560.558 545.685 li
561.101 545.685 li
561.101 539.538 li
562.121 539.538 li
562.121 542.07 li
562.664 542.07 li
562.664 542.679 li
567.286 542.679 li
567.286 547.453 li
567.829 547.453 li
567.829 563.641 li
563.638 565.133 li
563.638 566.623 li
556.779 566.623 li
556.779 570.67 li
550.111 570.67 li
550.111 565.133 li
543.825 565.133 li
543.825 544.897 li
532.395 544.897 li
532.395 549.375 li
531.252 549.375 li
531.252 552.566 li
529.917 552.566 li
529.917 552.595 li
529.229 552.595 li
528.387 552.595 li
527.403 552.595 li
525.296 552.595 li
525.296 553.203 li
524.753 553.203 li
524.753 554.617 li
520.66 554.617 li
520.66 555.227 li
520.117 555.227 li
520.117 556.936 li
506.485 556.936 li
506.485 557.542 li
505.941 557.542 li
505.941 569.181 li
506.485 569.181 li
506.485 571.311 li
504.771 572.589 503.437 580.469 503.437 580.469 cv
501.912 580.469 li
501.15 573.865 498.674 570.883 498.674 570.883 cv
498.674 568.543 li
499.217 568.543 li
499.217 557.542 li
498.674 557.542 li
498.674 556.936 li
485.241 556.936 li
485.241 555.227 li
484.698 555.227 li
484.698 554.617 li
481.448 554.617 li
481.448 551.182 li
480.904 551.182 li
480.904 550.574 li
478.452 550.574 li
478.452 546.076 li
477.908 546.076 li
477.364 546.076 li
477.364 562.363 li
477.908 562.363 li
477.908 565.133 li
476.385 565.133 li
476.385 567.689 li
472.765 569.818 li
469.336 567.902 li
469.336 565.133 li
468.192 565.133 li
468.192 563.217 li
463.431 563.217 li
462.971 564.757 462.377 565.261 461.794 565.261 cv
460.685 565.261 459.62 563.43 459.62 563.43 cv
459.62 563.297 li
452.246 563.297 li
452.246 563.904 li
451.77 563.613 li
451.723 563.707 451.672 563.807 451.619 563.904 cv
451.611 563.904 li
451.582 563.904 li
451.553 563.904 li
451.522 563.904 li
451.491 563.904 li
451.462 563.904 li
451.432 563.904 li
451.4 563.904 li
451.371 563.904 li
451.341 563.904 li
451.31 563.904 li
451.28 563.904 li
451.249 563.904 li
451.22 563.904 li
451.189 563.904 li
451.159 563.904 li
451.129 563.904 li
451.099 563.904 li
451.069 563.904 li
451.039 563.904 li
451.009 563.904 li
450.978 563.904 li
450.948 563.904 li
450.919 563.904 li
450.887 563.904 li
450.856 563.904 li
450.827 563.904 li
450.798 563.904 li
450.767 563.904 li
450.736 563.904 li
450.707 563.904 li
450.677 563.904 li
450.646 563.904 li
450.616 563.904 li
450.587 563.904 li
450.556 563.904 li
450.525 563.904 li
450.494 563.904 li
450.465 563.904 li
450.434 563.904 li
450.405 563.904 li
450.374 563.904 li
450.345 563.904 li
450.314 563.904 li
450.284 563.904 li
450.254 563.904 li
450.224 563.904 li
450.193 563.904 li
450.164 563.904 li
450.132 563.904 li
450.103 563.904 li
450.072 563.904 li
450.042 563.904 li
450.012 563.904 li
449.981 563.904 li
449.952 563.904 li
449.922 563.904 li
449.891 563.904 li
449.861 563.904 li
449.832 563.904 li
449.801 563.904 li
449.77 563.904 li
449.739 563.904 li
449.71 563.904 li
449.68 563.904 li
449.649 563.904 li
449.619 563.904 li
449.59 563.904 li
449.56 563.904 li
449.529 563.904 li
449.499 563.904 li
449.469 563.904 li
449.439 563.904 li
449.409 563.904 li
449.377 563.904 li
449.349 563.904 li
449.317 563.904 li
449.287 563.904 li
449.257 563.904 li
449.228 563.904 li
449.197 563.904 li
449.167 563.904 li
449.137 563.904 li
449.106 563.904 li
449.075 563.904 li
449.046 563.904 li
449.016 563.904 li
448.985 563.904 li
448.955 563.904 li
448.925 563.904 li
448.895 563.904 li
448.864 563.904 li
448.835 563.904 li
448.805 563.904 li
448.774 563.904 li
448.745 563.904 li
448.714 563.904 li
448.685 563.904 li
448.654 563.904 li
448.622 563.904 li
448.594 563.904 li
448.563 563.904 li
448.532 563.904 li
448.502 563.904 li
448.474 563.904 li
448.442 563.904 li
448.412 563.904 li
448.382 563.904 li
448.371 563.904 li
448.316 563.802 448.271 563.709 448.239 563.64 cv
448.091 563.297 li
445.906 563.297 li
445.906 551.182 li
445.906 546.686 li
456.76 546.686 li
456.76 547.412 li
457.304 547.412 li
457.304 548.02 li
461.518 548.02 li
461.518 547.412 li
462.062 547.412 li
462.062 546.686 li
465.17 546.686 li
465.17 546.076 li
465.714 546.076 li
465.714 531.705 li
465.17 531.705 li
464.627 531.705 li
464.627 545.469 li
461.518 545.469 li
461.518 546.076 li
460.976 546.076 li
460.976 546.803 li
457.847 546.803 li
457.847 546.076 li
457.304 546.076 li
457.304 545.469 li
445.363 545.469 li
445.363 546.076 li
444.818 546.076 li
444.818 550.574 li
439.022 550.574 li
439.022 547.412 li
438.479 547.412 li
438.479 546.803 li
436.495 546.803 li
436.495 546.076 li
435.95 546.076 li
435.95 545.469 li
429.488 545.469 li
429.488 546.076 li
428.945 546.076 li
428.945 546.803 li
417.529 546.803 li
417.529 544.74 li
416.985 544.74 li
416.985 544.134 li
410.384 544.134 li
410.384 544.74 li
410.384 545.349 li
416.442 545.349 li
416.442 547.412 li
416.985 547.412 li
416.985 548.02 li
429.488 548.02 li
429.488 547.412 li
430.032 547.412 li
430.032 546.686 li
435.408 546.686 li
435.408 547.412 li
435.95 547.412 li
435.95 548.02 li
437.936 548.02 li
437.936 551.182 li
438.479 551.182 li
438.479 551.789 li
444.818 551.789 li
444.818 563.904 li
445.363 563.904 li
445.363 564.512 li
447.427 564.512 li
447.787 565.203 448.687 566.639 449.971 566.675 cv
449.992 566.675 450.013 566.676 450.034 566.676 cv
450.957 566.676 451.796 565.935 452.556 564.512 cv
459.62 564.512 li
459.62 579.403 li
454.668 579.403 li
454.668 581.108 li
442.476 581.108 li
442.476 579.615 li
440.379 579.615 li
437.331 577.273 li
437.331 568.754 li
437.875 568.754 li
437.875 549.375 li
437.331 549.375 li
436.788 549.375 li
436.788 568.754 li
434.637 568.754 li
434.637 552.281 li
434.093 552.281 li
433.549 552.281 li
433.549 568.754 li
434.093 568.754 li
434.093 587.496 li
415.994 590.267 li
484.997 540.5 mo
484.997 546.076 li
485.54 546.076 li
485.54 546.686 li
498.375 546.686 li
498.72 547.25 499.516 548.353 500.61 548.353 cv
500.636 548.353 500.662 548.353 500.689 548.352 cv
501.525 548.314 502.261 547.621 502.878 546.291 cv
508.72 546.291 li
509.04 546.762 509.726 547.618 510.628 547.618 cv
510.657 547.618 510.686 547.617 510.715 547.615 cv
511.33 547.574 511.858 547.129 512.281 546.291 cv
514.339 546.291 li
514.339 545.685 li
514.883 545.685 li
514.883 542.309 li
514.883 541.895 li
528.387 541.895 li
528.387 541.285 li
528.931 541.285 li
528.931 531.705 li
528.387 531.705 li
527.844 531.705 li
527.844 540.68 li
494.109 540.68 li
494.109 541.285 li
494.109 541.895 li
513.796 541.895 li
513.796 542.309 li
513.796 545.076 li
511.607 545.076 li
511.46 545.424 li
511.413 545.537 511.362 545.631 511.312 545.727 cv
511.308 545.727 li
511.182 545.728 li
511.057 545.728 li
510.929 545.73 li
510.803 545.732 li
510.677 545.732 li
510.55 545.736 li
510.424 545.737 li
510.298 545.74 li
510.171 545.742 li
510.045 545.744 li
509.919 545.744 li
509.792 545.746 li
509.722 545.746 li
509.612 545.604 509.521 545.465 509.46 545.359 cv
509.3 545.076 li
502.192 545.076 li
502.046 545.429 li
501.982 545.58 501.918 545.721 501.852 545.855 cv
501.835 545.855 li
501.708 545.855 li
501.582 545.858 li
501.455 545.859 li
501.328 545.861 li
501.202 545.863 li
501.077 545.865 li
500.951 545.867 li
500.823 545.869 li
500.697 545.869 li
500.571 545.873 li
500.445 545.874 li
500.318 545.877 li
500.192 545.878 li
500.065 545.878 li
499.94 545.881 li
499.813 545.883 li
499.687 545.885 li
499.561 545.885 li
499.434 545.889 li
499.308 545.89 li
499.211 545.891 li
499.145 545.776 li
498.99 545.469 li
486.084 545.469 li
486.084 540.5 li
485.54 540.5 li
484.997 540.5 li
544.982 537.674 mo
544.982 546.47 li
545.526 546.47 li
545.526 547.078 li
560.558 547.078 li
560.558 546.47 li
560.558 545.861 li
546.069 545.861 li
546.069 537.674 li
545.526 537.674 li
544.982 537.674 li
579.119 531.699 mo
579.119 533.438 li
579.663 533.438 li
579.663 534.041 li
594.292 534.041 li
594.292 542.309 li
594.835 542.309 li
594.835 542.914 li
605.531 542.914 li
605.531 543.955 li
606.073 543.955 li
606.073 544.565 li
609.023 544.565 li
609.023 543.955 li
609.567 543.955 li
609.567 538.281 li
616.329 538.281 li
616.329 537.674 li
616.712 538.103 li
619.54 534.941 li
619.155 534.514 li
618.77 534.084 li
616.103 537.066 li
609.023 537.066 li
600.015 537.066 li
600.015 536.094 li
599.47 536.094 li
598.928 536.094 li
598.928 537.674 li
599.47 537.674 li
599.47 538.281 li
608.479 538.281 li
608.479 543.349 li
606.617 543.349 li
606.617 542.309 li
606.073 542.309 li
606.073 541.699 li
595.378 541.699 li
595.378 533.432 li
594.835 533.432 li
594.835 532.824 li
580.206 532.824 li
580.206 531.699 li
579.663 531.699 li
579.119 531.699 li
493.566 531.705 mo
493.566 540.5 li
494.109 540.5 li
494.653 540.5 li
494.653 531.705 li
494.109 531.705 li
493.566 531.705 li
f
351.717 639.625 mo
351.717 640.826 352.244 641.281 353.084 641.281 cv
353.925 641.281 354.452 640.826 354.452 639.625 cv
354.452 630.553 li
354.452 629.353 353.925 628.896 353.084 628.896 cv
352.244 628.896 351.717 629.353 351.717 630.553 cv
351.717 639.625 li
cp
349.076 630.721 mo
349.076 628.032 350.492 626.496 353.084 626.496 cv
355.677 626.496 357.093 628.032 357.093 630.721 cv
357.093 639.457 li
357.093 642.146 355.677 643.682 353.084 643.682 cv
350.492 643.682 349.076 642.146 349.076 639.457 cv
349.076 630.721 li
cp
.912474 .787625 .619837 .97467 cmyk
f
361.293 638.161 mo
363.837 638.161 li
362.589 629.664 li
362.541 629.664 li
361.293 638.161 li
cp
367.317 643.49 mo
364.653 643.49 li
364.197 640.441 li
360.957 640.441 li
360.501 643.49 li
358.076 643.49 li
360.765 626.688 li
364.629 626.688 li
367.317 643.49 li
cp
f
371.996 636.793 mo
371.181 638.329 li
371.181 643.49 li
368.54 643.49 li
368.54 626.688 li
371.181 626.688 li
371.181 633.961 li
371.229 633.961 li
374.637 626.688 li
377.277 626.688 li
373.604 634.177 li
377.277 643.49 li
374.564 643.49 li
371.996 636.793 li
cp
f
378.476 626.688 mo
381.116 626.688 li
381.116 641.09 li
385.46 641.09 li
385.46 643.49 li
378.476 643.49 li
378.476 626.688 li
cp
f
389.132 638.161 mo
391.676 638.161 li
390.428 629.664 li
390.38 629.664 li
389.132 638.161 li
cp
395.156 643.49 mo
392.492 643.49 li
392.036 640.441 li
388.796 640.441 li
388.34 643.49 li
385.915 643.49 li
388.604 626.688 li
392.468 626.688 li
395.156 643.49 li
cp
f
398.779 631.32 mo
398.731 631.32 li
398.731 643.49 li
396.355 643.49 li
396.355 626.688 li
399.667 626.688 li
402.331 636.745 li
402.38 636.745 li
402.38 626.688 li
404.731 626.688 li
404.731 643.49 li
402.02 643.49 li
398.779 631.32 li
cp
f
409.268 629.088 mo
409.268 641.09 li
410.756 641.09 li
411.596 641.09 412.1 640.658 412.1 639.457 cv
412.1 630.721 li
412.1 629.521 411.596 629.088 410.756 629.088 cv
409.268 629.088 li
cp
406.627 626.688 mo
410.804 626.688 li
413.443 626.688 414.74 628.152 414.74 630.841 cv
414.74 639.338 li
414.74 642.025 413.443 643.49 410.804 643.49 cv
406.627 643.49 li
406.627 626.688 li
cp
f
566.73 328.764 mo
566.73 329.133 li
559.881 329.133 li
559.881 333.516 li
559.514 333.516 li
559.514 333.885 li
557.598 333.885 li
557.598 337.404 li
566.73 337.404 li
566.73 337.771 li
567.099 337.771 li
567.099 341.56 li
574.717 341.56 li
574.717 339.139 li
575.087 339.139 li
575.087 338.771 li
579.203 338.771 li
580.89 334.782 li
581.229 334.926 li
581.229 334.557 li
591.673 334.557 li
591.673 334.926 li
592.008 334.768 li
593.359 337.615 li
593.025 337.771 li
592.692 337.932 li
591.441 335.294 li
581.474 335.294 li
580.004 338.771 li
583.809 338.771 li
583.809 339.139 li
584.178 339.139 li
584.178 341.56 li
587.864 341.56 li
587.864 341.93 li
588.234 341.93 li
588.234 343.526 li
589.954 343.526 li
589.954 341.192 li
590.322 341.192 li
590.322 340.822 li
593.438 340.822 li
596.268 319.75 li
596.26 319.75 li
596.248 319.75 li
596.236 319.75 li
596.222 319.75 li
596.211 319.75 li
596.197 319.75 li
596.185 319.75 li
596.172 319.75 li
596.159 319.75 li
596.146 319.75 li
596.135 319.75 li
596.122 319.75 li
596.107 319.75 li
596.097 319.75 li
596.084 319.75 li
596.07 319.75 li
596.059 319.75 li
596.045 319.75 li
596.032 319.75 li
596.021 319.75 li
596.008 319.75 li
595.995 319.75 li
595.984 319.75 li
595.97 319.75 li
595.957 319.75 li
595.945 319.75 li
595.933 319.75 li
595.92 319.75 li
595.907 319.75 li
595.895 319.75 li
595.883 319.75 li
595.869 319.75 li
595.857 319.75 li
595.843 319.75 li
595.83 319.75 li
595.818 319.75 li
595.806 319.75 li
595.793 319.75 li
595.78 319.75 li
595.768 319.75 li
595.756 319.75 li
595.743 319.75 li
595.73 319.75 li
595.717 319.75 li
595.705 319.75 li
595.693 319.75 li
595.681 319.75 li
595.668 319.75 li
595.655 319.75 li
595.641 319.75 li
595.63 319.75 li
595.616 319.75 li
595.604 319.75 li
595.591 319.75 li
595.578 319.75 li
595.566 319.75 li
595.554 319.75 li
595.541 319.75 li
595.528 319.75 li
595.516 319.75 li
595.504 319.75 li
595.491 319.75 li
595.479 319.75 li
595.466 319.75 li
595.451 319.75 li
595.441 319.75 li
595.428 319.75 li
595.416 319.75 li
595.403 319.75 li
595.391 319.75 li
595.377 319.75 li
595.364 319.75 li
595.352 319.75 li
595.339 319.75 li
595.326 319.75 li
595.314 319.75 li
595.302 319.75 li
595.287 319.75 li
595.276 319.75 li
595.264 319.75 li
595.252 319.75 li
595.238 319.75 li
595.227 319.75 li
595.212 319.75 li
595.201 319.75 li
595.188 319.75 li
595.175 319.75 li
595.162 319.75 li
595.149 319.75 li
595.137 319.75 li
595.126 319.75 li
595.112 319.75 li
595.1 319.75 li
595.087 319.75 li
595.074 319.75 li
595.063 319.75 li
595.05 319.75 li
595.037 319.75 li
595.023 319.75 li
595.012 319.75 li
594.998 319.75 li
594.985 319.75 li
594.975 319.75 li
594.962 319.75 li
594.947 319.75 li
594.936 319.75 li
594.923 319.75 li
594.91 319.75 li
594.897 319.75 li
594.885 319.75 li
594.873 319.75 li
594.86 319.75 li
594.848 319.75 li
594.835 319.75 li
594.821 319.75 li
594.811 319.75 li
594.797 319.75 li
594.783 319.75 li
594.772 319.75 li
594.758 319.75 li
594.746 319.75 li
594.733 319.75 li
594.721 319.75 li
594.708 319.75 li
594.697 319.75 li
594.684 319.75 li
594.671 319.75 li
594.658 319.75 li
594.646 319.75 li
594.633 319.75 li
594.621 319.75 li
594.608 319.75 li
594.596 319.75 li
594.583 319.75 li
594.57 319.75 li
594.557 319.75 li
594.545 319.75 li
594.531 319.75 li
594.521 319.75 li
594.508 319.75 li
594.495 319.75 li
594.481 319.75 li
594.469 319.75 li
594.456 319.75 li
594.443 319.75 li
594.43 319.75 li
594.419 319.75 li
594.406 319.75 li
594.393 319.75 li
594.381 319.75 li
594.369 319.75 li
594.354 319.75 li
594.344 319.75 li
594.331 319.75 li
594.316 319.75 li
594.305 319.75 li
594.292 319.75 li
594.279 319.75 li
594.267 319.75 li
594.254 319.75 li
594.242 319.75 li
594.229 319.75 li
594.217 319.75 li
594.204 319.75 li
594.191 319.75 li
594.178 319.75 li
594.165 319.75 li
594.154 319.75 li
594.142 319.75 li
594.127 319.75 li
594.116 319.75 li
594.103 319.75 li
594.09 319.75 li
594.079 319.75 li
594.064 319.75 li
594.053 319.75 li
594.041 319.75 li
594.027 319.75 li
594.015 319.75 li
594.002 319.75 li
593.99 319.75 li
593.978 319.75 li
593.965 319.75 li
593.952 319.75 li
593.939 319.75 li
593.926 319.75 li
593.914 319.75 li
593.9 319.75 li
593.888 319.75 li
593.875 319.75 li
593.863 319.75 li
593.851 319.75 li
593.838 319.75 li
593.825 319.75 li
593.813 319.75 li
593.801 319.75 li
593.788 319.75 li
593.775 319.75 li
593.763 319.75 li
590.875 319.75 li
590.875 333.204 li
584.426 333.204 li
584.426 332.702 li
578.525 332.702 li
578.525 334.065 li
578.158 334.065 li
578.158 334.435 li
575.279 334.435 li
573.856 336.465 li
573.856 341.192 li
573.488 341.192 li
573.119 341.192 li
573.119 336.349 li
573.488 336.349 li
573.187 336.138 li
574.785 333.854 li
575.087 334.065 li
575.087 333.697 li
577.789 333.697 li
577.789 332.334 li
578.158 332.334 li
578.158 331.965 li
584.426 331.965 li
584.426 331.547 li
583.134 331.547 li
583.134 330.072 li
571.154 330.072 li
571.154 328.598 li
569.495 328.598 li
569.495 325.636 li
567.099 325.636 li
567.099 328.764 li
566.73 328.764 li
cp
f
450.615 352.749 mo
450.248 352.749 li
449.879 352.749 li
449.879 320.705 li
434.626 320.705 li
434.626 337.519 li
434.256 337.519 li
433.889 337.519 li
433.889 320.336 li
434.256 320.336 li
434.256 319.968 li
450.248 319.968 li
450.248 320.336 li
450.615 320.336 li
450.615 352.749 li
443.013 353.512 mo
442.709 353.72 li
436.537 344.74 li
424.918 344.74 li
424.918 352.749 li
424.548 352.749 li
424.18 352.749 li
424.18 344.373 li
424.548 344.373 li
424.548 344.004 li
436.363 344.004 li
436.363 339.601 li
422.252 339.601 li
422.252 341.518 li
421.884 341.518 li
421.884 341.886 li
420.17 341.886 li
420.17 341.518 li
419.801 341.518 li
419.801 337.318 li
416.541 337.318 li
416.541 341.518 li
416.173 341.518 li
416.173 341.886 li
409.129 341.886 li
409.129 341.518 li
409.129 341.148 li
415.805 341.148 li
415.805 327.621 li
416.173 327.621 li
416.541 327.621 li
416.541 336.579 li
420.17 336.579 li
420.17 336.948 li
420.537 336.948 li
420.537 341.148 li
421.515 341.148 li
421.515 339.233 li
421.884 339.233 li
421.884 338.864 li
436.731 338.864 li
436.731 339.233 li
437.101 339.233 li
437.101 344.259 li
443.316 353.302 li
443.013 353.512 li
612.193 337.841 mo
611.825 337.841 li
611.825 338.209 li
611.334 338.209 li
611.334 342.543 li
610.966 342.543 li
610.597 342.543 li
610.597 337.841 li
610.966 337.841 li
610.966 337.472 li
611.456 337.472 li
611.456 335.208 li
611.825 335.208 li
612.193 335.208 li
612.193 337.841 li
627.736 332.284 mo
627.736 333.389 li
625.34 333.389 li
625.34 331.361 li
622.576 331.361 li
622.576 333.389 li
614.281 333.389 li
614.281 334.863 li
614.65 334.863 li
614.65 337.472 li
616.984 337.472 li
616.984 337.841 li
617.352 337.841 li
617.352 340.822 li
617.846 340.822 li
617.846 341.192 li
618.213 341.192 li
618.213 344.879 li
618.827 344.879 li
618.827 345.248 li
619.196 345.248 li
619.196 353.725 li
618.827 353.725 li
618.459 353.725 li
618.459 345.616 li
617.846 345.616 li
617.846 345.248 li
617.477 345.248 li
617.477 341.56 li
616.984 341.56 li
616.984 341.192 li
616.615 341.192 li
616.615 338.209 li
614.281 338.209 li
614.281 337.841 li
613.913 337.841 li
613.913 334.863 li
608.567 334.863 li
609.453 343.526 li
610.966 343.526 li
610.966 343.896 li
611.334 343.896 li
611.334 346.229 li
612.685 346.229 li
612.685 346.599 li
613.053 346.599 li
613.053 352.749 li
612.685 352.749 li
612.316 352.749 li
612.316 346.967 li
610.966 346.967 li
610.966 346.599 li
610.597 346.599 li
610.597 344.264 li
609.122 344.264 li
609.122 343.896 li
608.754 343.933 li
607.749 334.102 li
608.115 334.065 li
606.599 319.75 li
606.303 319.75 li
605.893 316.115 li
604.817 309.669 li
604.817 301.992 li
603.588 301.992 li
601.9 285.719 li
601.655 285.719 li
601.286 285.719 li
601.041 285.719 li
599.353 301.992 li
598.124 301.992 li
598.124 309.669 li
597.049 316.115 li
596.639 319.75 li
597.003 319.8 li
594.183 340.822 li
607.032 340.822 li
607.032 341.192 li
607.032 341.56 li
593.763 341.56 li
590.691 341.56 li
590.691 343.896 li
590.322 343.896 li
590.322 344.264 li
588.234 344.264 li
588.234 352.749 li
587.864 352.749 li
587.497 352.749 li
587.497 342.297 li
583.809 342.297 li
583.809 341.93 li
583.441 341.93 li
583.441 339.508 li
575.455 339.508 li
575.455 341.93 li
575.087 341.93 li
575.087 342.297 li
567.099 342.297 li
567.099 352.749 li
566.73 352.749 li
566.363 352.749 li
566.363 338.142 li
557.229 338.142 li
549.031 338.142 li
549.031 352.749 li
548.662 352.749 li
548.295 352.749 li
548.295 337.771 li
548.662 337.771 li
548.662 337.404 li
556.861 337.404 li
556.861 333.516 li
557.229 333.516 li
557.229 333.148 li
559.144 333.148 li
559.144 328.764 li
559.514 328.764 li
559.514 328.396 li
566.363 328.396 li
566.363 325.636 li
566.73 325.636 li
566.73 297.634 li
563.045 297.634 li
563.045 295.053 li
550.513 295.053 li
550.513 297.634 li
546.687 297.634 li
546.687 326.174 li
546.948 325.916 li
548.447 327.414 li
548.186 327.674 li
548.556 327.674 li
548.556 335.645 li
548.186 335.645 li
547.818 335.645 li
547.818 327.827 li
546.427 326.436 li
546.687 326.174 li
543.914 326.174 li
543.914 324.244 li
531.612 324.244 li
531.612 314.477 li
529.803 314.477 li
529.803 309.049 li
512.436 309.049 li
512.436 313.994 li
510.867 313.994 li
510.867 322.43 li
516.873 322.43 li
516.873 322.798 li
517.241 322.798 li
517.241 325.158 li
526.201 325.158 li
526.201 325.527 li
526.569 325.527 li
526.569 326.111 li
542 326.111 li
542 326.479 li
542 326.849 li
526.569 326.849 li
526.569 338.77 li
531.544 338.77 li
531.544 336.543 li
531.912 336.543 li
531.912 336.174 li
542 336.174 li
542 336.543 li
542.369 336.543 li
542.369 352.749 li
542 352.749 li
541.631 352.749 li
541.631 336.911 li
532.281 336.911 li
532.281 339.139 li
531.912 339.139 li
531.912 339.508 li
526.201 339.508 li
514.238 339.508 li
514.238 352.749 li
513.871 352.749 li
513.502 352.749 li
513.502 339.139 li
513.871 339.139 li
513.871 338.77 li
525.832 338.77 li
525.832 325.895 li
516.873 325.895 li
516.873 325.527 li
516.504 325.527 li
516.504 323.167 li
510.867 323.167 li
510.867 322.798 li
508.336 322.798 li
508.336 323.167 li
500.49 323.167 li
500.49 352.749 li
500.121 352.749 li
499.753 352.749 li
499.753 322.798 li
500.121 322.798 li
500.121 322.43 li
508.336 322.43 li
508.336 309.169 li
505.682 309.169 li
505.682 307.481 li
501.943 307.481 li
501.943 309.169 li
500.615 309.169 li
500.615 307.359 li
496.395 307.359 li
496.395 309.124 li
493.867 309.124 li
493.867 318.708 li
490.674 318.708 li
490.674 320.428 li
488.463 320.428 li
488.463 321.533 li
493.84 321.533 li
493.84 321.9 li
494.207 321.9 li
494.207 325.158 li
497.266 325.158 li
497.266 325.527 li
497.635 325.527 li
497.635 352.749 li
497.266 352.749 li
496.898 352.749 li
496.898 325.895 li
493.84 325.895 li
493.84 325.527 li
493.47 325.527 li
493.47 322.271 li
488.463 322.271 li
488.463 321.9 li
486.251 321.9 li
486.251 315.267 li
484.776 315.267 li
484.776 313.056 li
471.996 313.056 li
471.996 314.282 li
470.892 314.282 li
470.892 316.178 li
474.423 316.178 li
474.423 316.546 li
474.791 316.546 li
474.791 321.533 li
485.273 321.533 li
485.273 321.9 li
485.273 322.271 li
474.791 322.271 li
474.791 352.749 li
474.423 352.749 li
474.055 352.749 li
474.055 316.915 li
470.892 316.915 li
470.892 352.749 li
470.523 352.749 li
470.154 352.749 li
470.154 314.282 li
470.523 314.282 li
470.523 310.843 li
468.802 310.843 li
468.802 305.679 li
451.108 305.679 li
451.108 306.91 li
443.246 306.91 li
443.246 314.036 li
443.614 314.036 li
443.614 319.055 li
443.246 319.055 li
442.877 319.055 li
442.877 314.036 li
438.575 314.036 li
438.575 315.759 li
427.765 315.759 li
427.765 317.478 li
417.443 317.478 li
417.443 321.533 li
430.641 321.533 li
430.641 321.9 li
431.008 321.9 li
431.008 337.519 li
430.641 337.519 li
430.272 337.519 li
430.272 322.271 li
417.443 322.271 li
417.443 321.9 li
415.969 321.9 li
415.969 326.816 li
413.266 326.816 li
413.266 322.393 li
411.299 322.393 li
411.299 319.443 li
411.299 319.443 408.596 319.443 407.121 319.443 cv
407.121 354.953 li
632.713 354.953 li
632.713 336.717 li
627.553 336.717 li
627.553 353.725 li
627.185 353.725 li
626.814 353.725 li
626.814 342.297 li
626.199 342.297 li
626.199 341.93 li
625.832 341.93 li
625.832 339.139 li
625.586 339.139 li
625.586 338.77 li
625.217 338.77 li
625.217 335.294 li
624.479 335.294 li
624.479 341.192 li
624.111 341.192 li
624.111 341.56 li
623.252 341.56 li
623.252 341.192 li
622.883 341.192 li
622.883 339.139 li
622.759 339.139 li
622.759 341.93 li
622.392 341.93 li
622.392 342.297 li
622.023 342.297 li
622.023 344.646 li
621.654 344.646 li
621.654 345.015 li
621.162 345.015 li
621.162 348.193 li
620.795 348.193 li
620.795 348.564 li
620.303 348.564 li
620.303 353.725 li
619.934 353.725 li
619.566 353.725 li
619.566 348.193 li
619.934 348.193 li
619.934 347.826 li
620.426 347.826 li
620.426 344.646 li
620.795 344.646 li
620.795 344.277 li
621.286 344.277 li
621.286 341.93 li
621.654 341.93 li
621.654 341.56 li
622.023 341.56 li
622.023 338.77 li
622.392 338.77 li
622.392 338.402 li
623.252 338.402 li
623.252 338.77 li
623.62 338.77 li
623.62 340.822 li
623.742 340.822 li
623.742 334.926 li
624.111 334.926 li
624.111 334.557 li
625.586 334.557 li
625.586 334.926 li
625.954 334.926 li
625.954 338.402 li
626.199 338.402 li
626.199 338.77 li
626.569 338.77 li
626.569 341.56 li
626.814 341.56 li
626.814 336.349 li
627.185 336.349 li
627.185 335.981 li
632.713 335.981 li
632.713 332.284 li
627.736 332.284 li
f
416.459 427.96 mo
418.517 427.96 419.575 429.19 419.575 431.345 cv
419.575 431.769 li
417.574 431.769 li
417.574 431.21 li
417.574 430.249 417.189 429.883 416.517 429.883 cv
415.844 429.883 415.458 430.249 415.458 431.21 cv
415.458 432.191 415.882 432.923 417.266 434.134 cv
419.035 435.693 419.594 436.81 419.594 438.348 cv
419.594 440.502 418.517 441.733 416.439 441.733 cv
414.361 441.733 413.285 440.502 413.285 438.348 cv
413.285 437.52 li
415.285 437.52 li
415.285 438.482 li
415.285 439.443 415.709 439.79 416.382 439.79 cv
417.055 439.79 417.479 439.443 417.479 438.482 cv
417.479 437.501 417.055 436.771 415.67 435.559 cv
413.9 433.999 413.342 432.885 413.342 431.345 cv
413.342 429.19 414.4 427.96 416.459 427.96 cv
cp
f
422.825 437.309 mo
424.864 437.309 li
423.864 430.499 li
423.826 430.499 li
422.825 437.309 li
cp
427.654 441.579 mo
425.519 441.579 li
425.153 439.137 li
422.557 439.137 li
422.19 441.579 li
420.247 441.579 li
422.402 428.113 li
425.499 428.113 li
427.654 441.579 li
cp
f
430.558 431.827 mo
430.52 431.827 li
430.52 441.579 li
428.615 441.579 li
428.615 428.113 li
431.269 428.113 li
433.404 436.174 li
433.443 436.174 li
433.443 428.113 li
435.328 428.113 li
435.328 441.579 li
433.154 441.579 li
430.558 431.827 li
cp
f
441.944 434.097 mo
444.676 434.097 li
444.676 436.021 li
441.944 436.021 li
441.944 441.579 li
439.828 441.579 li
439.828 428.113 li
445.426 428.113 li
445.426 430.037 li
441.944 430.037 li
441.944 434.097 li
cp
f
448.562 430.037 mo
448.562 434.173 li
449.389 434.173 li
450.177 434.173 450.658 433.827 450.658 432.75 cv
450.658 431.423 li
450.658 430.46 450.331 430.037 449.58 430.037 cv
448.562 430.037 li
cp
450.869 441.579 mo
450.754 441.232 450.677 441.021 450.677 439.924 cv
450.677 437.81 li
450.677 436.559 450.254 436.097 449.292 436.097 cv
448.562 436.097 li
448.562 441.579 li
446.445 441.579 li
446.445 428.113 li
449.639 428.113 li
451.831 428.113 452.773 429.133 452.773 431.21 cv
452.773 432.269 li
452.773 433.653 452.331 434.538 451.389 434.98 cv
451.389 435.021 li
452.447 435.462 452.793 436.462 452.793 437.866 cv
452.793 439.944 li
452.793 440.599 452.812 441.079 453.023 441.579 cv
450.869 441.579 li
cp
f
456.197 437.309 mo
458.236 437.309 li
457.235 430.499 li
457.197 430.499 li
456.197 437.309 li
cp
461.025 441.579 mo
458.891 441.579 li
458.524 439.137 li
455.928 439.137 li
455.563 441.579 li
453.619 441.579 li
455.773 428.113 li
458.871 428.113 li
461.025 441.579 li
cp
f
463.929 431.827 mo
463.891 431.827 li
463.891 441.579 li
461.986 441.579 li
461.986 428.113 li
464.641 428.113 li
466.776 436.174 li
466.814 436.174 li
466.814 428.113 li
468.699 428.113 li
468.699 441.579 li
466.525 441.579 li
463.929 431.827 li
cp
f
476.355 436.559 mo
476.355 438.348 li
476.355 440.502 475.277 441.733 473.2 441.733 cv
471.122 441.733 470.045 440.502 470.045 438.348 cv
470.045 431.345 li
470.045 429.19 471.122 427.96 473.2 427.96 cv
475.277 427.96 476.355 429.19 476.355 431.345 cv
476.355 432.653 li
474.354 432.653 li
474.354 431.21 li
474.354 430.249 473.932 429.883 473.258 429.883 cv
472.584 429.883 472.162 430.249 472.162 431.21 cv
472.162 438.482 li
472.162 439.443 472.584 439.79 473.258 439.79 cv
473.932 439.79 474.354 439.443 474.354 438.482 cv
474.354 436.559 li
476.355 436.559 li
cp
f
477.643 428.113 mo
479.759 428.113 li
479.759 441.579 li
477.643 441.579 li
477.643 428.113 li
cp
f
484.145 427.96 mo
486.203 427.96 487.26 429.19 487.26 431.345 cv
487.26 431.769 li
485.26 431.769 li
485.26 431.21 li
485.26 430.249 484.875 429.883 484.201 429.883 cv
483.528 429.883 483.145 430.249 483.145 431.21 cv
483.145 432.191 483.566 432.923 484.952 434.134 cv
486.722 435.693 487.279 436.81 487.279 438.348 cv
487.279 440.502 486.203 441.733 484.125 441.733 cv
482.048 441.733 480.97 440.502 480.97 438.348 cv
480.97 437.52 li
482.971 437.52 li
482.971 438.482 li
482.971 439.443 483.394 439.79 484.066 439.79 cv
484.74 439.79 485.164 439.443 485.164 438.482 cv
485.164 437.501 484.74 436.771 483.355 435.559 cv
481.586 433.999 481.027 432.885 481.027 431.345 cv
481.027 429.19 482.086 427.96 484.145 427.96 cv
cp
f
494.627 436.559 mo
494.627 438.348 li
494.627 440.502 493.55 441.733 491.473 441.733 cv
489.395 441.733 488.317 440.502 488.317 438.348 cv
488.317 431.345 li
488.317 429.19 489.395 427.96 491.473 427.96 cv
493.55 427.96 494.627 429.19 494.627 431.345 cv
494.627 432.653 li
492.626 432.653 li
492.626 431.21 li
492.626 430.249 492.203 429.883 491.529 429.883 cv
490.856 429.883 490.434 430.249 490.434 431.21 cv
490.434 438.482 li
490.434 439.443 490.856 439.79 491.529 439.79 cv
492.203 439.79 492.626 439.443 492.626 438.482 cv
492.626 436.559 li
494.627 436.559 li
cp
f
497.858 438.482 mo
497.858 439.443 498.281 439.81 498.954 439.81 cv
499.628 439.81 500.051 439.443 500.051 438.482 cv
500.051 431.21 li
500.051 430.249 499.628 429.883 498.954 429.883 cv
498.281 429.883 497.858 430.249 497.858 431.21 cv
497.858 438.482 li
cp
495.742 431.345 mo
495.742 429.19 496.877 427.96 498.954 427.96 cv
501.032 427.96 502.167 429.19 502.167 431.345 cv
502.167 438.348 li
502.167 440.502 501.032 441.733 498.954 441.733 cv
496.877 441.733 495.742 440.502 495.742 438.348 cv
495.742 431.345 li
cp
f
596.268 383.882 mo
596.26 383.882 li
596.248 383.882 li
596.236 383.882 li
596.222 383.882 li
596.211 383.882 li
596.197 383.882 li
596.184 383.882 li
596.172 383.882 li
596.159 383.882 li
596.145 383.882 li
596.135 383.882 li
596.122 383.882 li
596.107 383.882 li
596.097 383.882 li
596.084 383.882 li
596.07 383.882 li
596.059 383.882 li
596.045 383.882 li
596.032 383.882 li
596.021 383.882 li
596.008 383.882 li
595.995 383.882 li
595.984 383.882 li
595.97 383.882 li
595.957 383.882 li
595.945 383.882 li
595.933 383.882 li
595.92 383.882 li
595.907 383.882 li
595.895 383.882 li
595.883 383.882 li
595.869 383.882 li
595.857 383.882 li
595.843 383.882 li
595.83 383.882 li
595.818 383.882 li
595.806 383.882 li
595.793 383.882 li
595.78 383.882 li
595.768 383.882 li
595.756 383.882 li
595.743 383.882 li
595.73 383.882 li
595.717 383.882 li
595.705 383.882 li
595.693 383.882 li
595.681 383.882 li
595.668 383.882 li
595.655 383.882 li
595.641 383.882 li
595.63 383.882 li
595.616 383.882 li
595.603 383.882 li
595.591 383.882 li
595.578 383.882 li
595.566 383.882 li
595.554 383.882 li
595.541 383.882 li
595.528 383.882 li
595.516 383.882 li
595.504 383.882 li
595.491 383.882 li
595.478 383.882 li
595.466 383.882 li
595.451 383.882 li
595.441 383.882 li
595.428 383.882 li
595.416 383.882 li
595.403 383.882 li
595.391 383.882 li
595.377 383.882 li
595.364 383.882 li
595.352 383.882 li
595.339 383.882 li
595.326 383.882 li
595.314 383.882 li
595.302 383.882 li
595.287 383.882 li
595.276 383.882 li
595.264 383.882 li
595.252 383.882 li
595.238 383.882 li
595.227 383.882 li
595.212 383.882 li
595.201 383.882 li
595.188 383.882 li
595.175 383.882 li
595.162 383.882 li
595.149 383.882 li
595.137 383.882 li
595.126 383.882 li
595.112 383.882 li
595.1 383.882 li
595.087 383.882 li
595.074 383.882 li
595.063 383.882 li
595.05 383.882 li
595.037 383.882 li
595.023 383.882 li
595.012 383.882 li
594.998 383.882 li
594.985 383.882 li
594.975 383.882 li
594.962 383.882 li
594.947 383.882 li
594.935 383.882 li
594.923 383.882 li
594.91 383.882 li
594.897 383.882 li
594.885 383.882 li
594.873 383.882 li
594.86 383.882 li
594.848 383.882 li
594.835 383.882 li
594.821 383.882 li
594.81 383.882 li
594.797 383.882 li
594.783 383.882 li
594.772 383.882 li
594.758 383.882 li
594.746 383.882 li
594.733 383.882 li
594.721 383.882 li
594.708 383.882 li
594.697 383.882 li
594.684 383.882 li
594.671 383.882 li
594.658 383.882 li
594.645 383.882 li
594.633 383.882 li
594.621 383.882 li
594.608 383.882 li
594.596 383.882 li
594.583 383.882 li
594.57 383.882 li
594.557 383.882 li
594.545 383.882 li
594.531 383.882 li
594.521 383.882 li
594.508 383.882 li
594.495 383.882 li
594.482 383.882 li
594.469 383.882 li
594.456 383.882 li
594.443 383.882 li
594.43 383.882 li
594.419 383.882 li
594.406 383.882 li
594.393 383.882 li
594.381 383.882 li
594.369 383.882 li
594.354 383.882 li
594.344 383.882 li
594.331 383.882 li
594.316 383.882 li
594.305 383.882 li
594.292 383.882 li
594.279 383.882 li
594.267 383.882 li
594.254 383.882 li
594.242 383.882 li
594.229 383.882 li
594.217 383.882 li
594.204 383.882 li
594.191 383.882 li
594.178 383.882 li
594.165 383.882 li
594.154 383.882 li
594.142 383.882 li
594.127 383.882 li
594.116 383.882 li
594.102 383.882 li
594.09 383.882 li
594.079 383.882 li
594.064 383.882 li
594.053 383.882 li
594.041 383.882 li
594.027 383.882 li
594.015 383.882 li
594.002 383.882 li
593.99 383.882 li
593.978 383.882 li
593.965 383.882 li
593.952 383.882 li
593.939 383.882 li
593.926 383.882 li
593.914 383.882 li
593.9 383.882 li
593.888 383.882 li
593.875 383.882 li
593.863 383.882 li
593.851 383.882 li
593.838 383.882 li
593.825 383.882 li
593.813 383.882 li
593.801 383.882 li
593.788 383.882 li
593.775 383.882 li
593.763 383.882 li
590.875 383.882 li
590.875 372.826 li
584.426 372.826 li
584.426 373.239 li
578.525 373.239 li
578.525 372.118 li
578.158 372.118 li
578.158 371.814 li
575.279 371.814 li
573.856 370.147 li
573.856 366.263 li
573.488 366.263 li
573.119 366.263 li
573.119 370.241 li
573.488 370.241 li
573.187 370.415 li
574.785 372.292 li
575.087 372.118 li
575.087 372.422 li
577.789 372.422 li
577.789 373.541 li
578.158 373.541 li
578.158 373.845 li
584.426 373.845 li
584.426 374.19 li
583.134 374.19 li
583.134 375.399 li
571.154 375.399 li
571.154 376.612 li
569.495 376.612 li
569.495 379.045 li
567.099 379.045 li
567.099 376.475 li
566.73 376.475 li
566.73 376.173 li
559.881 376.173 li
559.881 372.571 li
559.514 372.571 li
559.514 372.268 li
557.598 372.268 li
557.598 369.374 li
566.73 369.374 li
566.73 369.072 li
567.099 369.072 li
567.099 365.961 li
574.717 365.961 li
574.717 367.95 li
575.087 367.95 li
575.087 368.252 li
579.203 368.252 li
580.89 371.53 li
581.228 371.411 li
581.228 371.715 li
591.673 371.715 li
591.673 371.411 li
592.008 371.541 li
593.359 369.201 li
593.025 369.072 li
592.692 368.94 li
591.441 371.108 li
581.474 371.108 li
580.004 368.252 li
583.809 368.252 li
583.809 367.95 li
584.178 367.95 li
584.178 365.961 li
587.864 365.961 li
587.864 365.657 li
588.234 365.657 li
588.234 364.345 li
589.954 364.345 li
589.954 366.263 li
590.322 366.263 li
590.322 366.566 li
593.438 366.566 li
596.268 383.882 li
.270756 .351293 .358556 .108919 cmyk
f
601.9 411.847 mo
601.655 411.847 li
601.286 411.847 li
601.041 411.847 li
599.353 398.474 li
598.124 398.474 li
598.124 392.166 li
597.049 386.869 li
596.639 383.882 li
597.003 383.842 li
594.183 366.566 li
607.032 366.566 li
607.032 366.263 li
607.032 365.961 li
593.763 365.961 li
590.691 365.961 li
590.691 364.041 li
590.322 364.041 li
590.322 363.737 li
588.234 363.737 li
588.234 356.766 li
587.864 356.766 li
587.497 356.766 li
587.497 365.354 li
583.809 365.354 li
583.809 365.657 li
583.441 365.657 li
583.441 367.646 li
575.455 367.646 li
575.455 365.657 li
575.087 365.657 li
575.087 365.354 li
567.099 365.354 li
567.099 356.766 li
566.73 356.766 li
566.363 356.766 li
566.363 368.769 li
557.229 368.769 li
549.031 368.769 li
549.031 356.766 li
548.662 356.766 li
548.295 356.766 li
548.295 369.072 li
548.662 369.072 li
548.662 369.374 li
556.861 369.374 li
556.861 372.571 li
557.229 372.571 li
557.229 372.873 li
559.144 372.873 li
559.144 376.475 li
559.514 376.475 li
559.514 376.778 li
566.363 376.778 li
566.363 379.045 li
566.73 379.045 li
566.73 402.056 li
563.045 402.056 li
563.045 404.177 li
550.513 404.177 li
550.513 402.056 li
546.687 402.056 li
546.687 378.603 li
546.948 378.815 li
548.447 377.585 li
548.186 377.372 li
548.556 377.372 li
548.556 370.821 li
548.186 370.821 li
547.818 370.821 li
547.818 377.245 li
546.427 378.39 li
546.687 378.603 li
543.914 378.603 li
543.914 380.189 li
531.612 380.189 li
531.612 388.217 li
529.803 388.217 li
529.803 392.676 li
512.436 392.676 li
512.436 388.612 li
510.867 388.612 li
510.867 381.68 li
516.873 381.68 li
516.873 381.378 li
517.241 381.378 li
517.241 379.438 li
526.201 379.438 li
526.201 379.135 li
526.569 379.135 li
526.569 378.655 li
542 378.655 li
542 378.352 li
542 378.05 li
526.569 378.05 li
526.569 368.252 li
531.544 368.252 li
531.544 370.084 li
531.912 370.084 li
531.912 370.387 li
542 370.387 li
542 370.084 li
542.369 370.084 li
542.369 356.766 li
542 356.766 li
541.631 356.766 li
541.631 369.78 li
532.281 369.78 li
532.281 367.95 li
531.912 367.95 li
531.912 367.646 li
526.201 367.646 li
514.238 367.646 li
514.238 356.766 li
513.871 356.766 li
513.502 356.766 li
513.502 367.95 li
513.871 367.95 li
513.871 368.252 li
525.832 368.252 li
525.832 378.832 li
516.873 378.832 li
516.873 379.135 li
516.504 379.135 li
516.504 381.074 li
510.867 381.074 li
510.867 381.378 li
508.336 381.378 li
508.336 381.074 li
500.49 381.074 li
500.49 356.766 li
500.121 356.766 li
499.753 356.766 li
499.753 381.378 li
500.121 381.378 li
500.121 381.68 li
508.336 381.68 li
508.336 392.577 li
505.682 392.577 li
505.682 393.965 li
501.943 393.965 li
501.943 392.577 li
500.615 392.577 li
500.615 394.063 li
496.395 394.063 li
496.395 392.615 li
493.867 392.615 li
493.867 384.738 li
490.674 384.738 li
490.674 383.325 li
488.463 383.325 li
488.463 382.417 li
493.84 382.417 li
493.84 382.115 li
494.207 382.115 li
494.207 379.438 li
497.266 379.438 li
497.266 379.135 li
497.635 379.135 li
497.635 356.766 li
497.266 356.766 li
496.898 356.766 li
496.898 378.832 li
493.84 378.832 li
493.84 379.135 li
493.47 379.135 li
493.47 381.812 li
488.463 381.812 li
488.463 382.115 li
486.251 382.115 li
486.251 387.566 li
484.776 387.566 li
484.776 389.383 li
471.996 389.383 li
471.996 388.375 li
470.892 388.375 li
470.892 386.817 li
474.423 386.817 li
474.423 386.515 li
474.791 386.515 li
474.791 382.417 li
485.273 382.417 li
485.273 382.115 li
485.273 381.812 li
474.791 381.812 li
474.791 356.766 li
474.423 356.766 li
474.055 356.766 li
474.055 386.211 li
470.892 386.211 li
470.892 356.766 li
470.523 356.766 li
470.154 356.766 li
470.154 388.375 li
470.523 388.375 li
470.523 391.201 li
468.802 391.201 li
468.802 395.445 li
451.108 395.445 li
451.108 394.433 li
443.246 394.433 li
443.246 388.576 li
443.614 388.576 li
443.614 384.453 li
443.246 384.453 li
442.877 384.453 li
442.877 388.576 li
438.575 388.576 li
438.575 387.163 li
427.765 387.163 li
427.765 385.749 li
417.443 385.749 li
417.443 382.417 li
430.641 382.417 li
430.641 382.115 li
431.008 382.115 li
431.008 369.279 li
430.641 369.279 li
430.272 369.279 li
430.272 381.812 li
417.443 381.812 li
417.443 382.115 li
415.969 382.115 li
415.969 378.076 li
413.266 378.076 li
413.266 381.711 li
411.299 381.711 li
411.299 384.134 li
411.299 384.134 408.596 384.134 407.121 384.134 cv
407.121 354.954 li
632.713 354.954 li
632.713 369.939 li
627.553 369.939 li
627.553 355.964 li
627.185 355.964 li
626.814 355.964 li
626.814 365.354 li
626.199 365.354 li
626.199 365.657 li
625.832 365.657 li
625.832 367.95 li
625.586 367.95 li
625.586 368.252 li
625.217 368.252 li
625.217 371.108 li
624.479 371.108 li
624.479 366.263 li
624.111 366.263 li
624.111 365.961 li
623.252 365.961 li
623.252 366.263 li
622.883 366.263 li
622.883 367.95 li
622.759 367.95 li
622.759 365.657 li
622.392 365.657 li
622.392 365.354 li
622.023 365.354 li
622.023 363.425 li
621.654 363.425 li
621.654 363.121 li
621.162 363.121 li
621.162 360.509 li
620.795 360.509 li
620.795 360.205 li
620.303 360.205 li
620.303 355.964 li
619.934 355.964 li
619.566 355.964 li
619.566 360.509 li
619.934 360.509 li
619.934 360.81 li
620.426 360.81 li
620.426 363.425 li
620.795 363.425 li
620.795 363.727 li
621.286 363.727 li
621.286 365.657 li
621.654 365.657 li
621.654 365.961 li
622.023 365.961 li
622.023 368.252 li
622.392 368.252 li
622.392 368.555 li
623.252 368.555 li
623.252 368.252 li
623.62 368.252 li
623.62 366.566 li
623.742 366.566 li
623.742 371.411 li
624.111 371.411 li
624.111 371.715 li
625.586 371.715 li
625.586 371.411 li
625.954 371.411 li
625.954 368.555 li
626.199 368.555 li
626.199 368.252 li
626.569 368.252 li
626.569 365.961 li
626.814 365.961 li
626.814 370.241 li
627.185 370.241 li
627.185 370.545 li
632.713 370.545 li
632.713 373.582 li
627.736 373.582 li
627.736 372.674 li
625.34 372.674 li
625.34 374.34 li
622.576 374.34 li
622.576 372.674 li
614.281 372.674 li
614.281 371.463 li
614.65 371.463 li
614.65 369.319 li
616.984 369.319 li
616.984 369.016 li
617.352 369.016 li
617.352 366.566 li
617.846 366.566 li
617.846 366.263 li
618.213 366.263 li
618.213 363.233 li
618.827 363.233 li
618.827 362.93 li
619.196 362.93 li
619.196 355.964 li
618.827 355.964 li
618.459 355.964 li
618.459 362.628 li
617.846 362.628 li
617.846 362.93 li
617.477 362.93 li
617.477 365.961 li
616.984 365.961 li
616.984 366.263 li
616.615 366.263 li
616.615 368.714 li
614.281 368.714 li
614.281 369.016 li
613.913 369.016 li
613.913 371.463 li
608.567 371.463 li
609.453 364.345 li
610.966 364.345 li
610.966 364.041 li
611.334 364.041 li
611.334 362.122 li
612.685 362.122 li
612.685 361.82 li
613.053 361.82 li
613.053 356.766 li
612.685 356.766 li
612.316 356.766 li
612.316 361.517 li
610.966 361.517 li
610.966 361.82 li
610.597 361.82 li
610.597 363.737 li
609.122 363.737 li
609.122 364.041 li
608.754 364.01 li
607.749 372.087 li
608.115 372.118 li
606.599 383.882 li
606.303 383.882 li
605.893 386.869 li
604.817 392.166 li
604.817 398.474 li
603.588 398.474 li
601.9 411.847 li
433.889 369.279 mo
433.889 383.401 li
434.256 383.401 li
434.256 383.703 li
450.248 383.703 li
450.248 383.401 li
450.615 383.401 li
450.615 356.766 li
450.248 356.766 li
449.879 356.766 li
449.879 383.098 li
434.626 383.098 li
434.626 369.279 li
434.256 369.279 li
433.889 369.279 li
409.129 365.692 mo
409.129 365.995 li
409.129 366.299 li
415.805 366.299 li
415.805 377.414 li
416.174 377.414 li
416.541 377.414 li
416.541 370.053 li
420.17 370.053 li
420.17 369.749 li
420.537 369.749 li
420.537 366.299 li
421.515 366.299 li
421.515 367.872 li
421.884 367.872 li
421.884 368.176 li
436.731 368.176 li
436.731 367.872 li
437.101 367.872 li
437.101 363.742 li
443.316 356.312 li
443.013 356.14 li
442.709 355.969 li
436.537 363.347 li
424.918 363.347 li
424.918 356.766 li
424.548 356.766 li
424.18 356.766 li
424.18 363.648 li
424.548 363.648 li
424.548 363.952 li
436.363 363.952 li
436.363 367.569 li
422.252 367.569 li
422.252 365.995 li
421.884 365.995 li
421.884 365.692 li
420.17 365.692 li
420.17 365.995 li
419.801 365.995 li
419.801 369.446 li
416.541 369.446 li
416.541 365.995 li
416.174 365.995 li
416.174 365.692 li
409.129 365.692 li
610.597 365.151 mo
610.597 369.016 li
610.966 369.016 li
610.966 369.319 li
611.456 369.319 li
611.456 371.181 li
611.825 371.181 li
612.193 371.181 li
612.193 369.016 li
611.825 369.016 li
611.825 368.714 li
611.334 368.714 li
611.334 365.151 li
610.966 365.151 li
610.597 365.151 li
f
588.304 108.006 mo
588.057 108.006 li
587.812 108.006 li
587.812 96.8876 li
585.456 96.8876 li
585.456 96.3984 li
585.21 96.3984 li
585.21 92.9669 li
576.681 92.9669 li
576.681 108.006 li
576.435 108.006 li
576.188 108.006 li
576.188 94.6885 li
572.29 94.6885 li
572.29 94.2012 li
572.044 94.2012 li
572.044 92.6895 li
572.044 91.7217 li
572.044 91.2441 li
564.651 91.2441 li
564.651 94.2012 li
564.405 94.2012 li
564.405 94.6885 li
560.101 94.6885 li
560.101 108.006 li
559.854 108.006 li
559.608 108.006 li
559.608 94.2012 li
559.854 94.2012 li
559.854 93.711 li
564.159 93.711 li
564.159 90.7559 li
564.405 90.7559 li
564.405 90.2666 li
572.29 90.2666 li
572.29 90.7559 li
572.536 90.7559 li
572.536 91.7217 li
572.536 92.6895 li
572.536 93.711 li
576.188 93.711 li
576.188 80.3965 li
576.435 80.3965 li
576.681 80.3965 li
576.681 91.9892 li
585.456 91.9892 li
585.456 92.4775 li
585.702 92.4775 li
585.702 95.9101 li
588.057 95.9101 li
588.057 96.3984 li
588.304 96.3984 li
588.304 108.006 li
556.601 93.6563 mo
556.354 93.6563 li
556.354 77.1329 li
556.601 77.1329 li
556.38 76.9199 li
557.192 73.6132 li
557.413 73.8272 li
557.413 73.3398 li
562.286 73.3398 li
562.286 68.1778 li
546.034 68.1778 li
544.083 68.1778 li
544.083 67.6876 li
544.083 67.1991 li
546.034 67.1991 li
562.534 67.1991 li
562.534 67.6876 li
562.78 67.6876 li
562.78 73.3398 li
569.685 73.3398 li
569.685 73.8272 li
569.685 74.3165 li
557.567 74.3165 li
556.847 77.246 li
556.847 93.6563 li
556.601 93.6563 li
555.991 92.6895 mo
555.991 93.1797 li
552.212 93.1797 li
552.212 92.6895 li
551.964 92.6895 li
551.964 91.8808 li
551.964 90.7559 li
551.964 88.3417 li
551.806 88.3417 li
551.235 88.3417 li
548.231 88.3417 li
548.231 93.6563 li
547.985 93.6563 li
547.985 94.1445 li
538.56 94.1445 li
538.56 106.877 li
538.313 106.877 li
538.067 106.877 li
538.067 92.6895 li
538.313 92.6895 li
538.56 92.6895 li
538.56 93.168 li
547.739 93.168 li
547.739 87.8535 li
547.985 87.8535 li
547.985 87.3652 li
551.235 87.3652 li
551.806 87.3652 li
552.212 87.3652 li
552.212 87.8535 li
552.458 87.8535 li
552.458 90.7559 li
552.458 91.8808 li
552.458 92.2012 li
554.911 92.2012 li
554.911 77.248 li
554.173 74.3165 li
544.083 74.3165 li
536.284 74.3165 li
536.284 106.877 li
536.038 106.877 li
535.792 106.877 li
535.792 73.8272 li
536.038 73.8272 li
536.038 73.3398 li
543.431 73.3398 li
543.431 67.1983 li
532.058 67.1983 li
532.058 68.668 li
531.811 68.668 li
531.811 69.1573 li
530.269 69.1573 li
530.269 72.9052 li
530.022 72.9052 li
530.022 73.3935 li
528.224 73.3935 li
528.224 110.857 li
527.977 110.857 li
527.731 110.857 li
527.731 72.9052 li
527.977 72.9052 li
527.977 72.416 li
529.776 72.416 li
529.776 68.668 li
530.022 68.668 li
530.022 68.1796 li
531.565 68.1796 li
531.565 66.7089 li
531.811 66.7089 li
531.811 66.2197 li
543.679 66.2197 li
543.679 66.7089 li
543.925 66.7089 li
543.925 73.3398 li
544.083 73.3398 li
554.325 73.3398 li
554.325 73.8272 li
554.546 73.6085 li
555.378 76.9121 li
555.157 77.1329 li
555.405 77.1329 li
555.405 92.2012 li
555.991 92.2012 li
555.991 92.6895 li
627.315 98.498 mo
615.778 98.498 li
615.778 108.006 li
615.532 108.006 li
615.286 108.006 li
615.286 94.9258 li
595.622 94.9258 li
595.622 108.006 li
595.374 108.006 li
595.128 108.006 li
595.128 94.4366 li
595.374 94.4366 li
595.374 93.9492 li
606.833 93.9492 li
606.833 84.6329 li
605.454 84.6329 li
603.097 84.6329 li
603.097 84.1446 li
602.851 84.1446 li
602.851 81.0088 li
594.89 81.0088 li
594.89 84.1446 li
594.644 84.1446 li
594.644 84.6329 li
592.532 84.6329 li
592.532 86.7256 li
592.286 86.7256 li
592.286 87.2129 li
589.688 87.2129 li
589.688 105.75 li
589.442 105.75 li
589.196 105.75 li
589.196 86.7256 li
589.442 86.7256 li
589.442 86.2353 li
592.04 86.2353 li
592.04 84.1446 li
592.286 84.1446 li
592.286 83.6562 li
594.397 83.6562 li
594.397 80.5186 li
594.644 80.5186 li
594.644 80.0313 li
603.097 80.0313 li
603.097 80.5186 li
603.343 80.5186 li
603.343 83.6562 li
605.206 83.6562 li
605.206 77.38 li
604.315 77.38 li
604.315 76.8907 li
604.069 76.8907 li
604.069 69.6406 li
600.94 69.6406 li
600.94 69.1504 li
600.694 69.1504 li
600.694 66.7089 li
588.735 66.7089 li
588.735 77.209 li
580.907 77.209 li
580.907 80.3965 li
576.763 80.3965 li
576.763 77.209 li
574.921 73.0986 li
569.624 73.0986 li
569.624 58.9394 li
567.091 58.9394 li
567.091 54.3721 li
542.683 54.3721 li
542.683 63.0498 li
526.105 63.0498 li
526.105 89.084 li
524.491 89.084 li
524.491 84.5165 li
521.284 84.5165 li
521.284 108.599 li
521.038 108.599 li
520.792 108.599 li
520.792 84.5165 li
521.038 84.5165 li
521.038 82.2324 li
515.228 82.2324 li
515.228 82.7226 li
510.464 82.7226 li
510.464 108.599 li
510.216 108.599 li
509.97 108.599 li
509.97 82.2324 li
510.216 82.2324 li
510.216 81.7451 li
514.13 81.7451 li
514.13 63.9629 li
497.091 63.9629 li
497.091 68.957 li
507.712 68.957 li
507.712 69.4444 li
507.958 69.4444 li
507.958 84.1963 li
507.712 84.1963 li
507.466 84.1963 li
507.466 69.9346 li
497.091 69.9346 li
497.091 69.4444 li
493.653 69.4444 li
493.653 110.857 li
493.405 110.857 li
493.159 110.857 li
493.159 69.4444 li
493.405 69.4444 li
493.405 66.7089 li
492.024 66.7089 li
492.024 59.3956 li
473.833 59.3956 li
473.833 88.5967 li
476.743 88.5967 li
476.743 89.084 li
476.989 89.084 li
476.989 92.0312 li
479.02 92.0312 li
479.02 92.5205 li
479.267 92.5205 li
479.267 110.857 li
479.02 110.857 li
478.774 110.857 li
478.774 93.0079 li
476.743 93.0079 li
476.743 92.5205 li
476.497 92.5205 li
476.497 89.5743 li
473.833 89.5743 li
473.833 89.084 li
469.474 89.084 li
469.474 94.585 li
469.228 94.585 li
469.403 94.9316 li
467.485 98.7344 li
467.485 109.576 li
467.237 109.576 li
466.991 109.576 li
466.991 97.5362 li
467.237 97.5362 li
467.392 97.5362 li
468.981 94.3847 li
468.981 89.084 li
469.228 89.084 li
469.228 66.7089 li
467.386 66.7089 li
467.386 59.3956 li
461.63 59.3956 li
461.63 66.7089 li
453.8 66.7089 li
453.8 63.0498 li
451.958 63.0498 li
451.958 59.3956 li
442.286 59.3956 li
442.286 66.7089 li
438.603 66.7089 li
438.603 59.3956 li
436.3 59.3956 li
436.3 62.5938 li
435.147 62.5938 li
435.147 69.9014 li
435.393 69.9014 li
435.393 117.169 li
435.147 117.169 li
434.901 117.169 li
434.901 69.9014 li
425.938 69.9014 li
425.938 92.7071 li
429.608 92.7071 li
429.608 93.1973 li
429.854 93.1973 li
429.854 102.248 li
433.478 102.248 li
433.478 102.736 li
433.726 102.736 li
433.726 114.461 li
433.478 114.461 li
433.231 114.461 li
433.231 103.225 li
429.608 103.225 li
429.608 102.736 li
429.36 102.736 li
429.36 93.6836 li
425.938 93.6836 li
425.938 93.1973 li
418.108 93.1973 li
418.108 100.048 li
415.052 100.048 li
415.052 110.857 li
414.806 110.857 li
414.56 110.857 li
414.56 100.048 li
410.739 100.048 li
410.739 89.084 li
407.056 89.084 li
407.056 88.2997 li
397.747 88.2997 li
397.747 94.585 li
397.747 98.2208 li
397.747 114.461 li
397.499 114.461 li
397.255 114.461 li
397.255 98.2208 li
397.255 95.0752 li
390.915 95.0752 li
390.915 114.461 li
390.669 114.461 li
390.423 114.461 li
390.423 95.0752 li
385.181 95.0752 li
385.181 94.585 li
384.935 94.585 li
384.935 90.4551 li
381.728 90.4551 li
381.728 94.5654 li
377.122 94.5654 li
377.122 98.2208 li
374.358 98.2208 li
374.358 98.709 li
371.56 98.709 li
371.56 107.254 li
371.314 107.254 li
371.314 107.744 li
367.46 107.744 li
367.46 114.461 li
367.214 114.461 li
366.968 114.461 li
366.968 107.254 li
367.214 107.254 li
367.214 106.766 li
371.065 106.766 li
371.065 98.2208 li
371.314 98.2208 li
371.314 97.7305 li
374.358 97.7305 li
374.358 66.7089 li
370.444 66.7089 li
370.444 62.5938 li
358.239 62.5938 li
358.239 66.7089 li
349.028 66.7089 li
349.028 99.5576 li
361.522 99.5576 li
361.522 100.048 li
361.769 100.048 li
361.769 114.461 li
361.522 114.461 li
361.276 114.461 li
361.276 100.536 li
349.028 100.536 li
349.028 100.048 li
342.35 100.048 li
342.35 125.37 li
628.849 125.37 li
628.849 108.724 li
628.849 98.498 li
628.048 98.498 li
627.315 98.498 li
.912474 .787625 .619837 .97467 cmyk
f
385.427 94.0977 mo
390.669 94.0977 li
397.255 94.0977 li
397.255 87.8096 li
397.499 87.8096 li
397.499 87.3223 li
407.056 87.3223 li
407.056 62.5938 li
392.548 62.5938 li
392.548 66.709 li
385.181 66.709 li
385.181 90.4551 li
385.427 90.4551 li
385.427 94.0977 li
cp
f
567.091 183.713 mo
542.683 183.713 li
542.683 176.582 li
526.105 176.582 li
526.105 155.189 li
524.491 155.189 li
524.491 158.942 li
521.284 158.942 li
521.284 139.153 li
521.038 139.153 li
520.792 139.153 li
520.792 158.942 li
521.038 158.942 li
521.038 160.819 li
515.228 160.819 li
515.228 160.416 li
510.464 160.416 li
510.464 139.153 li
510.216 139.153 li
509.97 139.153 li
509.97 160.819 li
510.216 160.819 li
510.216 161.22 li
514.13 161.22 li
514.13 175.832 li
497.091 175.832 li
497.091 171.728 li
507.712 171.728 li
507.712 171.327 li
507.958 171.327 li
507.958 159.205 li
507.712 159.205 li
507.466 159.205 li
507.466 170.925 li
497.091 170.925 li
497.091 171.327 li
493.653 171.327 li
493.653 137.297 li
493.405 137.297 li
493.159 137.297 li
493.159 171.327 li
493.405 171.327 li
493.405 173.575 li
492.024 173.575 li
492.024 179.585 li
473.833 179.585 li
473.833 155.589 li
476.743 155.589 li
476.743 155.189 li
476.989 155.189 li
476.989 152.767 li
479.02 152.767 li
479.02 152.365 li
479.267 152.365 li
479.267 137.297 li
479.02 137.297 li
478.774 137.297 li
478.774 151.965 li
476.743 151.965 li
476.743 152.365 li
476.497 152.365 li
476.497 154.786 li
473.833 154.786 li
473.833 155.189 li
469.474 155.189 li
469.474 150.668 li
469.228 150.668 li
469.403 150.384 li
467.485 147.259 li
467.485 138.35 li
467.237 138.35 li
466.991 138.35 li
466.991 148.243 li
467.237 148.243 li
467.392 148.243 li
468.981 150.833 li
468.981 155.189 li
469.228 155.189 li
469.228 173.575 li
467.386 173.575 li
467.386 179.585 li
461.63 179.585 li
461.63 173.575 li
453.8 173.575 li
453.8 176.582 li
451.958 176.582 li
451.958 179.585 li
442.286 179.585 li
442.286 173.575 li
438.603 173.575 li
438.603 179.585 li
436.3 179.585 li
436.3 176.957 li
435.147 176.957 li
435.147 170.952 li
435.393 170.952 li
435.393 132.11 li
435.147 132.11 li
434.901 132.11 li
434.901 170.952 li
425.938 170.952 li
425.938 152.212 li
429.608 152.212 li
429.608 151.809 li
429.854 151.809 li
429.854 144.371 li
433.478 144.371 li
433.478 143.97 li
433.726 143.97 li
433.726 134.336 li
433.478 134.336 li
433.231 134.336 li
433.231 143.569 li
429.608 143.569 li
429.608 143.97 li
429.36 143.97 li
429.36 151.409 li
425.938 151.409 li
425.938 151.809 li
418.108 151.809 li
418.108 146.18 li
415.052 146.18 li
415.052 137.297 li
414.806 137.297 li
414.56 137.297 li
414.56 146.18 li
410.739 146.18 li
410.739 155.189 li
407.056 155.189 li
407.056 155.833 li
397.747 155.833 li
397.747 150.668 li
397.747 147.681 li
397.747 134.336 li
397.499 134.336 li
397.255 134.336 li
397.255 147.681 li
397.255 150.266 li
390.915 150.266 li
390.915 134.336 li
390.669 134.336 li
390.423 134.336 li
390.423 150.266 li
385.181 150.266 li
385.181 150.668 li
384.935 150.668 li
384.935 154.062 li
381.728 154.062 li
381.728 150.684 li
377.122 150.684 li
377.122 147.681 li
374.358 147.681 li
374.358 147.279 li
371.56 147.279 li
371.56 140.258 li
371.314 140.258 li
371.314 139.855 li
367.46 139.855 li
367.46 134.336 li
367.214 134.336 li
366.968 134.336 li
366.968 140.258 li
367.214 140.258 li
367.214 140.659 li
371.065 140.659 li
371.065 147.681 li
371.314 147.681 li
371.314 148.084 li
374.358 148.084 li
374.358 173.575 li
370.444 173.575 li
370.444 176.957 li
358.239 176.957 li
358.239 173.575 li
349.028 173.575 li
349.028 146.582 li
361.522 146.582 li
361.522 146.18 li
361.769 146.18 li
361.769 134.336 li
361.522 134.336 li
361.276 134.336 li
361.276 145.778 li
349.028 145.778 li
349.028 146.18 li
342.35 146.18 li
342.35 125.371 li
628.849 125.371 li
628.849 139.05 li
628.849 147.453 li
628.048 147.453 li
627.315 147.453 li
615.778 147.453 li
615.778 139.64 li
615.532 139.64 li
615.286 139.64 li
615.286 150.389 li
595.622 150.389 li
595.622 139.64 li
595.374 139.64 li
595.128 139.64 li
595.128 150.79 li
595.374 150.79 li
595.374 151.19 li
606.833 151.19 li
606.833 158.847 li
605.454 158.847 li
603.097 158.847 li
603.097 159.248 li
602.851 159.248 li
602.851 161.824 li
594.89 161.824 li
594.89 159.248 li
594.644 159.248 li
594.644 158.847 li
592.532 158.847 li
592.532 157.127 li
592.286 157.127 li
592.286 156.727 li
589.688 156.727 li
589.688 141.494 li
589.442 141.494 li
589.196 141.494 li
589.196 157.127 li
589.442 157.127 li
589.442 157.529 li
592.04 157.529 li
592.04 159.248 li
592.286 159.248 li
592.286 159.648 li
594.397 159.648 li
594.397 162.228 li
594.644 162.228 li
594.644 162.628 li
603.097 162.628 li
603.097 162.228 li
603.343 162.228 li
603.343 159.648 li
605.206 159.648 li
605.206 164.807 li
604.315 164.807 li
604.315 165.208 li
604.069 165.208 li
604.069 171.166 li
600.94 171.166 li
600.94 171.569 li
600.694 171.569 li
600.694 173.575 li
588.735 173.575 li
588.735 164.947 li
580.907 164.947 li
580.907 162.327 li
576.763 162.327 li
576.763 164.947 li
574.921 168.324 li
569.624 168.324 li
569.624 179.96 li
567.091 179.96 li
567.091 183.713 li
527.731 137.297 mo
527.731 168.483 li
527.977 168.483 li
527.977 168.886 li
529.776 168.886 li
529.776 171.965 li
530.022 171.965 li
530.022 172.366 li
531.565 172.366 li
531.565 173.575 li
531.811 173.575 li
531.811 173.977 li
543.679 173.977 li
543.679 173.575 li
543.925 173.575 li
543.925 168.126 li
544.083 168.126 li
554.325 168.126 li
554.325 167.726 li
554.546 167.905 li
555.378 165.19 li
555.157 165.01 li
555.405 165.01 li
555.405 152.627 li
555.991 152.627 li
555.991 152.226 li
555.991 151.823 li
552.212 151.823 li
552.212 152.226 li
551.964 152.226 li
551.964 152.891 li
551.964 153.815 li
551.964 155.799 li
551.806 155.799 li
551.235 155.799 li
548.231 155.799 li
548.231 151.432 li
547.985 151.432 li
547.985 151.03 li
538.56 151.03 li
538.56 140.567 li
538.313 140.567 li
538.067 140.567 li
538.067 152.226 li
538.313 152.226 li
538.56 152.226 li
538.56 151.833 li
547.739 151.833 li
547.739 156.2 li
547.985 156.2 li
547.985 156.602 li
551.235 156.602 li
551.806 156.602 li
552.212 156.602 li
552.212 156.2 li
552.458 156.2 li
552.458 153.815 li
552.458 152.891 li
552.458 152.627 li
554.911 152.627 li
554.911 164.915 li
554.173 167.324 li
544.083 167.324 li
536.284 167.324 li
536.284 140.567 li
536.038 140.567 li
535.792 140.567 li
535.792 167.726 li
536.038 167.726 li
536.038 168.126 li
543.431 168.126 li
543.431 173.173 li
532.058 173.173 li
532.058 171.965 li
531.811 171.965 li
531.811 171.564 li
530.269 171.564 li
530.269 168.483 li
530.022 168.483 li
530.022 168.082 li
528.224 168.082 li
528.224 137.297 li
527.977 137.297 li
527.731 137.297 li
544.083 172.368 mo
544.083 172.771 li
544.083 173.172 li
546.034 173.172 li
562.534 173.172 li
562.534 172.771 li
562.78 172.771 li
562.78 168.126 li
569.685 168.126 li
569.685 167.726 li
569.685 167.324 li
557.567 167.324 li
556.847 164.916 li
556.847 151.432 li
556.601 151.432 li
556.354 151.432 li
556.354 165.01 li
556.601 165.01 li
556.38 165.185 li
557.192 167.901 li
557.413 167.726 li
557.413 168.126 li
562.286 168.126 li
562.286 172.368 li
546.034 172.368 li
544.083 172.368 li
572.536 151.387 mo
576.188 151.387 li
576.188 162.327 li
576.435 162.327 li
576.681 162.327 li
576.681 152.802 li
585.456 152.802 li
585.456 152.4 li
585.702 152.4 li
585.702 149.579 li
588.057 149.579 li
588.057 149.178 li
588.304 149.178 li
588.304 139.64 li
588.057 139.64 li
587.812 139.64 li
587.812 148.776 li
585.456 148.776 li
585.456 149.178 li
585.21 149.178 li
585.21 151.998 li
576.681 151.998 li
576.681 139.64 li
576.435 139.64 li
576.188 139.64 li
576.188 150.583 li
572.29 150.583 li
572.29 150.983 li
572.044 150.983 li
572.044 152.226 li
572.044 153.021 li
572.044 153.414 li
564.651 153.414 li
564.651 150.983 li
564.405 150.983 li
564.405 150.583 li
560.101 150.583 li
560.101 139.64 li
559.854 139.64 li
559.608 139.64 li
559.608 150.983 li
559.854 150.983 li
559.854 151.387 li
564.159 151.387 li
564.159 153.815 li
564.405 153.815 li
564.405 154.217 li
572.29 154.217 li
572.29 153.815 li
572.536 153.815 li
572.536 153.021 li
572.536 152.226 li
572.536 151.387 li
.270756 .351293 .358556 .108919 cmyk
f
407.056 176.957 mo
392.548 176.957 li
392.548 173.575 li
385.181 173.575 li
385.181 154.062 li
385.427 154.062 li
385.427 151.068 li
390.669 151.068 li
397.255 151.068 li
397.255 156.236 li
397.499 156.236 li
397.499 156.637 li
407.056 156.637 li
407.056 176.957 li
f
355.238 194.79 mo
357.807 194.79 359.126 196.326 359.126 199.014 cv
359.126 199.542 li
356.63 199.542 li
356.63 198.846 li
356.63 197.646 356.15 197.189 355.31 197.189 cv
354.47 197.189 353.99 197.646 353.99 198.846 cv
353.99 200.07 354.518 200.982 356.246 202.494 cv
358.454 204.438 359.15 205.831 359.15 207.751 cv
359.15 210.439 357.807 211.976 355.214 211.976 cv
352.622 211.976 351.277 210.439 351.277 207.751 cv
351.277 206.719 li
353.773 206.719 li
353.773 207.919 li
353.773 209.119 354.302 209.551 355.142 209.551 cv
355.982 209.551 356.51 209.119 356.51 207.919 cv
356.51 206.694 355.982 205.782 354.254 204.271 cv
352.046 202.326 351.35 200.935 351.35 199.014 cv
351.35 196.326 352.67 194.79 355.238 194.79 cv
cp
.912474 .787625 .619837 .97467 cmyk
f
363.182 206.455 mo
365.726 206.455 li
364.478 197.958 li
364.43 197.958 li
363.182 206.455 li
cp
369.206 211.783 mo
366.542 211.783 li
366.086 208.735 li
362.846 208.735 li
362.39 211.783 li
359.965 211.783 li
362.653 194.981 li
366.518 194.981 li
369.206 211.783 li
cp
f
372.829 199.614 mo
372.781 199.614 li
372.781 211.783 li
370.405 211.783 li
370.405 194.981 li
373.717 194.981 li
376.381 205.039 li
376.43 205.039 li
376.43 194.981 li
378.781 194.981 li
378.781 211.783 li
376.069 211.783 li
372.829 199.614 li
cp
f
383.677 209.383 mo
383.965 209.407 384.301 209.407 384.589 209.407 cv
385.429 209.407 386.101 209.095 386.101 207.799 cv
386.101 194.981 li
388.741 194.981 li
388.741 207.606 li
388.741 210.967 386.94 211.831 384.948 211.831 cv
384.469 211.831 384.108 211.831 383.677 211.783 cv
383.677 209.383 li
cp
f
392.965 207.919 mo
392.965 209.119 393.492 209.575 394.332 209.575 cv
395.173 209.575 395.7 209.119 395.7 207.919 cv
395.7 198.846 li
395.7 197.646 395.173 197.189 394.332 197.189 cv
393.492 197.189 392.965 197.646 392.965 198.846 cv
392.965 207.919 li
cp
390.324 199.014 mo
390.324 196.326 391.74 194.79 394.332 194.79 cv
396.925 194.79 398.341 196.326 398.341 199.014 cv
398.341 207.751 li
398.341 210.439 396.925 211.976 394.332 211.976 cv
391.74 211.976 390.324 210.439 390.324 207.751 cv
390.324 199.014 li
cp
f
403.597 194.79 mo
406.165 194.79 407.484 196.326 407.484 199.014 cv
407.484 199.542 li
404.988 199.542 li
404.988 198.846 li
404.988 197.646 404.509 197.189 403.668 197.189 cv
402.828 197.189 402.349 197.646 402.349 198.846 cv
402.349 200.07 402.876 200.982 404.604 202.494 cv
406.813 204.438 407.509 205.831 407.509 207.751 cv
407.509 210.439 406.165 211.976 403.572 211.976 cv
400.98 211.976 399.636 210.439 399.636 207.751 cv
399.636 206.719 li
402.132 206.719 li
402.132 207.919 li
402.132 209.119 402.66 209.551 403.5 209.551 cv
404.341 209.551 404.868 209.119 404.868 207.919 cv
404.868 206.694 404.341 205.782 402.612 204.271 cv
400.404 202.326 399.708 200.935 399.708 199.014 cv
399.708 196.326 401.028 194.79 403.597 194.79 cv
cp
f
411.66 202.063 mo
415.284 202.063 li
415.284 204.463 li
411.66 204.463 li
411.66 209.383 li
416.221 209.383 li
416.221 211.783 li
409.02 211.783 li
409.02 194.981 li
416.221 194.981 li
416.221 197.382 li
411.66 197.382 li
411.66 202.063 li
cp
f
213.664 115.359 mo
213.272 115.359 li
212.881 115.359 li
212.881 99.3359 li
206.146 99.3359 li
206.146 98.6621 li
205.754 98.6621 li
205.754 96.373 li
205.021 96.373 li
205.021 95.7002 li
204.629 95.7002 li
204.629 88.9717 li
194.723 88.9717 li
194.723 116.885 li
194.331 116.885 li
193.938 116.885 li
193.938 88.2988 li
194.331 88.2988 li
194.331 87.627 li
205.021 87.627 li
205.021 88.2988 li
205.412 88.2988 li
205.412 95.0264 li
206.146 95.0264 li
206.146 95.7002 li
206.537 95.7002 li
206.537 97.9893 li
213.272 97.9893 li
213.272 98.6621 li
213.664 98.6621 li
213.664 115.359 li
cp
313.99 104.399 mo
313.99 88.6836 li
305.067 88.6836 li
305.067 104.399 li
299.936 104.399 li
299.936 105.073 li
289.056 105.073 li
289.056 108.232 li
288.665 108.232 li
288.665 108.906 li
284.742 108.906 li
284.742 116.885 li
284.352 116.885 li
283.96 116.885 li
283.96 108.232 li
284.352 108.232 li
284.352 107.56 li
288.273 107.56 li
288.273 104.399 li
288.665 104.399 li
288.665 103.728 li
299.936 103.728 li
299.936 61.4648 li
296.59 56.0986 li
293.021 56.0986 li
293.021 59.5479 li
291.905 59.5479 li
291.905 95.583 li
292.296 95.583 li
292.296 101.51 li
291.905 101.51 li
291.513 101.51 li
291.513 95.583 li
288.336 95.583 li
288.336 98.2656 li
285.881 98.2656 li
285.881 105.551 li
280.304 105.551 li
280.304 60.3145 li
278.521 60.3145 li
278.521 57.7246 li
274.95 57.7246 li
274.95 61.082 li
273.835 61.082 li
273.835 109 li
265.749 109 li
265.749 116.885 li
265.356 116.885 li
264.966 116.885 li
264.966 109 li
265.356 109 li
265.356 70.665 li
245.726 70.665 li
245.726 72.582 li
244.164 72.582 li
244.164 91.3662 li
244.555 91.3662 li
244.555 116.885 li
244.164 116.885 li
243.771 116.885 li
243.771 91.3662 li
242.379 91.3662 li
242.379 99.0322 li
239.924 99.0322 li
239.924 89.8311 li
238.809 89.8311 li
238.809 86.7666 li
234.348 86.7666 li
234.348 81.0156 li
231.393 81.0156 li
231.393 96.9023 li
232.597 98.9736 li
232.32 99.4482 li
232.713 99.4482 li
232.713 100.836 li
234.278 100.836 li
234.278 101.51 li
234.67 101.51 li
234.67 104.027 li
241.779 104.027 li
241.779 104.7 li
242.172 104.7 li
242.172 111.766 li
241.779 111.766 li
241.389 111.766 li
241.389 105.374 li
234.67 105.374 li
234.67 112.736 li
234.278 112.736 li
233.886 112.736 li
233.886 102.183 li
232.32 102.183 li
232.32 101.51 li
231.929 101.51 li
231.929 99.7285 li
231.393 98.8057 li
231.393 116.885 li
231 116.885 li
230.609 116.885 li
230.609 81.0156 li
231 81.0156 li
231 72.582 li
214.492 72.582 li
214.492 95.583 li
212.262 95.583 li
212.262 86.7666 li
210.253 86.7666 li
210.253 84.8496 li
201.999 84.8496 li
201.999 87.1504 li
198.875 87.1504 li
198.875 85.6162 li
195.531 85.6162 li
195.531 63.7646 li
193.078 63.7646 li
193.078 59.9316 li
188.616 59.9316 186.385 64.1484 186.385 64.1484 cv
186.385 69.5137 li
185.27 71.4316 li
185.27 86.3828 li
183.931 89.0654 li
183.931 91.3662 li
184.321 91.3662 li
184.321 119.549 li
183.931 119.549 li
183.539 119.549 li
183.539 91.3662 li
180.361 91.3662 li
180.361 94.0508 li
178.577 94.0508 li
178.577 86.7666 li
176.515 86.7666 li
176.515 119.549 li
176.122 119.549 li
175.731 119.549 li
175.731 86.7666 li
176.122 86.7666 li
176.122 77.1826 li
173.669 77.1826 li
173.669 75.0742 li
164.491 75.0742 li
164.491 78.333 li
160.283 78.333 li
160.283 97.8828 li
157.829 100.184 li
157.829 102.482 li
156.268 102.482 li
156.268 91.3662 li
154.259 91.3662 li
154.259 94.4316 li
150.412 94.4316 li
150.412 104.027 li
168.824 104.027 li
168.824 104.7 li
169.215 104.7 li
169.215 116.885 li
168.824 116.885 li
168.433 116.885 li
168.433 105.374 li
150.412 105.374 li
150.412 108.586 li
150.021 108.586 li
150.021 109.259 li
147.835 109.259 li
147.835 116.885 li
147.443 116.885 li
147.051 116.885 li
147.051 108.586 li
147.443 108.586 li
147.443 107.913 li
149.629 107.913 li
149.629 94.4316 li
150.021 94.4316 li
150.021 59.9316 li
146.005 41.9141 li
141.32 37.3135 li
139.982 37.3135 li
135.743 57.7246 li
135.743 80.4414 li
136.135 80.4414 li
136.135 116.885 li
135.743 116.885 li
135.352 116.885 li
135.352 111.198 li
134.877 111.198 li
132.064 111.198 li
132.064 110.524 li
131.673 110.524 li
131.673 107.317 li
122.891 107.317 li
122.891 116.885 li
122.5 116.885 li
122.108 116.885 li
122.108 106.646 li
122.5 106.646 li
122.5 105.974 li
132.064 105.974 li
132.064 106.646 li
132.456 106.646 li
132.456 109.853 li
134.877 109.853 li
135.352 109.853 li
135.352 80.4414 li
134.627 80.4414 li
134.627 84.8496 li
130.39 84.8496 li
127.043 88.6836 li
127.043 91.3662 li
125.926 91.3662 li
125.926 98.2656 li
123.695 98.2656 li
123.695 100.565 li
121.465 100.565 li
118.565 100.565 li
118.565 105.551 li
116.78 105.551 li
116.78 62.999 li
113.435 50.3477 li
108.303 48.0479 li
104.287 62.2314 li
104.287 88.2988 li
104.68 88.2988 li
104.68 104.027 li
112.936 104.027 li
112.936 104.7 li
113.327 104.7 li
113.327 107.918 li
115.372 107.918 li
115.372 108.591 li
115.764 108.591 li
115.764 116.885 li
115.372 116.885 li
114.981 116.885 li
114.981 109.265 li
112.936 109.265 li
112.936 108.591 li
112.543 108.591 li
112.543 105.374 li
104.68 105.374 li
104.68 116.885 li
104.287 116.885 li
103.896 116.885 li
103.896 88.2988 li
95.1396 88.2988 li
95.1396 92.5166 li
95.5322 92.5166 li
95.5322 116.885 li
95.1396 116.885 li
94.749 116.885 li
94.749 92.5166 li
89.5625 92.5166 li
89.5625 89.833 li
88.2246 89.833 li
88.2246 85.6162 li
85.4932 85.6162 li
85.4932 116.885 li
85.1016 116.885 li
84.709 116.885 li
84.709 85.6162 li
85.1016 85.6162 li
85.1016 78.7139 li
83.9854 76.7988 li
83.9854 72.9648 li
81.9785 72.582 li
80.8623 72.582 li
79.0781 69.1328 li
74.6152 74.1143 li
73.5 78.7139 li
73.5 94.4316 li
73.8926 94.4316 li
73.8926 107.649 li
73.5 107.649 li
73.1084 107.649 li
73.1084 94.4316 li
70.8242 94.4316 li
70.8242 97.5 li
69.0391 97.5 li
69.0391 100.565 li
68.3145 100.565 li
68.3145 108.645 li
76.874 108.645 li
76.874 109.316 li
77.2666 109.316 li
77.2666 116.885 li
76.874 116.885 li
76.4834 116.885 li
76.4834 109.989 li
68.3145 109.989 li
68.3145 116.885 li
67.9238 116.885 li
67.5313 116.885 li
67.5313 100.565 li
67.9238 100.565 li
67.9238 68.748 li
65.6934 68.748 li
65.6934 66.832 li
61.6768 66.832 li
61.6768 70.2813 li
60.5615 70.2813 li
60.5615 83.6982 li
59.6689 84.4658 li
59.6689 95.583 li
58.3311 95.583 li
58.3311 98.3604 li
60.6016 98.3604 li
60.6016 99.0322 li
60.9922 99.0322 li
60.9922 101.074 li
61.4961 101.074 li
61.4961 101.749 li
61.8867 101.749 li
61.8867 116.885 li
61.4961 116.885 li
61.1045 116.885 li
61.1045 102.421 li
60.6016 102.421 li
60.6016 101.749 li
60.209 101.749 li
60.209 99.7061 li
58.3311 99.7061 li
58.3311 99.0322 li
57.2148 99.0322 li
57.2148 87.1504 li
50.9678 87.1504 li
50.9678 95.583 li
48.7373 98.6484 li
46.7295 98.6484 li
44.7227 100.95 li
44.7227 111.3 li
45.1133 111.3 li
45.1133 116.885 li
44.7227 116.885 li
44.3311 116.885 li
44.3311 111.3 li
43.1055 111.3 li
43.1055 116.885 li
42.7139 116.885 li
42.3223 116.885 li
42.3223 111.3 li
42.7139 111.3 li
42.7139 87.916 li
41.1533 87.916 li
41.1533 80.248 li
40.0381 80.248 li
40.0381 78.333 li
34.459 78.333 li
34.459 80.6328 li
33.1211 80.6328 li
33.1211 85.6162 li
30.4443 85.6162 li
30.4443 112.833 li
26.875 112.833 li
26.875 121.267 li
319.121 121.267 li
319.121 104.399 li
313.99 104.399 li
cp
f
35.7363 186.39 mo
38.3047 186.39 39.624 187.926 39.624 190.613 cv
39.624 191.142 li
37.1279 191.142 li
37.1279 190.445 li
37.1279 189.245 36.6484 188.789 35.8076 188.789 cv
34.9678 188.789 34.4883 189.245 34.4883 190.445 cv
34.4883 191.67 35.0156 192.582 36.7441 194.094 cv
38.9521 196.038 39.6484 197.431 39.6484 199.351 cv
39.6484 202.039 38.3047 203.575 35.7119 203.575 cv
33.1201 203.575 31.7754 202.039 31.7754 199.351 cv
31.7754 198.318 li
34.2715 198.318 li
34.2715 199.519 li
34.2715 200.719 34.7998 201.15 35.6396 201.15 cv
36.4805 201.15 37.0078 200.719 37.0078 199.519 cv
37.0078 198.294 36.4805 197.382 34.752 195.87 cv
32.5439 193.926 31.8477 192.534 31.8477 190.613 cv
31.8477 187.926 33.168 186.39 35.7363 186.39 cv
cp
f
43.6797 198.055 mo
46.2236 198.055 li
44.9756 189.558 li
44.9277 189.558 li
43.6797 198.055 li
cp
49.7041 203.383 mo
47.04 203.383 li
46.584 200.335 li
43.3438 200.335 li
42.8877 203.383 li
40.4629 203.383 li
43.1514 186.581 li
47.0156 186.581 li
49.7041 203.383 li
cp
f
53.3271 191.214 mo
53.2793 191.214 li
53.2793 203.383 li
50.9033 203.383 li
50.9033 186.581 li
54.2148 186.581 li
56.8789 196.639 li
56.9277 196.639 li
56.9277 186.581 li
59.2793 186.581 li
59.2793 203.383 li
56.5674 203.383 li
53.3271 191.214 li
cp
f
67.5352 188.981 mo
67.5352 200.982 li
69.0234 200.982 li
69.8633 200.982 70.3672 200.551 70.3672 199.351 cv
70.3672 190.613 li
70.3672 189.414 69.8633 188.981 69.0234 188.981 cv
67.5352 188.981 li
cp
64.8945 186.581 mo
69.0713 186.581 li
71.7109 186.581 73.0078 188.046 73.0078 190.733 cv
73.0078 199.23 li
73.0078 201.919 71.7109 203.383 69.0713 203.383 cv
64.8945 203.383 li
64.8945 186.581 li
cp
f
74.6865 186.581 mo
77.3271 186.581 li
77.3271 203.383 li
74.6865 203.383 li
74.6865 186.581 li
cp
f
81.8867 193.662 mo
85.5107 193.662 li
85.5107 196.063 li
81.8867 196.063 li
81.8867 200.982 li
86.4473 200.982 li
86.4473 203.383 li
79.2461 203.383 li
79.2461 186.581 li
86.4473 186.581 li
86.4473 188.981 li
81.8867 188.981 li
81.8867 193.662 li
cp
f
92.0391 194.022 mo
95.7354 194.022 li
95.7354 199.351 li
95.7354 202.039 94.3906 203.575 91.7988 203.575 cv
89.2061 203.575 87.8623 202.039 87.8623 199.351 cv
87.8623 190.613 li
87.8623 187.926 89.2061 186.39 91.7988 186.39 cv
94.3906 186.39 95.7354 187.926 95.7354 190.613 cv
95.7354 192.246 li
93.2383 192.246 li
93.2383 190.445 li
93.2383 189.245 92.7109 188.789 91.8701 188.789 cv
91.0303 188.789 90.5029 189.245 90.5029 190.445 cv
90.5029 199.519 li
90.5029 200.719 91.0303 201.15 91.8701 201.15 cv
92.7109 201.15 93.2383 200.719 93.2383 199.519 cv
93.2383 196.422 li
92.0391 196.422 li
92.0391 194.022 li
cp
f
99.8633 199.519 mo
99.8633 200.719 100.391 201.175 101.23 201.175 cv
102.071 201.175 102.599 200.719 102.599 199.519 cv
102.599 190.445 li
102.599 189.245 102.071 188.789 101.23 188.789 cv
100.391 188.789 99.8633 189.245 99.8633 190.445 cv
99.8633 199.519 li
cp
97.2227 190.613 mo
97.2227 187.926 98.6387 186.39 101.23 186.39 cv
103.823 186.39 105.239 187.926 105.239 190.613 cv
105.239 199.351 li
105.239 202.039 103.823 203.575 101.23 203.575 cv
98.6387 203.575 97.2227 202.039 97.2227 199.351 cv
97.2227 190.613 li
cp
f
141.32 194.982 mo
139.982 194.982 li
135.743 177.061 li
135.743 157.114 li
136.135 157.114 li
136.135 125.116 li
135.743 125.116 li
135.352 125.116 li
135.352 130.108 li
134.877 130.108 li
132.064 130.108 li
132.064 130.7 li
131.673 130.7 li
131.673 133.517 li
122.891 133.517 li
122.891 125.116 li
122.5 125.116 li
122.108 125.116 li
122.108 134.105 li
122.5 134.105 li
122.5 134.696 li
132.064 134.696 li
132.064 134.105 li
132.456 134.105 li
132.456 131.29 li
134.877 131.29 li
135.352 131.29 li
135.352 157.114 li
134.627 157.114 li
134.627 153.244 li
130.39 153.244 li
127.043 149.878 li
127.043 147.522 li
125.926 147.522 li
125.926 141.464 li
123.695 141.464 li
123.695 139.444 li
121.465 139.444 li
118.565 139.444 li
118.565 135.067 li
116.78 135.067 li
116.78 172.43 li
113.435 183.538 li
108.303 185.558 li
104.287 173.104 li
104.287 150.216 li
104.68 150.216 li
104.68 136.405 li
112.936 136.405 li
112.936 135.814 li
113.327 135.814 li
113.327 132.989 li
115.372 132.989 li
115.372 132.398 li
115.764 132.398 li
115.764 125.116 li
115.372 125.116 li
114.981 125.116 li
114.981 131.807 li
112.936 131.807 li
112.936 132.398 li
112.543 132.398 li
112.543 135.223 li
104.68 135.223 li
104.68 125.116 li
104.287 125.116 li
103.896 125.116 li
103.896 150.216 li
95.1397 150.216 li
95.1397 146.512 li
95.5322 146.512 li
95.5322 125.116 li
95.1397 125.116 li
94.7491 125.116 li
94.7491 146.512 li
89.5626 146.512 li
89.5626 148.868 li
88.2246 148.868 li
88.2246 152.571 li
85.4932 152.571 li
85.4932 125.116 li
85.1015 125.116 li
84.709 125.116 li
84.709 152.571 li
85.1015 152.571 li
85.1015 158.631 li
83.9853 160.312 li
83.9853 163.679 li
81.9786 164.016 li
80.8623 164.016 li
79.0782 167.044 li
74.6153 162.67 li
73.5001 158.631 li
73.5001 144.83 li
73.8926 144.83 li
73.8926 133.225 li
73.5001 133.225 li
73.1083 133.225 li
73.1083 144.83 li
70.8242 144.83 li
70.8242 142.137 li
69.039 142.137 li
69.039 139.444 li
68.3145 139.444 li
68.3145 132.351 li
76.8741 132.351 li
76.8741 131.761 li
77.2666 131.761 li
77.2666 125.116 li
76.8741 125.116 li
76.4833 125.116 li
76.4833 131.17 li
68.3145 131.17 li
68.3145 125.116 li
67.9238 125.116 li
67.5312 125.116 li
67.5312 139.444 li
67.9238 139.444 li
67.9238 167.382 li
65.6933 167.382 li
65.6933 169.064 li
61.6767 169.064 li
61.6767 166.035 li
60.5615 166.035 li
60.5615 154.255 li
59.669 153.581 li
59.669 143.818 li
58.3311 143.818 li
58.3311 141.381 li
60.6015 141.381 li
60.6015 140.791 li
60.9921 140.791 li
60.9921 138.998 li
61.496 138.998 li
61.496 138.405 li
61.8868 138.405 li
61.8868 125.116 li
61.496 125.116 li
61.1045 125.116 li
61.1045 137.815 li
60.6015 137.815 li
60.6015 138.405 li
60.209 138.405 li
60.209 140.199 li
58.3311 140.199 li
58.3311 140.791 li
57.2149 140.791 li
57.2149 151.224 li
50.9678 151.224 li
50.9678 143.818 li
48.7374 141.128 li
46.7295 141.128 li
44.7227 139.107 li
44.7227 130.02 li
45.1133 130.02 li
45.1133 125.116 li
44.7227 125.116 li
44.331 125.116 li
44.331 130.02 li
43.1054 130.02 li
43.1054 125.116 li
42.7138 125.116 li
42.3223 125.116 li
42.3223 130.02 li
42.7138 130.02 li
42.7138 150.552 li
41.1533 150.552 li
41.1533 157.284 li
40.0381 157.284 li
40.0381 158.966 li
34.459 158.966 li
34.459 156.946 li
33.1211 156.946 li
33.1211 152.571 li
30.4444 152.571 li
30.4444 128.674 li
26.875 128.674 li
26.875 121.268 li
319.121 121.268 li
319.121 136.078 li
313.99 136.078 li
313.99 149.878 li
305.067 149.878 li
305.067 136.078 li
299.935 136.078 li
299.935 135.486 li
289.056 135.486 li
289.056 132.713 li
288.665 132.713 li
288.665 132.121 li
284.742 132.121 li
284.742 125.116 li
284.352 125.116 li
283.96 125.116 li
283.96 132.713 li
284.352 132.713 li
284.352 133.304 li
288.273 133.304 li
288.273 136.078 li
288.665 136.078 li
288.665 136.668 li
299.935 136.668 li
299.935 173.776 li
296.59 178.488 li
293.02 178.488 li
293.02 175.46 li
291.905 175.46 li
291.905 143.818 li
292.296 143.818 li
292.296 138.615 li
291.905 138.615 li
291.513 138.615 li
291.513 143.818 li
288.336 143.818 li
288.336 141.464 li
285.881 141.464 li
285.881 135.067 li
280.304 135.067 li
280.304 174.787 li
278.52 174.787 li
278.52 177.061 li
274.95 177.061 li
274.95 174.112 li
273.835 174.112 li
273.835 132.039 li
265.749 132.039 li
265.749 125.116 li
265.357 125.116 li
264.966 125.116 li
264.966 132.039 li
265.357 132.039 li
265.357 165.698 li
245.726 165.698 li
245.726 164.016 li
244.164 164.016 li
244.164 147.522 li
244.555 147.522 li
244.555 125.116 li
244.164 125.116 li
243.771 125.116 li
243.771 147.522 li
242.379 147.522 li
242.379 140.791 li
239.924 140.791 li
239.924 148.87 li
238.809 148.87 li
238.809 151.561 li
234.348 151.561 li
234.348 156.61 li
231.393 156.61 li
231.393 142.661 li
232.597 140.843 li
232.32 140.426 li
232.713 140.426 li
232.713 139.207 li
234.278 139.207 li
234.278 138.615 li
234.67 138.615 li
234.67 136.405 li
241.779 136.405 li
241.779 135.814 li
242.172 135.814 li
242.172 129.61 li
241.779 129.61 li
241.389 129.61 li
241.389 135.223 li
234.67 135.223 li
234.67 128.759 li
234.278 128.759 li
233.886 128.759 li
233.886 138.024 li
232.32 138.024 li
232.32 138.615 li
231.929 138.615 li
231.929 140.18 li
231.393 140.99 li
231.393 125.116 li
231 125.116 li
230.609 125.116 li
230.609 156.61 li
231 156.61 li
231 164.016 li
214.492 164.016 li
214.492 143.818 li
212.262 143.818 li
212.262 151.561 li
210.253 151.561 li
210.253 153.244 li
201.999 153.244 li
201.999 151.224 li
198.875 151.224 li
198.875 152.571 li
195.531 152.571 li
195.531 171.757 li
193.078 171.757 li
193.078 175.123 li
188.616 175.123 186.385 171.42 186.385 171.42 cv
186.385 166.709 li
185.27 165.025 li
185.27 151.896 li
183.931 149.542 li
183.931 147.522 li
184.321 147.522 li
184.321 122.776 li
183.931 122.776 li
183.539 122.776 li
183.539 147.522 li
180.361 147.522 li
180.361 145.165 li
178.577 145.165 li
178.577 151.561 li
176.515 151.561 li
176.515 122.776 li
176.122 122.776 li
175.732 122.776 li
175.732 151.561 li
176.122 151.561 li
176.122 159.976 li
173.669 159.976 li
173.669 161.827 li
164.491 161.827 li
164.491 158.966 li
160.283 158.966 li
160.283 141.8 li
157.829 139.78 li
157.829 137.762 li
156.268 137.762 li
156.268 147.522 li
154.259 147.522 li
154.259 144.83 li
150.412 144.83 li
150.412 136.405 li
168.824 136.405 li
168.824 135.814 li
169.215 135.814 li
169.215 125.116 li
168.824 125.116 li
168.433 125.116 li
168.433 135.223 li
150.412 135.223 li
150.412 132.402 li
150.02 132.402 li
150.02 131.812 li
147.835 131.812 li
147.835 125.116 li
147.443 125.116 li
147.051 125.116 li
147.051 132.402 li
147.443 132.402 li
147.443 132.993 li
149.629 132.993 li
149.629 144.83 li
150.02 144.83 li
150.02 175.123 li
146.005 190.943 li
141.32 194.982 li
193.938 125.116 mo
193.938 150.216 li
194.331 150.216 li
194.331 150.806 li
205.021 150.806 li
205.021 150.216 li
205.412 150.216 li
205.412 144.309 li
206.146 144.309 li
206.146 143.717 li
206.537 143.717 li
206.537 141.707 li
213.273 141.707 li
213.273 141.116 li
213.664 141.116 li
213.664 126.455 li
213.273 126.455 li
212.881 126.455 li
212.881 140.524 li
206.146 140.524 li
206.146 141.116 li
205.754 141.116 li
205.754 143.126 li
205.021 143.126 li
205.021 143.717 li
204.629 143.717 li
204.629 149.625 li
194.723 149.625 li
194.723 125.116 li
194.331 125.116 li
193.938 125.116 li
.270756 .351293 .358556 .108919 cmyk
f
175.194 279.249 mo
175.194 264.004 li
165.347 264.004 li
165.347 279.249 li
175.194 279.249 li
cp
.912474 .787625 .619837 .97467 cmyk
f
97.8253 295.536 mo
97.8253 314.425 li
114.522 314.425 li
114.522 295.536 li
97.8253 295.536 li
f
288.616 291.969 mo
261.572 291.969 li
261.572 314.425 li
306.16 314.425 li
306.16 298.37 li
288.616 291.969 li
f
97.2041 294.378 mo
97.2041 293.22 li
101.475 293.22 li
101.475 259.752 li
102.097 259.752 li
102.097 258.594 li
107.969 258.594 li
107.969 238.491 li
104.055 238.491 li
101.118 242.742 li
98.8349 242.742 li
98.8349 257.929 li
96.5517 257.929 li
96.5517 254.893 li
94.2676 254.893 li
94.2676 260.359 li
92.6387 260.359 li
92.6387 264.613 li
89.7011 264.613 li
89.7011 255.5 li
76.3272 255.5 li
76.3272 258.537 li
72.709 258.537 li
72.709 265.275 li
89.7011 265.275 li
89.7011 266.435 li
90.3233 266.435 li
90.3233 302.274 li
89.0801 302.274 li
89.0801 267.593 li
72.709 267.593 li
72.709 302.274 li
71.4658 302.274 li
71.4658 258.537 li
72.0878 258.537 li
72.0878 255.5 li
69.4775 255.5 li
69.4775 256.658 li
66.5117 256.658 li
66.5117 302.274 li
65.2675 302.274 li
65.2675 255.5 li
65.8897 255.5 li
65.8897 254.341 li
69.4775 254.341 li
69.4775 230.592 li
58.7129 226.34 li
53.4941 226.34 li
53.4941 237.274 li
51.5381 237.274 li
51.5381 275.095 li
48.8985 275.095 li
48.8985 306.53 li
47.6543 306.53 li
47.6543 275.095 li
48.2764 275.095 li
48.2764 264.613 li
34.5752 264.613 li
34.5752 273.936 li
39.795 273.936 li
39.795 275.095 li
40.2353 274.275 li
45.4121 283.918 li
44.5323 285.555 li
39.538 276.253 li
34.5752 276.253 li
34.5752 275.095 li
30.335 275.095 li
25.7695 281.62 li
25.7695 314.425 li
96.582 314.425 li
96.582 294.378 li
97.2041 294.378 li
f
176.437 279.249 mo
193.461 279.249 li
193.461 264.613 li
188.18 264.613 li
188.18 277.065 li
186.937 277.065 li
186.937 264.613 li
187.558 264.613 li
187.558 257.929 li
175.816 257.929 li
175.816 264.004 li
176.437 264.004 li
176.437 279.249 li
cp
f
158.823 306.53 mo
157.579 306.53 li
157.579 287.697 li
158.823 287.697 li
158.823 306.53 li
392.077 278.281 mo
382.456 278.281 li
379.683 283.444 li
370.519 283.444 li
370.519 306.53 li
369.276 306.53 li
369.276 283.444 li
369.898 283.444 li
369.898 275.095 li
331.407 275.095 li
331.407 279.798 li
332.029 279.798 li
332.029 306.53 li
330.786 306.53 li
330.786 279.798 li
327.137 279.798 li
327.137 306.53 li
325.893 306.53 li
325.893 279.798 li
326.515 279.798 li
326.515 265.827 li
326.515 251.855 li
323.253 251.855 li
323.253 248.818 li
312.162 248.818 li
312.162 251.855 li
309.228 251.855 li
309.228 264.613 li
307.237 264.613 li
307.237 273.936 li
315.099 273.936 li
315.099 275.095 li
315.721 275.095 li
315.721 297.415 li
314.476 297.415 li
314.476 276.253 li
298.463 276.253 li
298.463 275.095 li
297.841 275.095 li
297.841 265.162 li
274.944 265.162 li
274.944 275.095 li
274.322 275.095 li
274.322 276.253 li
254.07 276.253 li
254.07 304.401 li
252.826 304.401 li
252.826 275.095 li
253.448 275.095 li
253.448 273.936 li
273.702 273.936 li
273.702 264.004 li
274.322 264.004 li
274.322 262.848 li
298.463 262.848 li
298.463 264.004 li
299.085 264.004 li
299.085 273.936 li
305.995 273.936 li
305.995 264.613 li
306.617 264.613 li
306.617 234.845 li
304.66 234.845 li
304.66 226.948 li
301.072 226.948 li
301.072 222.697 li
290.635 222.697 li
290.635 225.732 li
287.372 225.732 li
287.372 232.415 li
279.219 232.415 li
276.608 241.908 li
276.608 260.967 li
274.324 260.967 li
274.324 222.087 li
272.042 222.087 li
272.042 208.726 li
258.016 208.726 258.342 216.264 258.342 216.264 cv
258.342 222.697 li
253.122 222.697 li
248.23 216.264 li
248.23 259.752 li
248.852 259.752 li
248.852 297.415 li
247.608 297.415 li
247.608 259.752 li
239.749 259.752 li
239.749 265.219 li
235.151 265.219 li
235.151 288.76 li
233.908 288.76 li
233.908 265.219 li
234.53 265.219 li
234.53 261.575 li
227.027 261.575 li
227.027 262.733 li
222.103 262.733 li
222.103 290.812 li
220.859 290.812 li
220.859 261.575 li
221.481 261.575 li
221.481 260.417 li
227.027 260.417 li
227.027 253.676 li
219.524 253.676 li
219.524 254.835 li
212.97 254.835 li
212.97 290.812 li
211.727 290.812 li
211.727 253.676 li
212.349 253.676 li
212.349 252.52 li
219.524 252.52 li
219.524 248.592 li
217.242 248.592 li
217.242 222.087 li
214.958 222.087 213.327 229.985 213.327 229.985 cv
209.414 229.985 li
207.155 233.63 li
205.498 234.845 li
205.498 257.929 li
206.12 257.929 li
206.12 273.936 li
210.187 273.936 li
210.187 275.095 li
210.81 275.095 li
210.81 287.697 li
209.566 287.697 li
209.566 276.253 li
205.498 276.253 li
201.88 276.253 li
201.88 287.394 li
200.636 287.394 li
200.636 275.095 li
201.258 275.095 li
201.258 273.936 li
204.878 273.936 li
204.878 257.929 li
194.082 257.929 li
194.082 264.613 li
194.704 264.613 li
194.704 280.407 li
194.704 294.378 li
193.461 294.378 li
193.461 281.565 li
163.39 281.565 li
163.39 297.111 li
162.146 297.111 li
162.146 280.407 li
162.768 280.407 li
162.768 279.249 li
164.103 279.249 li
164.103 264.004 li
164.726 264.004 li
164.726 250.716 li
158.497 250.716 li
158.497 277.065 li
157.254 277.065 li
157.254 250.716 li
157.875 250.716 li
157.875 242.742 li
155.919 238.491 li
155.919 233.021 li
150.7 233.021 li
150.7 236.666 li
149.068 240.31 li
149.068 262.79 li
147.08 262.79 li
147.08 280.407 li
145.837 280.407 li
145.837 262.79 li
146.458 262.79 li
146.458 254.285 li
141.24 254.285 li
141.24 262.79 li
141.861 262.79 li
141.861 283.579 li
158.201 283.579 li
158.201 285.895 li
141.861 285.895 li
141.861 297.415 li
140.618 297.415 li
140.618 262.79 li
138.956 262.79 li
138.956 254.285 li
133.084 254.285 li
133.084 250.716 li
132.076 250.716 li
132.076 261.575 li
131.454 261.575 li
131.454 262.733 li
128.488 262.733 li
128.488 297.415 li
127.245 297.415 li
127.245 276.253 li
118.702 276.253 li
118.702 284.737 li
117.458 284.737 li
117.458 275.095 li
118.08 275.095 li
118.08 273.936 li
127.245 273.936 li
127.245 261.575 li
127.866 261.575 li
127.866 260.417 li
130.832 260.417 li
130.832 250.716 li
131.454 250.716 li
131.454 240.31 li
130.149 240.31 li
130.149 233.63 li
123.626 233.63 li
123.626 240.31 li
121.668 240.31 li
121.668 246.994 li
119.712 246.994 li
119.712 266.435 li
113.186 266.435 li
113.186 259.752 li
107.969 259.752 li
107.969 260.911 li
102.719 260.911 li
102.719 293.22 li
115.144 293.22 li
115.144 294.378 li
115.767 294.378 li
115.767 314.425 li
260.328 314.425 li
260.328 290.812 li
260.95 290.812 li
260.95 289.652 li
288.677 289.652 li
288.677 290.812 li
288.797 289.675 li
306.9 296.28 li
306.782 297.415 li
307.403 297.415 li
307.403 314.425 li
394.606 314.425 li
394.606 282.988 li
392.077 278.281 li
f
194.082 279.249 mo
194.082 280.407 li
194.704 280.407 li
194.704 264.613 li
194.082 264.613 li
193.461 264.613 li
193.461 279.249 li
194.082 279.249 li
cp
f
175.194 358.699 mo
165.347 358.699 li
165.347 345.314 li
175.194 345.314 li
175.194 358.699 li
.270756 .351293 .358556 .108919 cmyk
f
114.522 331.012 mo
97.8253 331.012 li
97.8253 314.426 li
114.522 314.426 li
114.522 331.012 li
f
288.616 334.144 mo
261.572 334.144 li
261.572 314.426 li
306.16 314.426 li
306.16 328.524 li
288.616 334.144 li
f
58.7129 391.769 mo
53.4941 391.769 li
53.4941 382.169 li
51.5381 382.169 li
51.5381 348.96 li
48.8985 348.96 li
48.8985 321.358 li
47.6543 321.358 li
47.6543 348.96 li
48.2764 348.96 li
48.2764 358.163 li
34.5752 358.163 li
34.5752 349.978 li
39.795 349.978 li
39.795 348.96 li
40.2353 349.68 li
45.4121 341.213 li
44.5323 339.776 li
39.538 347.943 li
34.5752 347.943 li
34.5752 348.96 li
30.335 348.96 li
25.7695 343.229 li
25.7695 314.426 li
96.582 314.426 li
96.582 332.028 li
97.2041 332.028 li
97.2041 333.046 li
101.475 333.046 li
101.475 362.433 li
102.097 362.433 li
102.097 363.447 li
107.969 363.447 li
107.969 381.099 li
104.055 381.099 li
101.118 377.367 li
98.8349 377.367 li
98.8349 364.033 li
96.5517 364.033 li
96.5517 366.699 li
94.2676 366.699 li
94.2676 361.899 li
92.6387 361.899 li
92.6387 358.163 li
89.7011 358.163 li
89.7011 366.166 li
76.3272 366.166 li
76.3272 363.498 li
72.709 363.498 li
72.709 357.582 li
89.7011 357.582 li
89.7011 356.564 li
90.3233 356.564 li
90.3233 325.096 li
89.0801 325.096 li
89.0801 355.548 li
72.709 355.548 li
72.709 325.096 li
71.4658 325.096 li
71.4658 363.498 li
72.0878 363.498 li
72.0878 366.166 li
69.4775 366.166 li
69.4775 365.147 li
66.5117 365.147 li
66.5117 325.096 li
65.2675 325.096 li
65.2675 366.166 li
65.8897 366.166 li
65.8897 367.184 li
69.4775 367.184 li
69.4775 388.035 li
58.7129 391.769 li
f
187.558 364.033 mo
175.816 364.033 li
175.816 358.699 li
176.437 358.699 li
176.437 345.314 li
193.461 345.314 li
193.461 358.163 li
188.18 358.163 li
188.18 347.23 li
186.936 347.23 li
186.936 358.163 li
187.558 358.163 li
187.558 364.033 li
f
272.042 407.234 mo
258.016 407.234 258.342 400.617 258.342 400.617 cv
258.342 394.968 li
253.122 394.968 li
248.23 400.617 li
248.23 362.433 li
248.852 362.433 li
248.852 329.362 li
247.608 329.362 li
247.608 362.433 li
239.749 362.433 li
239.749 357.633 li
235.151 357.633 li
235.151 336.96 li
233.908 336.96 li
233.908 357.633 li
234.53 357.633 li
234.53 360.831 li
227.027 360.831 li
227.027 359.815 li
222.103 359.815 li
222.103 335.16 li
220.859 335.16 li
220.859 360.831 li
221.481 360.831 li
221.481 361.849 li
227.027 361.849 li
227.027 367.768 li
219.524 367.768 li
219.524 366.75 li
212.97 366.75 li
212.97 335.16 li
211.727 335.16 li
211.727 367.768 li
212.349 367.768 li
212.349 368.782 li
219.524 368.782 li
219.524 372.23 li
217.242 372.23 li
217.242 395.502 li
214.958 395.502 213.327 388.567 213.327 388.567 cv
209.414 388.567 li
207.155 385.368 li
205.498 384.301 li
205.498 364.033 li
206.12 364.033 li
206.12 349.978 li
210.187 349.978 li
210.187 348.96 li
210.81 348.96 li
210.81 337.896 li
209.566 337.896 li
209.566 347.943 li
205.498 347.943 li
201.88 347.943 li
201.88 338.161 li
200.636 338.161 li
200.636 348.96 li
201.258 348.96 li
201.258 349.978 li
204.878 349.978 li
204.878 364.033 li
194.082 364.033 li
194.082 358.163 li
194.704 358.163 li
194.704 344.296 li
194.704 332.028 li
193.461 332.028 li
193.461 343.278 li
163.39 343.278 li
163.39 329.63 li
162.146 329.63 li
162.146 344.296 li
162.768 344.296 li
162.768 345.314 li
164.103 345.314 li
164.103 358.699 li
164.726 358.699 li
164.726 370.365 li
158.497 370.365 li
158.497 347.23 li
157.254 347.23 li
157.254 370.365 li
157.875 370.365 li
157.875 377.367 li
155.919 381.099 li
155.919 385.901 li
150.7 385.901 li
150.7 382.701 li
149.068 379.501 li
149.068 359.764 li
147.08 359.764 li
147.08 344.296 li
145.837 344.296 li
145.837 359.764 li
146.458 359.764 li
146.458 367.232 li
141.24 367.232 li
141.24 359.764 li
141.861 359.764 li
141.861 341.51 li
158.201 341.51 li
158.201 339.478 li
141.861 339.478 li
141.861 329.362 li
140.618 329.362 li
140.618 359.764 li
138.956 359.764 li
138.956 367.232 li
133.084 367.232 li
133.084 370.365 li
132.076 370.365 li
132.076 360.831 li
131.454 360.831 li
131.454 359.815 li
128.488 359.815 li
128.488 329.362 li
127.245 329.362 li
127.245 347.943 li
118.702 347.943 li
118.702 340.493 li
117.458 340.493 li
117.458 348.96 li
118.08 348.96 li
118.08 349.978 li
127.245 349.978 li
127.245 360.831 li
127.866 360.831 li
127.866 361.849 li
130.832 361.849 li
130.832 370.365 li
131.454 370.365 li
131.454 379.501 li
130.149 379.501 li
130.149 385.368 li
123.626 385.368 li
123.626 379.501 li
121.668 379.501 li
121.668 373.634 li
119.712 373.634 li
119.712 356.564 li
113.186 356.564 li
113.186 362.433 li
107.969 362.433 li
107.969 361.413 li
102.719 361.413 li
102.719 333.046 li
115.144 333.046 li
115.144 332.028 li
115.767 332.028 li
115.767 314.426 li
260.328 314.426 li
260.328 335.16 li
260.95 335.16 li
260.95 336.179 li
288.677 336.179 li
288.677 335.16 li
288.797 336.159 li
306.9 330.358 li
306.782 329.362 li
307.403 329.362 li
307.403 314.426 li
394.606 314.426 li
394.606 342.03 li
392.077 346.162 li
382.456 346.162 li
379.683 341.63 li
370.519 341.63 li
370.519 321.358 li
369.276 321.358 li
369.276 341.63 li
369.898 341.63 li
369.898 348.96 li
331.407 348.96 li
331.407 344.83 li
332.029 344.83 li
332.029 321.358 li
330.786 321.358 li
330.786 344.83 li
327.137 344.83 li
327.137 321.358 li
325.893 321.358 li
325.893 344.83 li
326.515 344.83 li
326.515 357.098 li
326.515 369.364 li
323.253 369.364 li
323.253 372.031 li
312.162 372.031 li
312.162 369.364 li
309.228 369.364 li
309.228 358.163 li
307.237 358.163 li
307.237 349.978 li
315.099 349.978 li
315.099 348.96 li
315.721 348.96 li
315.721 329.362 li
314.476 329.362 li
314.476 347.943 li
298.463 347.943 li
298.463 348.96 li
297.841 348.96 li
297.841 357.682 li
274.944 357.682 li
274.944 348.96 li
274.322 348.96 li
274.322 347.943 li
254.07 347.943 li
254.07 323.228 li
252.826 323.228 li
252.826 348.96 li
253.448 348.96 li
253.448 349.978 li
273.702 349.978 li
273.702 358.699 li
274.322 358.699 li
274.322 359.713 li
298.463 359.713 li
298.463 358.699 li
299.085 358.699 li
299.085 349.978 li
305.995 349.978 li
305.995 358.163 li
306.617 358.163 li
306.617 384.301 li
304.66 384.301 li
304.66 391.233 li
301.072 391.233 li
301.072 394.968 li
290.635 394.968 li
290.635 392.302 li
287.372 392.302 li
287.372 386.436 li
279.219 386.436 li
276.608 378.099 li
276.608 361.365 li
274.324 361.365 li
274.324 395.502 li
272.042 395.502 li
272.042 407.234 li
157.579 321.358 mo
157.579 337.896 li
158.823 337.896 li
158.823 321.358 li
157.579 321.358 li
f
194.704 358.163 mo
194.082 358.163 li
193.461 358.163 li
193.461 345.314 li
194.082 345.314 li
194.082 344.296 li
194.704 344.296 li
194.704 358.163 li
f
22.0107 403.36 mo
25.251 403.36 26.916 405.299 26.916 408.689 cv
26.916 409.355 li
23.7666 409.355 li
23.7666 408.478 li
23.7666 406.963 23.1621 406.388 22.1006 406.388 cv
21.042 406.388 20.4365 406.963 20.4365 408.478 cv
20.4365 410.022 21.1016 411.173 23.2822 413.08 cv
26.0684 415.533 26.9463 417.29 26.9463 419.712 cv
26.9463 423.104 25.251 425.042 21.9805 425.042 cv
18.71 425.042 17.0137 423.104 17.0137 419.712 cv
17.0137 418.41 li
20.1631 418.41 li
20.1631 419.924 li
20.1631 421.438 20.8291 421.982 21.8896 421.982 cv
22.9502 421.982 23.6152 421.438 23.6152 419.924 cv
23.6152 418.379 22.9502 417.229 20.7695 415.321 cv
17.9834 412.868 17.1055 411.112 17.1055 408.689 cv
17.1055 405.299 18.7705 403.36 22.0107 403.36 cv
cp
.912474 .787625 .619837 .97467 cmyk
f
32.0322 418.077 mo
35.2422 418.077 li
33.667 407.357 li
33.6074 407.357 li
32.0322 418.077 li
cp
39.6328 424.799 mo
36.2725 424.799 li
35.6963 420.954 li
31.6084 420.954 li
31.0332 424.799 li
27.9736 424.799 li
31.3662 403.602 li
36.2412 403.602 li
39.6328 424.799 li
cp
f
50.8066 416.896 mo
50.8066 419.712 li
50.8066 423.104 49.1104 425.042 45.8398 425.042 cv
42.5693 425.042 40.874 423.104 40.874 419.712 cv
40.874 408.689 li
40.874 405.299 42.5693 403.36 45.8398 403.36 cv
49.1104 403.36 50.8066 405.299 50.8066 408.689 cv
50.8066 410.749 li
47.6563 410.749 li
47.6563 408.478 li
47.6563 406.963 46.9912 406.388 45.9297 406.388 cv
44.8701 406.388 44.2051 406.963 44.2051 408.478 cv
44.2051 419.924 li
44.2051 421.438 44.8701 421.982 45.9297 421.982 cv
46.9912 421.982 47.6563 421.438 47.6563 419.924 cv
47.6563 416.896 li
50.8066 416.896 li
cp
f
56.1641 406.63 mo
56.1641 413.141 li
57.4668 413.141 li
58.707 413.141 59.4648 412.596 59.4648 410.9 cv
59.4648 408.812 li
59.4648 407.297 58.9502 406.63 57.7686 406.63 cv
56.1641 406.63 li
cp
59.7979 424.799 mo
59.6162 424.255 59.4951 423.921 59.4951 422.194 cv
59.4951 418.864 li
59.4951 416.896 58.8291 416.169 57.3154 416.169 cv
56.1641 416.169 li
56.1641 424.799 li
52.833 424.799 li
52.833 403.602 li
57.8594 403.602 li
61.3115 403.602 62.7949 405.207 62.7949 408.478 cv
62.7949 410.143 li
62.7949 412.323 62.0996 413.716 60.6162 414.413 cv
60.6162 414.474 li
62.2803 415.17 62.8262 416.744 62.8262 418.954 cv
62.8262 422.226 li
62.8262 423.256 62.8555 424.012 63.1895 424.799 cv
59.7979 424.799 li
cp
f
68.1846 418.077 mo
71.3936 418.077 li
69.8193 407.357 li
69.7588 407.357 li
68.1846 418.077 li
cp
75.7842 424.799 mo
72.4238 424.799 li
71.8486 420.954 li
67.7607 420.954 li
67.1846 424.799 li
64.126 424.799 li
67.5176 403.602 li
72.3926 403.602 li
75.7842 424.799 li
cp
f
84.3525 418.652 mo
84.4131 418.652 li
86.6533 403.602 li
91.2871 403.602 li
91.2871 424.799 li
88.1387 424.799 li
88.1387 409.599 li
88.0771 409.599 li
85.8369 424.799 li
82.6865 424.799 li
80.2646 409.811 li
80.2041 409.811 li
80.2041 424.799 li
77.2979 424.799 li
77.2979 403.602 li
81.9307 403.602 li
84.3525 418.652 li
cp
f
97.0391 412.535 mo
101.61 412.535 li
101.61 415.563 li
97.0391 415.563 li
97.0391 421.771 li
102.792 421.771 li
102.792 424.799 li
93.707 424.799 li
93.707 403.602 li
102.792 403.602 li
102.792 406.63 li
97.0391 406.63 li
97.0391 412.535 li
cp
f
107.878 409.447 mo
107.817 409.447 li
107.817 424.799 li
104.82 424.799 li
104.82 403.602 li
108.998 403.602 li
112.36 416.291 li
112.421 416.291 li
112.421 403.602 li
115.388 403.602 li
115.388 424.799 li
111.966 424.799 li
107.878 409.447 li
cp
f
116.811 403.602 mo
127.105 403.602 li
127.105 406.63 li
123.624 406.63 li
123.624 424.799 li
120.292 424.799 li
120.292 406.63 li
116.811 406.63 li
116.811 403.602 li
cp
f
131.617 419.924 mo
131.617 421.438 132.282 422.014 133.342 422.014 cv
134.402 422.014 135.068 421.438 135.068 419.924 cv
135.068 408.478 li
135.068 406.963 134.402 406.388 133.342 406.388 cv
132.282 406.388 131.617 406.963 131.617 408.478 cv
131.617 419.924 li
cp
128.286 408.689 mo
128.286 405.299 130.072 403.36 133.342 403.36 cv
136.613 403.36 138.399 405.299 138.399 408.689 cv
138.399 419.712 li
138.399 423.104 136.613 425.042 133.342 425.042 cv
130.072 425.042 128.286 423.104 128.286 419.712 cv
128.286 408.689 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 15.1.0
%%For: (Szaby) ()
%%Title: (california v-03.eps)
%%CreationDate: 3/1/2015 8:12 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb!!kCQBg_EA%#l!<5E9&KmWMpW<;$]3(`<B?'WtAI4M^Q=([Dj5rnpnQ^n/OC%@YhgD#OaNCT%E_+J+*V6[4<cqDCAn5La>bCfe
%cYq]irT<])hYcL/mJm'a.pna[9(=CLOKYYlTD\'=5Q?KlIeWE6#>\Y&jNDf?]%:'RI(Cr5-[Y+"g\\0]^O5YP\*r21^\mAt]=5!#
%^AI1s=*NQ9G]WQD(Om<PH#`MTQ`j`/rQhP!="j"AA%ZmSO86+p?bC^\m-VF:0A^'$CWDq71VWe5?]DNa"8HfJs,V*d?[_nKbMS?S
%?[i!8YK,P8ia:t`]_MHKp[:V5a&bEMFSG)crBG(9IWabT]+:m<nK50h1.LW5Msi5ur2HPkYC?#F^O,dC0>;c4m`#&VhS/e-^I1FJ
%s&c'i^OQ(@$i.^8eG.2]rF5]plH.46^\IZUHg0kHn^R?[pV4@-'E?h;Dna/\YP;//EdZQ$J'1WjI%*(]pNI\YG<GTg^[U.>.UFFs
%c>S40"Q'LU5]KjSO$<kt_*@\pmeh[-,j!psrUTW>GQ73`&".LOn;!@6^O5_6rC\c,i*<oIGU:p[S^5p]b*[3P<Rp3s:ij2dF)YD`
%*So#??Mg>S<UJhIWAK%f=C*Yqq;ULcrp&bj?G?44jZ?a:2t,W'repepXHkX<3i9/fQ/&NJ-qPNUh:Ji:^AI(P?b@H_PHK+tdU0cf
%r8fG30\Xm[="ge2<\j:HlP"bmna8%`hiA6;p=7c^d9g0:B7KfVY?ueUinKgg^9Rt?B>=95jdSKIIEjJB=S&r$ILOLZY.,u(`giCB
%D!K'uI'AZPJS<MG#H_,*'smknZ06]/mYei-n`Ep(_>;jB^\d$^@jfcFe`?b8ea'[AYM9)aY@HY^hnOPKSbM*L]3cX33HtGfhrCb5
%hgBnIp,+0!]C4plA&#Yoqs;kf^Z]$c$iY!"nb&50%,UdGTAGSE^3G9b5P`tsaktfb^O>eJpuC8HHi*K&s7ka&Da4'N05`t'qen-k
%rp]?prHRnu2uiS9?f$kBoF&?Pr7CDPro3n"lPEoUq9':*2+IB/jd#ad]["^jmm#ji5NMdJd0Hj9)N_R,hgG%de_;aDL?G*DDa(r4
%QP],)r#q%1[eAk&].<kh[f,G,hi,=_(rSI=5OSKCB#f5nEY+6anX7iR^?:(/:I"&A0Aca+i9i8UI/_Z4>qSpDQ^^48akqUFqVU/D
%qVnR-Zbc=[r9k`[]D!u9^%onll/oU]^\[]*5J2FAl6(aBTRT!Lq;$CCkJ,52k/37.@/TQ0DW>po?G63p0CN4pq<q\G5M#fYJ"IhZ
%Nd$!"._7"X+8b'sVtmTQDuA5^%LE$r0A_Y_mttB=T\S;R?UA;8qYe1Dp_((+jKmsiUYYk$@+$P=rk#rBIeI$MDVqNkr;F5DT78Tj
%s/uX)Hh$P&^V>9qk2fS_NGk0D]ST_!T7?F<J,SG@s5tao$dZ\rkiU4_J+s3G7K*8]-g<:F?]'R;0)DVg*.Io(gItq'GW:]_jmiBB
%p_EcXs&W,<^HVX@1]DkGs8OG%No/[f4W2#4j7b)fZSlae9tTXK2`J3)G;i<8T&)TAFgq?.N`Ydg\ZN@.[borshVCB+I<teWcJA<.
%E#2#Sq6&N'nS<@ImcNs2mdBM"[H[+Fh\5rO?%1,ho1jeU5@OJS9H7a>g"Lfd`m<t3%Gj8.n#?;Xn0e7klL0JBc<o&Xkd.ZW7[QK1
%1"pjk`m9^<]6-'Ypj5&N:W<p)$kh@:5CNI`psnmbj-Rf)OP&8<]sL[1.="TY/>;juo!A6N5KS-0F#UYmQ>=cUg0tP%J8WTNdkNM"
%UE_^f2p<LY2R:SLp%-LIhoV=-j$t9sq8X7Li\0nQp_Ea-rn@)3r8$9i>3)mmBud$(-i/24h_Y/_aS;Po-dOo7:05!.lsj&MHH'^&
%qJ5-Ca6s64s-'(7J)A2V62WhC4dBApnQBnm2jV7TlV4oAGNDDA>+X7f<K;W=Yn'_Ch54U9`l('?:R`:f56`%H2TW"Z5P?g;\*_<4
%4mT9J1&TPA]'?-DhKg7WH92n`PQ%pR]5]cY&13DTc!tYS8oaCn9;c.RIc^4&qJ5dD/b\:MZi"_62ti8[*EuQ9,@pQFj(<W.N5):g
%aZm'KDY;%=r1rpS15t$gq()ASrK06*M>W>^Sib9lRdDlb@CEXe=,l+)TYVF"=:HVlbJfP"(sMBRnU$/NfQZNpR_V/?>%7U<T4rr4
%eA625p>t@2EQj3QEW+RXT-rZ?[q!/KR(#-=09;N[@m5<bm9+csL3>ME\J[3[`k:K>!od;g^:F*A4rja>X1*_phpahj9H>W2NtjKn
%[BZ0*GrA^SP;.UBZ-rKWo*.R+f>4B4jA6qmCV;uuDD$\Mja+!e8*.<?2gPQX4,rV-/K9%u)JL62NcSkF9#YG0C@CjHoZak8dF:u?
%6Rm>0E#49F>fq[%BKQ]@"7<"thAj7m]WXbnb%o<Ud@0bZjR1F_6!mD.0TBL_NcFRe'%'Z#YHglp#Ns%g`gDMkc).pu?(a(Ilh8FD
%(>.%6*QS-9^O,eIc.2:&onum2n$hVV@VuFb,?moR^QjcOQH\nK=_-U0%Mj:VLA,6Fk%A4E_WDjXnP>Ff#BKI2r;/rDY;Bhg(".['
%e(^^]Vr_V>_Z6HNA.;>U%W9>f$Fb?BEU('9T5[/Yc"rm;=WBZqIQr;AXFC"^r:#bd)/oZDA=S`k=$@Wdn*/J3j1Am.X?Q)U?]O!E
%rBZLEp5-ID+*nWD1.@[%ETWR=bRe7'U@dK!8`MKVj%/RtE4m:IkK,]"T+.sh(Qp2gTAXOZr04S97N"de,kF3g7&+U5KWM>>`?d8u
%:U]t]bj:WHXHIiTMA)S5"@S&uOVcFjT,@FMb',bH%"&Y>]J=#e2pRr!i1k4+n(>C1/8]4%MTq&2jkJE[r6OeY0-:-J[Wpe]N,9>P
%DnG=?`Wk1@j\K_]Qin]\Z.=TEjVf^<KCsf9X=YmI@07rapCu4sHqZ'=O4_7(q-$HZI$6:M_/B'T:>LI9=)Pam3;QEei(()Khn4=+
%jtAA(T![BWR?FZ*_+Z'+8Q=*AWCY[>5kfA>W@?u7HWbVo=)K=S.WFD^ff%$nGkTcS:ETS%D6Ro0\H/#8c_Z+^+?Q(P@Xho%DG+5)
%Iu(#7:qDR[(o=KnB8>t:)+?I&C:"KpI<KIJUo2@!5\+:GFlu>K,=*Z;K7*Hl%7NQNg-_NmFf5o4[8Q<_h+&kRISYF^mr&/b(A6QW
%h:jA#2DX<m;P?[7VKj'63D4q($ol6_(aWb/WFam_b537R8DU:EVh-Po!Jt_cmZdMg0Jp#,d!Na:ms>um9oRcKmMDk\;,6hKhBqR(
%$Z2EVi&sHk<&W8'OS^JajM?Q6KE2=J1=@D>s/Cu[01(^[UP1N7YF;9k@tAdp4]HTps7)2'rT"`C,RaM:Mm)!PI&68+IsCMOp"MF_
%qHq\)o@P-S-c.'?3Vg^VD%/q7;.Y(5T$i]3IJ/:;^(3s;:5(-\aVr^dgF5TX@3(kGE'3*#G:FYe75Qt,"$cN;`I_+@=JQB\!'i&g
%r*\eS\/k:]NN2sq/;U;jGi10=I]30aI!]h(d>pB[UcQ$9O:G\]U>?-(%F,DO56Nou1[N;i=8ZGJK3^q7_*qeK(s6GV;f;Rj<EZ)e
%dI*=?)#TR%m0_U#,m7KKfb?kL&A=K0/Z9N=^GPbcSegC[JHi-UEa,FBl40[=8oDKn7Ed66/utZ<X?J.eWej'@Vtg(P@co<HcF/Rp
%O,:Ah&TS-&)BA!hH@2%jpUtrhEjS)i;50%$;e)r:P_lO/L3i5-D.ZSBo0/oubgU_NW#6sdd+!e.qU]CNldVnPBhc2Y4U/)1XIAi8
%bV_A",[Z;?%PA3.%B^0.IIf^65O;lU5%l&(LOF"(nuC$"U[.iWW@$iTRsmSEI+@dfn9e];!_FGjT`6Nr/k6@+KED/<gu,51pmn\#
%d\2/_)?7]0J'.XQP$:-MipEe5mh^On^N%gk"3lC"2:.ft3bU]mToaA4i=%=?hMM2\6OrsG49/X9.5-[ES'EZ<SAjam_Vd/"s-E]\
%mE2+W4qV(&("_p/c&X?U=KbZ'4?13gQ%rUQ[P_(A7"03U]nbToW4mIgeb=X#C-o3TXCl\K4-`g%L5Vo$N],Q<o;M60qNKW3&)mH+
%%^+3%2(/_ra,94N2k.DELKNF-$>.jD-2lX1eN($SAZ1N(@'^_uT2*$92cVGS7$!>$PX*.>fQjh/NMA._$A_oOju(nQ*Led4QTG#k
%D5gR*7mhO<QTC/A/"7&L9@^2sL2`L=8NVAh\c)<C9ZO7E/98+"RQEB+VMJqU^%S#JbE$K'8$YAhUn[Mk*,rMRq;%pO6.@tnn;cCc
%rbe([h==M9[s91WdtKsLk&%\T\#h`FQnkI$dHR5R)BH5rg1mfM6UlTaigDeTQDUPhhQ65D00\q7O8R3d2AnQbR;KA)=&-MXqPDY:
%aY>*7+"/j<]rlatAp<C44ET-V7uj+:SuXpd5p,U9&m*UdRHJdbHQo/8;+$7#2Q`/AH7g58be2[](?T_JSMe[!kXS@I4BiT-lIiBk
%kK>]b::]f)A6_.<^/r1"`1rG=oia%%5Nj5U]5dfd)V5r$?Mq&5T-)MuIrYq>,)9o4KX&PD\k5a-p:3T!>FA!X%/4&/nY\<T5)Slk
%n?&C6O&_qJ97:a40,oj.ofJ/+5IloK`X9]K\*u_tYqe]>.#<[3CuLCH*W?G)O@tsUj>/93Pfi2k(*BmXQ@jLMe[IY!eO'jg*W'mO
%0<9kr!pK"p,#TH`97&QsC/_).+qOK`.'&9"9\:im^6>PERg1D'l+pDuhm_#%HT*kC;gNo12ulk&^"Cp0ZFb=@plGTtc1cO/?bM.L
%9N)lhn^sap$/^-8LH!f^Z0%1>5$8W*IY9nrfZb32\oZJ!IeJDAV.KCe5%7)p5Xt:3[Kbq%NOhHS]g++QU[O*Uq93iNC#DTa$h=jh
%:D<7pbW^DJ;du9@n1c$9"4m4FOg)4VBZFl<'t*V?<*b5$P=2j+e3*HbhOMSOf4u#:?E`jjW`]pC&m3U,6U"ms5OEUjZE$-N'o/K'
%FaI&/@;s=3."6por)6r$!%[r/;-8d0Q=sKZ+oE(,n(tbVc`aMNnEu3]g'DCA";cI`%p/_@q?2\`FC!$s_6&Z[$GdfKs6OM=VhKs,
%nQWR'^W1j(cZ/\DYL:t)YQ"3E\?!q?_>QUt%Y()[^0[tLdAp&_n+<ITVN]3V$Er=-LOUO=aUk3lc\`9Lf)YX,,agF%C*8"Rn^m'V
%T2"ulOiH;FLSPls5DpgIE?gEBa<OIV'B=6-/mforGX8p+d+D?3A%rFTi"_k'*U$TngJ*/\`.bIUde+HNQenN#L-Cojh;jb[N+5#*
%X&uOFAgh[5!VL;gE5.eP/)[U#gEC?rZ!O>JQlt16-s'"Rld:1Q1n91^D$V04n)O%c]UI#-.&H<SYDg^_5-^)'5^[<\+(qO)]X>kC
%WX^J2YqLn%[GCKR3e^nLEVaWKfk27ep1M!])U'p.,Q;@>7%\"W7f5;8Yb;&7[,:;&oRe(6aUPu#7WX3S_/9Q2#1;EQYocbOnn!:I
%oh[:,l/j+X)uOUOD9*7!3r3tP+KrO4ENm2Rf?W_A:IA9O\m%5gg'H.)ek_djX\2:1m@I'*HC8m-DXYaI_4r6`"PC[ZP1T"4==J#9
%@(g1\?u=G[mlCs3N*D?[l0gQR1ToaTCU6CChaV+Hfl*I:EX]7OlbVGh/Q<nffT<B"e"Te_[GMr?[A85MG)<3PpR&Y.ht5N^H1mdf
%H8IIqpu(;gc(k:RG*`p:8ZH9`&2CRf8.F0<=R+YSd]^^FaP.unOOd"/&T'=5,MI)$Lt6:?O9LAlYg%uHB>8^1bV;dq3od!lmu2Y$
%jSG:,ml,CVPR>Oo`5q?.`lMpc1u*qMml-MoO25CO@cZ:sAj+jdSq_:p<*@X-:?+nc<385Xg2DQjjg^B$W4ItQ9>oG1:n3cT34><b
%8CiohYrZnhS`84qrT6;8#:J(\:h+7plmYlfmO;)hL1u!^)s1[4(t&/tg27hH>)-f>ei'6mV4)fd%o4_fXIW.g%.EocaP(RTR5J.s
%q/g<'^$X=lot&ZEWO:X5;eu$!Q1M7\db)7r@r&i))UF%GbIY*Q>?b0GNji=D9t,I1a6`#0Ec&KMIIlFF`GV9.Y)U<,(:K^@(:Jsq
%n?n9G=O>W;g[P)7AO5'am/5SWA0'BBT#UBkr6f/gSR4THn5a/9/R7?0gQ&VlpRB=m[s_rQfD4R_c%kK62H+dJD3JEV`cfgudl(.r
%<*j4[7^YsKNG?5-UY=kQ%^BkSX@rH8dtf(7p.\*@cAbEVJo]l<qb?G4ZWpl[gVe2sDk'1a6uIG/DN]AnMcd6gp2Z=;X@)m0I5i`-
%8;J4JE(:_o#jIjPLk^Sm/.p:GF@_(-%i'0;fiA,uQP-cKohd0c"Gg,0ce<9.["aS#4jY+e3BrN*kDa;$d(?tADJ'Xo"R9:KfT,ZB
%B]#q0N2,2CL0"lgVKpXNp17q/A:I#DgP0;f]A'sW[OH\[11S8gb!'NZ)tQ!;GWekF;b73C$c9\c$1iX?D0]A&5.%.\Yh7%p4ke>m
%<6iY(/m&O6mYmWZ[UWhmYfRT?g,er15NMCdd`1G:h;*m-P2eLH^6.B$jnN]:`n<<@r7n]8XPJ-M`nJZeZLQ>e<&.VR\q&'5f>cOR
%<V=$4f=%i2]RI/ki*FXW6Z9G-W&VIHRE)Z@4,7/pRr,c]<X#p+qPYl?p##>2+"ui[Vtd-HD3Ea.#Am`9;)u]-a,NB'2pXh]f%#OB
%nfV8Y-9nhMS61i>eBS9+#83hQQVBV'8bj;q1V%2Te;pR[gN5P1c9B`%cDo-,M-3p3VV8D@C9r'\XF`(alo(0ueYot)quh$5_;[Li
%$lefp<nI(Z%,3Nu9?nLJjtbZf.CV4@D<kpo@QlVW0'_@MMMHT7RXAL\HGnHX2DqUrSqYncj[Y$YN=Jld?U`Ld+!6Wqf4?pY:$XR)
%`hpcb$/:>!CEOQ`h\P5GC*;7tr!B\*K8"QYo5>%c41r;ZcG,oK-\6PQkWG`f%,Gf=%"14LI_<MmiRr?3ol&Vs)sV&#5BE0.=D(FK
%_HjTKqKj59gIQh,Z1m3J:Ss=M!oLH5GFM?JgpbX5gH-\M7=X,/i1p/7`a_[H?ZuILJ=Y2n#>F9P5Pa!]:W.#T:a#:2Ie'EVo=$A[
%gqUQ&&#MJQIpR]^ApBBKFD7s,?@1j\".u70dU1gX.AtgZF'Vt%p4:?Hf:/D82so):#jV0?h&=p/RY+;nclA"!EJe]R19rYG*lRgr
%p^W_TCnX4i_S*(Ol//`.J"C1o7cs#qS79DQQ,3gIlScc31P6c:A/&Q0Q!-"Z3,b4-/H$Zk/7ZrK[I6QD(rDFXj3L:sWkcerPaBHS
%H%c'?]T2S9b?r7M*<!CYdiC(817sS?Y]>^Q/+@?q#*4+J]`<.*G3M9>bK;/umbY($OS!g7q4^eaS+LIN6SmcPO\RqT6^sWYZX_<q
%a)RE0Na$(:n4q:>\`;>cENX7u"s\*3;m,]dF4L@KD'7$^4cd]NGX%kT[XK8"(gD8:`,O7ZfO!WLJR<cF35B#+gJ+G1R)"_M;&=@-
%_RQ$2ebCPRYjBD#S]BuKKHLJ):]NiCCJgf8g'<u?O<7@,*bl8LS?Ss.:je0)L:Ir;XNImY3n@!PP/h%]WUm8&3h6Lp%.1ge]R0\>
%MgN7G]m0;=eZWr\(BKnQcIH9.rV,3aIg86D?ejMpgu!V[qKHl8'<^ej=8t@Rr'0]No^EEQUs'V]1ffF6"U%4ls,6)<`84AVGQG&/
%d6#Y!EfDn,9Y,#7Xhc?(RE7]Sb&N>8N!6:9YfW%f@=Q_sKfpl)N8%EZ?u-L;fK!0^S\;\f6]-rGK%Gp#>*dU>:89kK(7V]nFX^Ic
%A!gT:0tMVraJ^Ugp<ctV*#QE:`Xu?aDKUmm9A:0`Lq:@A>dqe'a^mV9-rt+"XV$PR4prcHi/gHE]Ypd\6]R$Ca=Y?EN=.;"X(>Q1
%F0J(^g*<)K`Es3.1h=BQqpW_0CV"r7KE,Heh<+,HX$-UnOaBbmOfii>FYY)dLFX]]kX>e<3]Ms\3[p7=XNd,@G,3ENE\\)8ASf$o
%h<c%c;-#BHS"eYdOQ^$H.R.2@p*^_[jj&]<=(=DMX$jcg[W]ppY*Aa*4jSmS%'[f;rl[D=L;]9R+.I4C'GuKC77kF_%b;&5a2(IO
%*!*'JI%tJg2R,l]%!`92pLJEO%Mf:pc35aI@6o+K=*QG(4kPt]8g&m+pT&6=E<p<gCkL9*&j@CO5T:>/##bUG9=1g;A,%/k.>&G6
%rkfVqpb6_-YBm%D,ha#Ef5\/.:7G2HkV3L@it5XRW;V^uDm>8Cl]@NiS3(mi$\K]FB(@)S?mV[Hi(L&cl(jB0$2]*hBAYg3l8YBU
%23:hX#:j8[!`,^8bAl<:S1dtc)2l+3'8-O2N+f#mG=2+=0%u(Mc\'PG281DXl&>Td'(tNHjSKIM1^oMTk9!IIo3u6J"`f9Opff4H
%gr:H]0j4',S.]m!/.+F'3l/^s"E.c"?og9"`a5>kpf]+&[YC=#nJ^AUfV*:=[cd?sDT+>1.1HHb!<<0b)i&M,guP`IQk_@Z5P-oq
%hke@"1P76ijI"g;/Z:Cm+QXo\n`[5!qs_qG<r'Ij@i>"jD(*76gsThOIgg%q&XZ_,YeAFSCnXdspIgQ#6=SncO^o*hY=WrRDpb+*
%Q_W_:L\]NZH[I$[#U*OXY0jZ%m6DUI%QN].EY2[E3C2L<7+<02:ED&qn<$ZhKu6_U2n#U'$b\TIYrnaTa6D,_d2T0!BU&M]r0@0&
%:@VFgFc7)!lBoE>.R46q*/*9kCO2Q5qA\PqEjNn_*#.=r3*>gA$is#QRkRa57?<4][QKQaZDga_o>MP!662%Rj,XX$(&\cj6Tg$s
%YK3%k)U0rAeDj3M*Nrh-o$HSQ^GNr0F\H\%#tK)nbJ:/Pb)ee"?TM'MR#KPU/F3q)?E;H!ZWN98HXJD+kE#SPlMLKT8f+8%@Rp"?
%r2]WnLrbtPS>k9mlOU!#'Og<8rST1n:rAZl5PiUVZZ0sBZ,i+Jb@Or11pfb0N*Uf1f[l.4<0@,/e;)bc)c#`4A,eQBc8Ko64f&FQ
%n"2i<d,8hI%q$<3r#RHLE5B:s'tJhT@n/0njo'Z6c4mPp5FhPU:QG3NWE3\u>drc7R?JR?Oi_e&Pit4hD\[tq*aam=`Zg,MBIp,h
%/S(Q5,r/KZL"P.:1BY_\Grb))Meh/gha*(DBV:E3)-h_6lL'=,`H",nj#Fd;5p&cJpq]/+#e3]r`c9+s&9/c7Orj`,\*&"i[D<rX
%[.?\;>RT9G7YVd33K]^(&_nZS9gD>jMh3ls'*DBSIC\;K;P09LoPT<G$ob+l@?4i'#G%^kd+Or<%=k$O<RAe7)e3\mLnrZ>_!X0\
%HT_Yjcj(kR@-D6d\X>T_.ji^M-E\S%MX3*FbU+[ck&JJc8aK6mj7+it&9L[#89GM7;\X4n?@*8lmWIZ;'+,f5ppf`UH"_@H8,&a7
%'^C*%j<,BG6Klcla#ji7^iM7E,h^3c1I1/`C:#*8YqYYbL(SsiZlokG%#a\HPf2F#A6R(0Ol;9=,l;n_Qe%JsE#5QraLG^LE?%#o
%J^9O>N9fJ45#(,ul+h(h-BPHdPK5XD_:OM`;K9dCdl'b<W-n'$W-b>QcC?P`DZF]DVf@*#Ced`#6NZXcdEi&)I]-`kiLE8Z)e>)9
%5Xpe7/HSu5I8t9::a#E#;<XIQ%jX#QNLec-f=3kkkl\4?0OQ$@r##,a,[fNj.!MXF:SCe0(I7+uKADY-WG,.l!V%2-#>TT,Oc3U-
%kQe:kkK\@SIYccVNkGcoVVtLoT!dka,FpHYH#q1K`m&AYl1l>]P1q/kN=2i$GuKmHk?SnD:;t#m2hSRe,W[:i/&i"Un'J1)O*#D5
%5r7_q;K'gJm[".:fWM2RA385[dY"DNqAd1-UG>Xj#&>1\X'Y-hEYo=%'_+A4m)mn5c/*0,!Af@td78'<9ZPDcR\D$g&TY3+d#QZ-
%;4[fIVhr3dJ/K$4_@-4$c4\>\@LC:e)G]WG$j_jr:DaM]!,N.p;a?[7n@?MHV1B5\@Yp<*%Z;,5-""4U^sSf]`*+P!9nT;]#UL]U
%mZ,rOCG/$A]oq,f6>D3[!"D;O`aOJb"N>:-0LM(s+$tPtAg94[g#/!GZS0F\C,tm3CoB+%!s\jmWls[-ba_P_ZEMQ<gCJsu52EKB
%EUI5%(6:HDNJ;4[(WJZ#7\J(<oN6M)K<*p8[X$h)Qkon3@3^<%O+e[?"[+n&U;JhHTG]<0Ma=ksbJo@E53GB'%H]tDX`p2V%\Ea(
%F6%SCX:AaDLX1"^L@DMYDAgII!Sn[r1R8SJ1<`cnF&oe/Yd(22+UCe3)`g\Dh(EnF0>t%"`S5"CC_=jLpsT%#,CJpqN&^SjM_%ka
%SNcP1WZXZGP>(JpEgO;AbQXi2j0H.*O6BjDdakCjH"]sl=@P$1dp+$@WDII[Mebo%cYP?Jh,N*B1'Y)X^)k3',2&N$G,_e`7KJl/
%ZTjD@Yhn;Oa\IL+35eI#k#@*>#[2PImC#e.1T*T0C70)2)5N#[K87MHSIZ^I:^$\-Use/qUkPh,?4JuHiMs(']D8G_j<P8X)gT9L
%Paj_2Hce0F[[)/$2^qGOE+m&(^q^mp^#Q\b$)8[JM^8FYE%&e#<B(UZ)),irZ3e@O5pTJ^p#%^5_rRDXjWGT05Jj8uX3'QPAlO`)
%+sXqCdhX_s1^>RGCAg`J<S13/.euPeN>m9;fiaJ?2b30j3P<q4oM3</!pnDL7D/bJ16b`4()#`uj5</Z'L0(!KWjBO&3h!O0LN7#
%`>Fapl/&;sg4A,]2^!Bl'a5&8O.)s!,hskOha[;>#q4b_82Sc;-?'lM&giUK!0$F"9j&2G3<(.e(ESuW_Q4NL$QP-pM`<"pX6)ut
%IVT?42@UL5@P%.e[4GkW&oka4MFmO7VNG/,>:]uG9^0+*E<G)):4H&^-O+'*=NrgP,0jJ][>1uAD2.S5f8Q'K#\6gp";"cNAYfa!
%,PCAuWlsT0-HI0`YZ?=c@?0Q)*1IP00<%V-9Tkt++*6eb?H+;O7:7u^GFUfmf_+jkektO@G_WJVi."5iqOQ?`[[S$lAEmZZR:_N]
%#6u#eW(\CukSZ)Cf&qYPR>NUAZ&8m8f]0)R?\BO6*mKDXVh!S^(4O+i)kWfX4fD^*"ptQ33#g\aF:]H+il:&2ike=GZ:JFp>j8Ol
%r*tbqTco:1%<kF8Tf(ns<KGN7-W-e3J2Naig:s>&R*[OcPJGV/I*lF9Y3ET$V$BXQIHSL<gE>dC\,XH<)\fI;R01p.74FaFMON&)
%@DI?N1buCI<jO-u'ZrU2lieShR0=D\VGg?,9G<Ka6/\hq:Kd'R+u==<dPC;+i3SAO7*.^t-?,P++\u?@pUXeW7\#++)jN=`lG\ql
%])Y5VbXV+LKFbN@MM*3E8,n)BMe\3gR1>QHh8X\MToZ=CWeDhpCUJ7OUr)!H8MP>OT"We!.d7.VQ:^/Y;`k>lKn9Ns"1*941KJ*m
%VJ>0YPa2TXZr<<a>0'ghd#2n@QI0i:\=-Y,*^i@[%*bPGnA[<</@CKi%he2/B2G4_QtK]YH)e46_I&'TSRk\X,$amg6Q@AKSY6\0
%cO^jp=C)a]'Jq)TO3pSXlIacI1!1n>EsJPub3_s[!S$4WpUUk>",u6[UL7\EVQ#ZKH?Jk4Ns*%YYco95^rt;f7?f(+Q_L@tioDA8
%F:CMG<6"`6qBRbU5!&K[idD$I,Mb'SFLsS4i,T&=VN10di<Xm()Z3KP9L<0B,<]FfFEZZi=CqiQk_JDQTf^o`Y^pcHMC"(#rXQLp
%1(eo/Ncl"CK(.6JIn)+g&eT+d;g'sP'r!-*3'*2"&JHmP6VK]r87cepN/gQdE>H_6:P-a9Rq0]dTts%Ms7Z-)$qOA-\fOnp<i4\o
%^\d8>hj"]Mo>_rDd0YTE%YlW<gnhTWkss$`8L^,Qg('u&fY/LmJ<WtM%a`"DcuX:ETcLS!Bk08Sl%9c(3;E3.M%7&:iCO:CQo_`F
%];d7+@B209,3V;sk@^s^\/l%'=P^UpCMMijPZmJPMD3.!$"[n\k9C[q,U_MP:2hT-)F3bjB/HBR"KUcEAhiem60d^cQ=lYBd!!Zq
%4Kl2dBKk7Wq1)K:WSV1^'nua1C_X'66`l`K.6FDb*,oNuB,pZ9?!ERAib_`JO(\Af@V%"/__Cn4],=&m6S&e6>!3eOpEWU7oFW%I
%)/ffS^nho;Ka/XG9+[So!8:^?U=li,S<=eLXJ<!f/R:#f'E>t`P#^sj6/WC1L;@3U<h]qSck;j-p("u@l#TAU5nI?0]aMIeiK/"d
%PV,ulRgb]L8@O5L9r^IBX8_BX]$!]/To70(S!\KmR$^\r^s49]I/Q/^e?P?sTb'43-L2goRMbRX*tuPBWF][dI@_@hBlcYdB:0_8
%:X4#;KSk1q+<E+U;tGX0Tln4aAs,Sqk"NAp>K"o60P-0KGeMoA+r#SO_,p_AZpK-g=oM_'A5bkqK`ts/Ss+21AJ+=uS/U-<&N4S2
%hSAPDY"L<g?5G638S#FLJd1NpqTgUje)46Q(!+qf93F]`-luCTkTXJb'a=m,[SYeBH1Aai&NP_;0km@:X(T:Tc6c;Hj@OcsDS=nE
%HBBi#28'SE!a'=Ke6^1S:iDLO8'sd\"&1o'I$R4*qfcro$KY5u$aX/,Q0XA;q0CdBN8(5JDDI3,;,Na.Qc_,`:1CcQ*J/nJ&PWht
%.W*6>i@JS=S9IdK@83j>I`YGKVFf1Q4/ik3Q$=Y33[kk)qa6IO"&T*T[(#X$bOUc4bU@iF&&J9@ru/_tW(8`m;.:^b'_Pcnq=fu3
%`"1cOO<@Y!W;9H]FfSD/C#G;:'TkY7+Uunn*+U;AZVsOK8/f2"6qG/2a9Zl6>Jd[shla#'Dek2IiXV_5fO'a5f:e!1!eJh:KK$'S
%WlR]n,fiA`:f&S^QHc"4T$F^Tn?EYV!JsY<ACIAp1(?^W`n[r`'4%/.H\7auiQ"7E;fp!eK'*XBL26sm/c7X9-d#6l^hR&=S1p]n
%X`"L3.:(B58ThPJ`dEAK=JXuGc?(9KcQnU2pA0k./3/Vcm6%<T/'fAR/-X>=jQ@/R#)"6l=NSqqBN)u*JY^TdC\?WKHB8Qj)51Nl
%^CX$L%G69TY?ib@n/cr*nZWQ^5"Z7#l39`?MQ-pfcg5p3;-7jFLV=YH[YZ1s,?#<I_g+Wl2Te&0-#c($nEaX%IR#/Q@A*RXf,aT0
%Uc:?Rd;)u3!2sTA6cci4K.n-@/8/4&?G/j(A-\p63p^pkf5TdjLBOqC&_TPa`=#c8Og/fN<M5KcC-!TrTK"7)Y%BsrS<6Q4TKQ'1
%\Wd\M0RX;>pl'n.'oa4S.qj`IKgG//BNBgY2Vh/bFsqe/^1ep>(@f#P*X*&Vie^DPqOen`:f+.iXo4GXo:1^)Ze(8or7#B_Nn93U
%;B2oK<aB!1Y^IW"YNmf"_[1bZN$tN6M#j/<AS]fQaHYnN1h@??!2^BfeV3H740;*Z:G0_Dl(["l$j=Q\?Y\l+i-D/S)^GZY=%PD)
%s,LCQ%Z_V.6jQ)2M%k]aXB?0G+D30/fKn3O=RIjV\MVn]1\#F=ifg$:AuZ6V>Y:-gSK9(R8R+3PS"JsiB@Q%9#K+uOe:U+u&<G6r
%1i@!$nGV@N2Tdgj#'AfGb7)i4=9jgm76&WOKp2)gXlE&$G0i"d1Ft4P70;IJn=*`.=:Dcu(KCQiHBFN>`4<7=;Bu'b>`;OVd]SSk
%/$#/bV@NL;Lm))<h8sYEUu-&.l'XNH%"lqU,;Z@"AM@uJcs:4h(u7!cT8U_3'm2JEm1^mDd+q?N?(B<p:>S8\:8ee4NGu!cFs<Q<
%%l2P,M93cg3ul)m9*DX=4U8#0&LV4c>gD&-eJ$W&L_,qk&D[B?YtK1o#bX_1J:YCiY8(2G^)Z3G$=2URUNY3N%EZttP,!_BQQlA_
%>Zk'9Y)V:#f+:;E%\jeBXRjZ7F!2PS_!!:CN/Z[N?DJ0f8nRTDNB^(^l4Lgi2/Y`08;1"l*5.oRM^q(o8iK#U@o::4AI6D/)@'>"
%U\eelIqGhl9&uqY[nB=_+jQLc.uL4m#o2FXU)V*FLn/'sW8RuqT*iW!3`E@$VrTej[YJu/_)H=MDkHlLl$j/AF'6F6f^1ef-^+-R
%mO4pKB#c>^Y8ts?E>moY6J;8&3=TbjBidB=3J/Cp?!]_#Fr=9g3k?6M.E\F6%rFp2E0%]tV;=X!;"1d=*1g@lBf%dNXRe8SJ28F2
%&=TTPJ/HC<6a/OBEX'/Z^E))2Z"k7/*#suhMW4OoI;L"D+Er[*eR,mu`B-DTO-Q.9Vo"ia'_Q"Z.u\^r@Y$l+_,;&1$Ui>e1$a+)
%^;,!T`q2LIJab!Cq(ANJ#qCU4[7@JY92[P*\[[oel\gPWEh\mn1]-*QJb'+q/I3/3ZT8JKYuH#DFm*is)O_RW107M\(V#=?8Vsu"
%02e*#%rpEMI7uZ#"I6oXO,_Cg=e*W)jI>*mk%S9>foosB*>Bds$uC4&9F=CPS;-&I8XFlQ%9#/'b"X7O)Rr7u$F6S(KVh]6_*SBo
%X3e(H+/#!)^u>^)aU7"`"%*<hLGtnG5'EG0TI%tkZCJ.dXhetAMG\u=n1\'gE_L,%@S)(Meq%.`JJAX56!.V\-h-)^P$ClDSj8Bi
%@O'M1?7]"`R]HpMA&Jh/cH!i[kioni!8!!XGQ-=$RD-j?1jD@dEIOXS^^Q-YI\U+mS6REcn;nj]RsKsN!2A%9ngJP9.73dpK4S*R
%R33OX472s:^V]J)L9X)EWmX$sS@qrh6Db1]ZqbV\)KkUB$G\[[!ZE!g?+PIknmE"BaR@+UJ4tL,E;nEqJJ93NSP(tDCU>?K35n:b
%U%o(:4&53`c*4/0.eF2@11tna54/a2c4GSci4GFXFR^RQhl5rd6G&S7>[($\V[*2EP'iad%2e:\!`,'9HKnskV(F#L-V:Sh<VBlK
%<26Wq6rk[iXRcufm(!#ae*um$T(!#W=C-)IgA[nTg'Lhj^_3"NR/(P>WZhlYO/cXsKOk@eNgU+foN1g(D&13AbudonS2q_3#R49R
%mH@nAe7\R'Rp'cH']"n;Ml;K!e][L:e72^O"O,hn.#FifrY;<i@n\l=8^81(G-hA\TBq(>8C5;jA74-,DWnd,m?HpnA`.P&OdBh$
%,kWCti1?D;i97inoCBAN/4VA,J5[RV6,=KBK3N*A!ulSK1?Oc]aLm7%frLf/dm6dua-%[$m(sn%0R+Qee6pOXL69Z+#!Q["[n%^8
%2&KIQBjXiFV4egK1(HSQJ,l!P/8d?IM_T#>e+I#\4k(F87hTUBf*l^/gcLK7p[/="L<0>X,8@_*EYd']14;\]&q%CK*3sHJF9&[t
%M&HrEM[!/#-2M:%D@L[1$<ta)QRM_cOU.1`(h-dfLV6#h5j!\^d]9+/220:jL'ZegWgUi>=HbE>!4Xod-;rn#G$S_>mCZT``#Y%-
%W<&36,Md/%F4CDH4'@9.+duYinS/]5Mb3#(\I6$DBCguknG76ji$NMS@,coaBbR9;Ju=H^3'imf62&_3kCk%s2D:%%)KT(i.Q0YF
%9oG2@QUu3NamdJra;.'(De<Q`lLh5fT:"*ejL!a@L%;];joMGUlb%lSIGlr$l=5ModCn-\R5[PrL8lK<$#Y5&-jj*N",(q2+h6/D
%8.bH/I,l8Tfm<lT!"Od\Y5"fTY6\hD?k@_\)TMmY!p6EfU)8S^,B,?W3&Y?1"?dluN0A7pcI!-CGr(>3)G!;K=p8:cVnnWu^ar(5
%N[_,*_?[S%PpRDQIjWr3,p/mq;/@duApg_nP3.nlP_!@2]!dAB3!0h`!MLuQGg/ebAO6#UIR_@E]:Z\`i=q(n2Zl&5O+47uW%s0l
%TebGo?=#q@BO`;/\cla+&K+0hHbgc.NcWdbT;ZJW[V=;GA\eO3IJ?\E,pj$\Y(0trO,$XtP6o_0ifdmukqh5\Th,R_(_H:mYf7he
%TF&S>1SBQJ/`R`7!L;a<jbqiYK\@^&ZiKt_n\i'A()0d!]g@eqQ6[#W,_OjbT@d\_)n^co'o-G@"q8e9B-j-o0s])iENi"AM/;TU
%Z6R$c;$oQcSlA.QoP#-Y2BOgA;ApJ7%Ot&oG+f#_-V5[7BgMlQ=>4p^W.R,L,VKZ2iudC2-q:%m6tiBb`Z[hqS"pJoWNAn-%t+V;
%;aNHh8=DEY\LrW=TkAt!749$"_"p1+$Q4qk)r$`!gLkAgPU1@`Bp:-2ii1o&RP:O/aa_gIZ)eOj1bh#QcYY8;*W@Lh$>BJOBH&\_
%b3Z+[Z\h):,`00K)SS0c0q7*CC/0o,,W5,@SK#;X&2-Wo13r;lJ0u<WVD2ZNYkfPVO+W6SPoK,GmenG7:!uD<Xg//H)sC#=!j('d
%;`197EuQ\!E>r&@I1s]NUmVn;@r@V!DNIU#elgO`iqQ'EML+J%+B\5Lko3(b147PoJmb9M'ijAY4IU1@bAraLOQjJ5@e$+/.Q>3<
%"&RMp7uL6&Z8(n)!\M9rYf$1p]HDGQG2n*66Ui'iUsh0Y3XlacO'Zp./0G'dF>oio#_fdCB8(#LheHdM0t)oaGTP6kQf0^(-IBQg
%B,i4+?l1Hu]Ja>qX\ZYNj0iQO#(/>KmXD3'#jjZIn2cnSI.NK%"q[mr27m)`_kNlCoYdL-&NYjsCkl+,oe<M2W#IRW[:o]%osu[K
%!5Tr,hqBLX&_mW-N=<m+ViB)p+78@!NIHJ;JqQ#fLHo04.Nn@D9=-(t.[2*:+oiI]&Tj0:4m0"c)sq-\;UA@S]BS5^)E`ps"/JmE
%1a'[*U7+^;fEAcDFCd-7/-s7&inRp-TmIa7@A-A\(O.7n+0`QO=/&2&DQpc&oJ(aI/@`ON#bGCh$PE'G71%kYqLN-5":=I%5XUZ;
%5X8.2m?m>S2h<=-J6(5m,K:qDP0^qj.^:]FB(qK_K%Pb;,(uL%8ITN+PSoR?TjHC*QHVdDAO5bgZQdA'R#Ms-\0uobJi.Wkf1NK4
%i'dpRAt"[3el`ak!?[D."rdpo91(geqSAth:&o,K=ka!T;?T2XeEY']4+Ns(!\-?c&Yjpn0[)R9ft;p]al#SQA>g-Pc`%l^U]D;1
%P[+6rh+NScLgaq`:D=Q#qTJe1=S&iZ.qDBRUoVH1/&(hZoc/K\mV)f8i;'qFM[DP#oEP8)AmHha18nG(!'VB[iAWeO'Ar=`KHJ$-
%%J#+fiq1Ze^HO";.<jLG&7gi#[dYu/.UBk-18FjU(0&@-U*;iQV!=r.(Y5<iOr]G4rE1X1C+q;>]Ho(Y-9[^ui=n#H:pOYS6Y'a<
%_@n/8a>*+O&^uPWJF3&*)\uXU=0r<'(b$B(L#?el'OZ43S=l[GTS";EVp1Y4jMY_V*l=c/lW"@N5Y5Vnp0-!hDSW2.Ml0?J.&ZBg
%:kMJJ=$\PbWJ&-8b-[6k9a_Vjh!5&o5T2L)nC3M[AMn-3c40gmi@pYZ+pnP(PXYb_F93N-<p%2T5fu#9ro=ef#LQFL9ONCfF;$4@
%bM4Dg?tZ!u-b*.BqU4)c9/.h_E!:f\9J^7kHCZUSPm\t#SKak'%s*hkG5uT2Q71>pgF:S(O>MR+$:PLjdgQn@6O%9SL5FDuK]cbG
%!E]d<osm.#j_Dl%b-D4G>_67NeRFC=aM@g@"PYWlOfG=]/38$STd*'YQ%[%R0;H?p>+dUc0Pcu!8-Pt95*)^oQ;R`r4!.PF<;=u<
%G=+Vr074HbX*^Bpijf*Z6NN3YA6rZ!pQ8dL'@LD:\5!:Mj!8.JMb#^%-@Ns+ad@Y?&$X5.6ROir[1$P64Yq-4=;c,fH9r<;mb2'<
%"$rj-KS'G"EE5Q%cU7j'$V[R0oe6HZ'/GEP`f-dXIb?)^2"<uIL/+:/I3Ib+'dXic-!c^/;cA4\#/1,['ZPNLfu*t@KZ%D4?3@Oi
%Odh!EMlm%V@/&L$+G8QCr!Ft<:q-`MV3`n/V$eBg2:3>Vb#0ZHU+X&'M<N;#=Z\'k,6u_h(nUdUKH\I/i1B772cMgLN.D:NgBLE7
%+9?<ZV^(!_hMY$HbAM:VMJ-uN*>>=4n/s5c<J4q.7%]to%,u5qA'Eq@HSA")`Goq$P2Lt_4*4>Kfp0b-l5#Dj'\:,YeGWqKa%WKN
%&Ma\-C)K=''X>Zj:;cEMaupW)n!"Q+1!`'u=NeC$-n-c+Dh8sL:hcB<\]5NKI(`-s2KiQ6=pnV7**N%c0qYTthB'QVN$a_cWs3*r
%"_!-RAsQ+!hT*]Lg]K<@n2\\bm[Ds^',@gir-O^A.AIIiR:lU9:2A$"/Y.&+`23$s=99m+FdXsKVJQ\oMUr!L"08CeNlK(lF%4=4
%e-MAK&1mb1M06luX]l]4_=h$l:VGhLb#Sg`2TG;-6h$iebQTPd2gO]E`o\lb1fGYQ#3`LNmkZIDPSu9Y\60J4n52d6UJ-]dOqU$p
%.u#pdQIb@QH-58uQCC`::=':-0(93M"ah%R*8@S5@&m@[!SQrr[KVZ&Lmgqs]Y,Wt'&:BK3['HDRIpcr@!DZa&!kc0PkjT>\=:(&
%:F\8N]%m^6r6re4FV2^l@#7d3].f6!Y_]OU(5i&:Xp/mFHGpF[;?!lS<,fP"naFD@A+N<f:$N@.iAK1HC$=BccCtbO&<kmKr,o1H
%U`fA>o6Rf;!=<.C$2?-_KLqaAMKt8aBlJQ(O!k,V$'i!Q@Km?/DM$NDpeV\a'G)3k,lq,E\+gTgH+963j@\DMR_1B+H*'?Uo;*^4
%Zm[,PXs!Xpq]bYKq499K,dkhJHkOg_FW$+@_W\=0=3hSqE"ig2$7!Ji5QOVt"?L8u"cFeX!XeO>.A/B`8HB!u*7tTHGiN^8!JMX[
%9rjm?G$`[5g-WFrC%Mf$5'RkI4"[0\kUA<g2&(WDQ>Io^aAQN?'bmB(9"c1e%4]t)JU+dt(F=5a6qOGNJ2PhP[1e.D=DI5Vi$@g/
%C+#MXICZ9unuu6)iX,Nd$!'.h9S-s+ERs]Dla:thh6c/J^<(Q+iX)AS`cA33'7pl-D:K:d:gdP1T()M+MBntZWR-?'>4DaB3X`=V
%;*+fJP^Us-$+T+jl:kNdO2;3He*88f]td[AFV@S6-qYA2UMKum>hZ9J!4W'2'!7UA,5$Z,KQ--'4MPS9^<1G43Y0@:CAElWk:p"g
%Eh?,)KVnA!P]-[[Fm(r<F!A5,g,O;/kra;/5$$i4CLFEJcGS14P3G)2>RD!gkWHRNGStW@H:E9[SHf8VeY9iI7ChR@(c`a8<T?+4
%iDLR)fG+4rC-9\lW:A*JXW#M@39i,;I&c_\&[!%u1.8iE7&&>3^2r_f7J.\n#b-%eGJ$uO'7InO(riTE"Kqo]^([4NJ?D,q"]O:b
%=m-Xc_kF'boUYfU<Sn*cH+*!";+W`Cj\ppfXR651g=asrYBZ\:mXXctOBU0TYRtP"VX=HFJq+`=mK?6/hp`\<"e*")#;AqE<HmT_
%=*5l]IY2>r&2@1FTsA_\_PNJ;6tO/CPr/BS.\&T*D<@:T\1!_kR\9s3`$2%c&!%1^]?3KMhaL:Qi;bpS8^AKiYhkNEA$rPc+Lf"l
%Hdl%Q:.\h5UVu'qKgoYSM(me^Ycoqli4@Y#Z6BGRJ;$NhWiiZ?8YK],*d@Ra//lIJO3\WCbrp")>c$r2BuTV?Q*1a'LuPVpONWH(
%hJ!+/#d(M.*k(EXjN#YkH'lgSoj1rhG4X2O]ZK%*X!dT@]m_Gu8Q/f//rCl&X+q?Y#+!WKG(T:.YCs9Pij2pn]g//EZ3h6'A1:Yu
%LBnC2_5]>HUW+8X:M%J-?f="qBM/<5\1sp3"bd87I:):PncZMT2's6B;qOhs5ncZm>d)>P7Uc%sUn,>`%onG:G$UFbiKecgkDLc(
%8S`-/!J2BmqK.p8,"[^M9eA;]6(.S;'s3$?9>U\m3JEe+ed@9nOhg&%YHfh_R2pu6_G+\VS?4-#)G+SOC[FYkh6KW\pc,eXHC_rs
%fdEl)hMdp!7J,t46'bC$8HmhH2P3':#bWgm$<.JR#,iA$B?FLT940Vg8E<sop\!dJ(_sCt1pG/FNi5JN6>2ZJTEOG'6rVZ4>/u5Y
%P.tX-@[BY0e>uNSaM7faN22<W"QI<I*;NJGol7O>$Z3SKKnA\=!%D>S`3]Y%^Cj1a:<O2EbjD!Z@G9,o@q:FFestK.\'0`6UQ<<V
%W.N]U5W4NV5peS:7`5QX,$<$b5JjUC\e\.Q=G=UAJennIkt)H/(?Hpd;C53QI>fob$o0fG4aBOjj$kJq\FfBfd3u#Ja+X]='"oXe
%A/+]j,u$FO!pKgb7ScmU:tWSN&053m@Zq'_;5ee]12Z5LXIcRfnLfFT65RmEgl(%r.nV!YY%M3$14]DSiCd`+,XVhI1+XXQS]7lI
%,6a@O]*.OP_t7Aj+9LIe#f[m:&5=^/)9B-d&`,pPUs=->.`8]NTKQ,'eJ=@ehOH#<P%G91imd"HVD+es/;PNFo3`AZd5VTVA/\<n
%Ol+B2^Mo:9'a$&UbeOrYNg\pke3q(P2D<SmBd?Yj1TGFl*@Z#Ggk$)16.HP!CE[)EQV=AbLN$ZR,iraMC)2L(!YLYuE@\?s,t0];
%ljTX\p^<Grlo[S=f<G'ago@YtN'P<U"[Tq(5p.id:g*,?$gt-Kq&"ZrQj=V2%K6Yt)B,_TV\-$&\O<Q24,1=Kkm\Yd(J0hn_<cub
%D=KT7roc^+=qMk6b=1TslEd).q-+r>Oph/9B`:M40ScS1VAd"Vg%Hg]!ojW<0/0OqCB0*7[kR^N6\+TXjU13hE1Tu]8$9H21T(ah
%^>(B;n4<>F0MVWX(K4n;om`JKE`LILEp+T-<(',Dd0s.Kkg)hP4jsq[eFd=$NT.o!?Uc&O0T+)`i(,So&%\2DlR9'X$s^a8/S:3p
%[4AgYd42Op)dfUqo*GQ[0l)X=oV@.&i`DOo0@hlG>!suP)ca0/(TZ0E'q0q3PdYr^CKr;Cr1mX(1sR^-@nbm_gZ)2\T$bjimZaDM
%9C6eT0!\NZBj"#TDd^%U40ed,=dDq_;'NmDQ&$Y2os,-&1YNBIB(:1:0]8HTe_EgkUPs)-EO/Pjr5)=/A9H@-S/!+b73.P=RUr7Y
%o39d$!g;a$&qucS!,ph8c")NS#.C1(j06+sncBa4@&klMXJ\@Ni?EBmY:mu_@F"2e61@l,9Z[OnL3A['>!td.gamSPYI8Wh/bJkM
%`N%EP5^#+kdEB5Nj(g'm_UY]eCXjhs>V*gNRn_pZ^KFp[SreIY=ZmDh#1e_;A<=+O']kf\PUm9]+@-:8R6VDU=+`cG&8lZ_ZEQZM
%*F1h8P,^UGVTDu")-#UlG(nbVKl#(*%`mX)Pum=S/RQm:Jf<f-X?kNs`1gC:?<r1geVp>c<3*s;hqHes]BhFG*ab%]Xqn[6V8"Td
%B=q\]Po9"go@-oq<M!5HXj,[-G))PI?sW1d-*C]Go!iqnJj#CK.[Yo]_0W!OGuV0F)R+++$bET\+`;D^'5d^riJM`@-f&]0.b!\V
%6QdKj(NfFc`r0H'Og4/mcbAb:T0+JN[hl1YolQ:QJ1#XoCXA66"d&'C[TB8s?o,C2k+)9nZu,[X%Z=8Da/9@D/G8%bW!YSPfs\#3
%AJ<CtK<d^ac0,O,pqj#Tj'u4Zq,+HBU6*LT";QrC].r+mWK.^s;9Rl@SZ(aq_JD\6Lsh\\m+"2Rqbhc7XI"*hA^Oehk3lr^%V,F+
%PGd;$FnNUAF4Mn#PRjcuIBTFmP5DhX^/5&%X@fc1@,'fi(2)'j1,#@kdR/hp-*omC5ZsFkl'!K+45NE=@=XBT#qgRUq*4VRZUpuE
%4a<44Bprqj0j^02=P8F6NZAc*5gO$%'?)&p,jJ7+i_M,3re?/#$)7cIrrt("<CK039!g'Fg0>AYBNOl5:74n`"Id%Ek9e6=3'b@C
%M6>b_hdmh^6+9s/@C!FW;UAFEgriE@'lDJDi]t=ckWr6#odYQRjng1jGUB7(6duA%q/"&=l$H[TF3#cji<GJgEY_9D/q#K-.P"6U
%-7Ro[p1YW46@gtco.q+:M3ena+5iHY9pK+D0eAMd-n3T<C*FF7:,n*HA>jN#1m/)W<X:1rKd2sOLeN<4FfAIPlEuB`53ep5."A=K
%?n4M)a-&/M4'$k@:@T?W:#Rl*6[D5>2T"0)=Yq\ZZ[JO*KLR4m?W#[FD7;3nfr8d.Y`284X^aC?B$*S+ni3MXa'"j_Xp0oRjK(B:
%.KhS2G(7pfm.bMi8CW#u'qFB<D,.M'#WhUP(-:7ZHOgpthO)<[!o'k^P`8iW$$$CL_L-?B'i?@Le_]5)SgoXcL4t)sBVMN8>h"B.
%AsH5(C1k#?A_4Ihk$1SSb#,.<OtG#(1K3C8FLpA@`"&mIgFVY4I/s%!c^l#lTaMHWa"SV2AQr9LJh^GFEj[rAVPEN'?))W?K!MO0
%HWRVMDftB&oI'D,/fj2f5$:s!@&[CP/bh@ELs6NX`mA?i9D<ShVa37m*a3d]#4G.HI@i(Bik&AKA=FG[XC<_fW)NJRJQR\g[H?5.
%2@eTU8g$ERgUma8kZK*[1FsX-c1VduWYF>>0/qb(VbLLVr2:lHQH1F`^1r]7`_&Ye5P=g"]JqF]Zp4ImTh/)hPRR3nZ_gN!iS0qS
%.hmeRWV&:.OO/_7M>V^qgY"5IMc833U%6!aKdX2[&0#p$k@eM6fB4Sm*6fL?X':91Dqq.hJfdC`mqOtBm[2sFH#.Np2`7d-@0oXo
%>gjin2$L9]Z:p^%b0'_*VLe*N[jhCc1bDDU9:@GIboQ$qm%ULK5uu)cUk>+AFoTf8o4Vlg#RZG.AieiqC%F,lO$hI&"f=%l/KS8f
%OnP!9G5*L\K1_@Y9l2i/M5_at0g\f+>Zth+9o0XSHJ=8a9teF-!f>8ffr[DW4&)/i(&=)k5nt'0kr,>KUq/c,RK>[qqaj_i_WaZk
%=iQZ&2E'!*DfH?t\p1?=5hmp#]5#PCHp]_riW=^-1XMPiAIsK?A#4Q%o<5oWXP",14acNTr&@+5O$<7giAu_23`VsW6WCuo(iEHG
%01kqhCf;_GkD6,?S5tn1gkbDK$IPR[<f!e$XiD[)ND"Q6JP.,njsZ^m#cf5>((L1H&/ht^@%)Fl56-\fW`QaCraTVf#n*1?:=*_:
%##<e\"(eVD+$Gq3#\6aokc:S]Kk?1W7q7lcHHfiU\,e+g"EPpm,cZAaV]u5bNh"3J4e5urMC.41I,rf@@P2Q)@,lgL)7:o7FpMSm
%$W+M3E\RE#X@g,1b0*^Dbf+m#V5s`H=r9Y)OXi&QKXDDU=eLs20<&m$FSN]_f\(S@OuC>rM1I)Af,^,%eFTH7+f;b'$fGc6lG<qI
%VY6B3>E3ULlG3BTr<:ErAqCT$=69SlLVok=EQ?`_C17[k@o3P?f%KS>OtoVb:.Be]:l-p:W@m\ob6ghh<10s%aj)0A*4S\Gp-F.S
%iE92cF#c'9[3p4h8/dm3+a8s'fW?K=eAE.@iutBh&rsg\R^T+S?VJQr%5YLgV6Y$j_l'FOl.Y%>:t!nm2(_8.0nG/!j-H:=G.7[L
%)F]"@!bIRd\$reoKhXIL(u^YCXU+7@*Ra7nhFF.*0&na'3o[pK`f@5J;p14aP,ut:+CL3C\S>;qZ8KkY%N15!#P&E(n6&oL9q)/R
%d[YFVgJr$,@RJn^FD,t\R8<>9WmQHQAqZ-9E+'g'D\?s(#uG]CMHr@elHAE(BFRK_7X79+n$ETFc=Rr@2G_EB^LQT*_jY(d2l=N'
%ra4nG61&F^oW-GfLU<;i\<.:jd;57ncC&EV5omE'J>YA$ZBZfSWNB`/R)(8s&'0^J\[I@cB8b%dZpbD)f'B0#V/7N+3BVfrUo;H!
%1gd]1`b:YS/L6kL&lD<.Y1RH![:+s/dsSlWf_eeUpJ#NdjZ2jNg&PY"/KMQ0B>X#@#F;3SVb-5=NOau(W&F/@&M\^*)I'prPY;Pl
%'+f2,1[hI^_WUc]73;58U5M&s[PeqSQ`b92@PPWSa:Rn<f\Yk3R>;!?$d[<JlGNnUI'A40.oPNfOB@e4hCHXRf]U0qWHJr3juE&,
%_QHiiOIFta9(c'fh/^Jt('M#6kB-JC$2eNGX)%-1n=C6a$"9r-;tH`D0H^:F2Mn/GQE%ba)Duc`L;dbng/f$oS6."R*Q4c`1i3Gh
%*tBJDfV(2?ioY@&LF5R\"c93P=qu%S.fei=HNir0GR:(?E)HZse8hCJd2ch!nZH"D5nXoPN<#]GokfnZCsYupQl1.&l(Q33D3QlD
%*+h!=8SU'rK&3$ZC"a1/_7#f2ghC!PL^ot=/#m$Y1++8nPl2cr8t#BhCG3!>-EHa_Q+WGhgubREEEh5B%Y5J=Z=Qo(.p/NJioV_p
%rFp>ZRR4+U<m$BRA8O+o`YBV8oii)Z[BDI53fO58(Pd7O/@QhPOqhIEU]\?'KhN-&#ePXr\PU>&d_IVP(1U[2Kl2),=Nu,+QUT-u
%U-C3?N#CrV2e0PFI*iKMS+q<J*f)Ahe,Dbb$d6egci,!bfJkHg-:C6Z6UnaQ]ljYn6'&h2jr'+_-)Ms9*#(:)&=\7pY:B#JX#;me
%bLBq9&f3#jKdgV[0Z$^Ee\e_K6TYZ8PXK,!WBch^&M&ob_M#pVb[WIh45k[]g6YZ,#$>i-N5c80n5@1Za/i*2IOTAhjX'^h/[lt<
%.qs8mQF`F$H^5S\f5Eah1a>g8!P@ha1Xi,*F:.AP#bat]?>c>rmK#^X,3^I'"pdWE_@/j^;kiIH@@(olO9GaJ+CUjO*Q=[2&4LOt
%P;::/$83>KBRY3Lag>TT=='RpRbcX'/e%HZl`8,aC+q7pB`q.0YS"/BLRK7D0NOPW)9E$1YFd.:VHektBYut+BN6lY.al*fJ4gu2
%As?Gm">&n*%.eX+08a,b@p"-]@WnH>\@8o6Hc)k<>-S+-L_A4N-<d\3*7;Xa+A;pgAYKHp[TqhNj,@`ZAl$XSDg$1B7p)>1Wi$'o
%Jm!SdRB`)"03YG;Ff5!q6QQYTe:qPpLoLi.'nK>3&)I@IN76@1Yo'[q+:9&i'BMIrq[t_n3d2940:FJ_b;!bM86A2.XHDH'T=Y9&
%*90,hTdf8T0bL@t^.U]7B@Q6U,VVBWMe8@SN0"J_=I(9M$<ra9T2#r=?YN2kdPJq]+!)s=,Ug9##;b$OHl-1E.b6DC2Q.cDeft[6
%obg%H.^kg,=7!\V#O'*E+i3GIl-`KWD%24Zh?a*WYM0]XXc%`kq:<C*qSUQX>n+H_e2<B[]T(]B:![I!6_:M!K48/!CN%nuDE`."
%-<NZ(Pr`@mE%k@P2q;89N3=!lFLANb3LZH&IZq+FWD=SLlFJYb?Y0SN3.<Fn]?,8k7ShYnqS$,NI%EV;d_g.EcebMslI(9KnK'R,
%KY3AB9XDU@;iZqj3mI$i__,Lq7L_>`L1TMg>h<X&CXaa^E#2.;_df[**?:nu&ShA/Bb"Z,An""FdQOX&NZGhZJ-@u2D1GY'%AL2.
%H!CecX[t!,[UFsK[0i9=Yj\Wrdg]!iWWNA/_#.?R_PR=F9`ajT\D=\$B&GHq]hf@-&eNbJ3r0-KBki,uB$dl[g\/o(NIC"`+E,j]
%6;Rb8A\:J%q#bo,ob!AZNC=Eo`uNB98>9FpWiD@)#uOqe>,OFB")Ya8Vbe93-0a.-#KJ'c.h7t3`a:Qt)59kR.'M^_2Yj0"PCPQ+
%\@sNhR<[*;NM]gXg@=cB0.ZUe3\qB1&$'0GqF\%gZq,aTUD#ICfSdO_0;u0]/XtD@&Tf4K*:#KGT,$<Db4+CfPiVaqjl"%M;@UNX
%$']7`g??MX=J\;)bkpl^m(7"inIbUa4O(hT<Q`39WEinbMu$MF<2`@GjmTjDAGS_s6$6R`R_][2Ll<kl)"_6hBVrsc.Hu*BhSE&@
%:-0L%\e]:PE,WR?CkD$T_"fB=RhJg6*^p''_^YX###o+8F9p)8"OF<Dc>B&Y/l,lb'Pg/lA>`!7f]$YZ<rjPG&=]l3mN/-:AX:r>
%DHdAl:sBPR(aW+5'oqS=[afc[.T'TO<\>mc1hC;iR#9]cg+9g(f^b[@cco0GMG17em&md?N^[c8EqNO`<`T`Rf&i+_l_5o>.H?:[
%9X[uq+rB6LG0SHV6_)WC8,P3"BFLEp$fT`G&1`:b&6,q+l;mIIV$I\+Nkf!*h1O+8[\mtE(D[-I*]p7;@eQ&@?pk,+Vuj^9GciYQ
%4A1B5Q+hi>!Z!dh!O1)Xdun>mPdQA2j.i-@5heY,5/MkiQGPM<Z]piCA!4n2H'\59eM%0#e.IZNB;nIo_&_O"DOM^9Nh?QUR>cQI
%4.bGi/eU!U9&iU1JuI=s1+0k##!)7eeKXT7)$R"FjF](tJDn]#N_^$#e:/%>WfrI$&uN%APl=n$VSui%^+IR(R:P9R:o--D*D\RV
%fR#dX%(@g"'hNj?,q_Bu!]3q:B_L+G7X?oZ%_7<?hkcTlh(;u$TD-W:GQZGZLH1QP:dBfdU1Ub?=_*jeT]^WAaZUeidoks6<;k>1
%HHqOo4b97u_,atrG1_/HD?DB'ie5=W_LH6S6gVY8d_U&IH]uc[W`!BDH5"+G6*\WqR#R7V9FZ'/p?%C+nFc^/hSE4=MS5`]G@$/+
%6n&i5Ypcr/o@WU$!M%pXJMN<aeXJgQ_ReB1H>tBrbTmhP(N20XJScT?@rtI<3%!kuPN<o?irSqn8nA>]/sFB"dU\J1Qko,'?:Cin
%E?<ggHicA%X'beqlAts#.08MsfJ9?BW%Y@Ii#Qn'YnW!)$9u))PkOqB2qmS$72Tidr4A^XJ?+k4iX,6/V)au4[,!/g;J/^=g3LBL
%mZXC)KU-a/TojS%*tUUV*i$Q!EV;cT5rG`3@/n%qqpfrta+tfHQ=KU*n_Oe;PrfZI+rh>;V5_m*a/D@.K!*8u+rV0rmIAe!6b4%t
%7Hp>^8.uX\nP\QJ'=,ioEHDr!3+/]9I/_X,Gs;Mp&$sg@=<I$$"+Nta!,#.AV`^*N;0!FG%:WWGH7<GH[=$oTM.r8`!,rLL9ETVC
%$ODW?,YbTtc\'R"J,_p3%\<(e`s%o<!:,#SPL'uAKA:+1B=Mb>,9M_fL`82ZE'qf+/N7'jSHWEg-I=?-][h^79-UkS'PEbfOHJM&
%0TW/V"H&B%gPErT=,:i-'aP4G9"#![km^:l;"'KL@q$a&WRT\pW@"dsGm!:NfdC!T!7`R#HU]-S:[P;a4<NJSOFJ6d1.fpP@qOV.
%O%aI>p=nD.<=*D-QceZe5"='uQSj-sghW,T5U#tTT`D:*Rp)MOgrV?7NLk"Z5K+bAWk-"TKD$UQYe"YEge"=tFH_qb:9oD%<<a`1
%_6ur",a9oAMn0*-Cu/RiF";"5hQ9%miXK]VC134:^dG>L&/I>*Y.3fin5Qgs]7iLrL_Pd4&_5836<pKM4#3d0:u3R^'`$oca]/nc
%!8ot3ILIiKSg_4_bZ"R#eN-]-Weg+"Q()TIA#caUO1><U(*KL"F&dh`gKZV;n9(mYj2#!Rh)SQELMa&+l47Nb`=BAF)J\=k;`4:D
%E2GsfE]uN_7\r+F-Xtq<IT)B(QahRW*I"oi!a/X*SRcH1?IU"DV-e;PHLk>2:CfKFpbct\6f0b*[^1^E)Iu3[WR=O[ot4/36k?TX
%9r`MMB:Z_HXV+qV@>)Zo<GE9b<UI>k..8m6OW5S\R_SsBV%XSt=edM_(<\ueog_.fj??E_KbdH*ju=<5!IMN;oa:]di!@>#EDh8d
%Z]W&"OfF59NdHtjU[QELmpa%d42jiu8_RpoF,j?p%<E4V-ZK4kA=/V^Y'/T&Om(B.c$=RC![Y^Y9@_Wb3QPR8*j9_GWbA,g;]30&
%'p6OL/DM(1l(@QHSQ,JsKp@9_W8PJ?q*`GLSj#ot6Kf<-kJ[!J`Pkeb<Gs&g@j%`Pf1Q/n:]^m'^\1+eKDFAtLajSq&dA$VRP7GN
%(=$:aJ>>WPX?>),hcSAp3F\s^bK]bWOaE<+TX@:S$B)dP=iQgTYI!F%c#jfL-HMqF*)/cQ@'N),KAM;-$tO6]1j:J_]EPgXHfJsq
%eS'*m-;.n="5<U=r$0WU&W:t'@MaEIPl\uV$t@tIp)W4i(`NiU%/M35S@RJ2i4ZYTBk;9U[OJiCMjtO$Z2_AQ]Q>sp"B2I54Xh(O
%b#51s7)d=jii)9uZ-Y@mCu,_['!d`k*pWlf@OD?IBrrF>Uu2W-Is9ku)+o*NbT6YZn2Ln:<_Z@PRYMrT+ph")BbEO`7ZV[FAEI$-
%!/_TU(XZth[#c8oq5ocl.DS(c%4]jr'tF'%ZrPYf^kpdOE)Y9%9*PCK!T['J\Un3OoDo-*OUVXTM)tAj#,"oX\gUcHF$5`)EFbU@
%m_T$5b664eGPN@""UaJNZtD^S_@[*<O_JJM6j>[:[+@=*KX);/+#=6?+;Q&X:I(a=&*h'V`heo`q_?=WisnZI$60ka*EA@ZAk9t`
%_aUbKS^"+*BaU$r)MI9IIEl9W+VP@,rZYm6I_]md\FZKP.*O*0qn1liCu$AN-jNk@ZI./86`.&23ZYcA#=i9+$?SHChN'S,8e\+2
%?-4^KXbT7M\1Rb[23UpYR1To0Hk21<"Y,sGIlNB`W>F7cY"k3;lHG&B7BjjHOMV_F2dPJGh`gZuHb`b"6PK>9+&_;KNa(/GU-ZjT
%:D0O`X>utS1eEqk`3Pob)N#tMdje@)!=/cbi`!NnK-Wi>7M=CO_(j)t,p,rg?3u&0P(;F%&i\6[#1po@.u@.<67$'AL(U)3`?Bi&
%eLP1G@$%!u2k*o[Rb7h-!2-bC@N!/qU$k__;IEk.dBBOSi(TtA^]3L2V`*'Z&;8E4-EGr*X38`eFZ?CZQ<hIP09km<Xh*,N+>Y-(
%$Gl(6Jtar>.>$91FNqd^LV]=K,%lH*<lS^,eUV3PYl,,%O'K_?bSE-O":8%!RckYUV!E;+B"9A("gQg%*Wii5joGJ3a:NrX!O4=^
%3JZaM6ZEPjS4UfL`OUAnfnG^/fmFA/jk$E"4DErBJ6aLO9SjRYmaIE)51MD7)>s:41W#<N2C$JZ1GU+KW\WoSil!=C"P;H!Gr<*D
%gL_]]Y>Pf3Kn.4dSJ1!.`-S$e-RP-N%0UCI1D1JElAK>,84eT@"a+aS%(jV@IU$CU@Ea_X^nNVF0qR$&1bVnKK]34R-WTO`7=['2
%;0;T.(r2e=<^!%k'r$L\2D-r37D/=B-4]]2qh)Pt'N/bc->>HTAO/>?jZ8IZ+7J]2'X\-o%dY;>;PC,m^tGV;A/s&NM=*!s;$[48
%[4^)1iI$#@!<CIXZ6OD"B!G$MddaI)P\CO9mU1%bLVtJpefQjtp]Tl<2L)?tCKIdE1,q_(\OZQ[b01[,L3*SJg-5PA_#EgCP/s%A
%Iu]8!Vc3/"75*a7WsC9NJj!RKB,XF$e#bMoeZ677qK,jm+2/FSIml1[AP+0uN#%fcK/VY3:p5"`[Y"bJ,DPqj_>TDa":kT_'?:Sd
%a>+eEH3-2^C:1pq!poj6LG'"@hqX`QeRqR4[a:j&*_OD:Cqp:,GXB63r%QHY(-UDaN)S6'*JN8qHrA6^g?$+WVOuWZ`ka##D#@)?
%--<22ms"o$)d3%LBi!bk7G8,Wm5N[7`F^0L430gN>`j=fR!Y+RAkX$Mn8/XsaaPa<n.J^Y+6CpA-JrgM&lLZ-dot;OlN#<4\qCYj
%?L`X&Jl=@XfrU=]Bg2ZFJ7rGUEi_E3S",8C;X\+1\/-<MJN^9P3paLY#X]=I*<VO"o5@=aiEJ!AM4VujdG0[$7drE=;j.KNjYPeA
%,g1ce)/HfFaW])M,K_ag2M-d_%[MD4:SpSJNQ6FE,_99GKTCAWeSP3P&2,`>6bg,lIr4TO7oa%PU38V<-;<,LX<:(8.UJ>2m3j8J
%,>+l5-,P`Ds18rK)[\)N$Cii16+F#<Fo'fQLl\aHY'[1\"!YiI@7c8ep-h,.NGAf[T'(1%*1_b75Y^CDO?ENF#=LX/B=^Q>1kr[;
%-Hr;@g:]HD_@bHEIq@c8Kmq+4hjR-;M62i4+5838Y6;F%m<'C/<@rCNC9Jl1/MkQok>J\>\YFGm_5dLiVVAq0ge]Js$^h%u/s9B?
%Ti7t.cHt*L29o#6ZZrB5.nB<R)N5dSA[s"&`e.`W"JNn-R[#_a0WHEYIipIU-(RQ7'(.!S&mPq+HkmC<iCLnA7=>7d6/2fraR;*a
%r5"m7S.iS$qBEWt_(L:$;n+[09lKRW5CjiK4ZR!2@=P#R%7*$Db=B`b%t^ASMq%*.;"9SAH0D@4dEpW#+ZO8tpD;gQFS*?[!T]q^
%Js)K=<U%folcTk+W&r7%[^7T?._\(WK,6e\*:nfNq#-l]qb&[anPZ>gEB#SWWXE":etr1=3_k4ci5M11.?iOm>t[W.heB&gcVb@k
%#S,03DO_!!6ugiDSe<3e>qZ\o!/$oZWRL7r6uHI/d]*6_Q@mPXL1h4p\R>+pkQA^T$n+EtBLDP+FWQ+<a6A`h[hPThnQpeWQ_dM'
%Xdq/?_po"0bFQ$n=s;=)\T3RF!&%q6)YF[]!f]#V:A5spEKEX@XAteW:6bb`K=R3ePbEPhK'8tT<l$\f[K8B1R=D^Xo7o3j(uPL3
%4nEH94hOXb/.m(G:K_GNLbj]3P/oV:24WmX(6K.OL5gnWW(2B]3lr`\O34GO)k4Ehh6VsFM1"PTNJ2OMgfFV3IB'cTDZV?)>B*I"
%'d_,?V?i,i7[6d[DS(Yl+J`^AOIK)Kce+&h_XQW"?2-6L"<$\M19D,!KXBd,l+s(X/8B8.m.`8t7nr`le+oYp"o5+Vk4]L_LeuLU
%`"PII8^`Fp,BsE/?W-&Oh<tLr-7R!?e2dSW+B-'p-4s:-`df69,qs&'_<]pVIdAA-k"P`sHLP<5Tc(mBHAKft:Nldc@*Kg!'0\r0
%%3RuF?=u"BR3c$S"plM>^DVYc(+8UbRYida$(8%9861@?#NuD;BS[':/9AeN`'_h#)4K%'_jn'_-'ZhNjP6,U.XBbe1k]n,S?alX
%a_8@?.OW32\O"'iXig9U6NKpDHZD&9;**L*LCpA7I?O%\/c+.4ND#!6(G:(Z-:$iFba3GXU-01h_F@Z>2Tq?XD?ur?>dVFAR1L4Z
%4+JL]mVir;"fHk,K5_A]LN$t$F;Ip\0<0Y6r8"D76%9H]-",V=\faWE7Nij5+FI7lE',MT+O2fU9t,XphZZ,1h2u%'Lm!(pO.!go
%a]Sm\O>R8j/`FNh_oj<!hlki^j;^+,*=<t*fHg+Cb92tJ*Kt^-QqC99'a)GC923R*Sk4AkUFnPG0QZ1+2D;ZY2?CO[kfKY<LGc&^
%hK#`kYkP0$nn-AoP4%C1a1dCn_d/+L<#@N3e&fZlCc:XK0qGjs.;YJA4a:d($WH[T:rj"LNHO3b5\i/4U*E!j]htj@DHJQb+d0^P
%h!!jUrR8A\UFF<3%%p=$UAl6!#olTrQPjY!Icnkm:CIb%.:=SP61R.#r'CTr*(b*NU]\]AFZIWr]#!tL1s%jJJ-:3a9G<8?U%42!
%#-@AXQqSRW-TD9M9BQ)J,q=e%RA*qQ`,8u$bgM3+<G9`_'st97<m=X1X5SZWNf\NaqO*W&SObMuaO*kDgQ?+tc9kni.-D5&j7IVs
%*e&]gSbd:S[0M);r>l?\a7`nWXAq4bk61YH4LbG\UcCUE,)G0^&ON0^p#-JX(.ZK7!g3rRqUD3sl:L1Q[P@QtoG]Y^";.FDE/,]4
%q3]4$6VW.4/gI"u8[q+$5&;dG>biBjMNnp,S:@P:G1E1&HF0KH!LIWY:?ut^0<?%6NFTmj*,>5<IepMr$31MAiFk?`1hb!E_Ur6=
%Sp6+1@c/$4.^1C\auEu&j-rUHi&!a:\E).U@S3/?YC`'$77ZjOW"B)q<E6t/5kR;Oih4\Kqta2'j>\iH.&]$,U#>U=G<c&o]@%k)
%;La8)3@+Phb[,(c@e!n?XDDY'YeI6Jl@XkT*!0/FPm\SoG1/GE%pcmf.5b95e#_)"@JJfeZc]8W&J5#SeQ71o(d_nEWiui2%&g>W
%r)$ts_+4N@<`tue^2#/C`YOju9-HkV;D)0*,RM?5`G4-!0%!Tj2'@Vu6L^1"3tt6]L]e.7@'cN$FGiKJEG#0t@KiZYY+ii\P,+Y[
%^=S65A)YQn/I>:PGPo77Yn:_B,T:<>,+-6K-'<#*;E"jCO+i>_C(_+.d>6R78g;Ei@cU^Cb\+,bFeC2:KP9\M<h`kBf>#E)09pUI
%p6X;t\l\Xt;E:WsDI&cd6-#`U:>1GCV_:T[:Z`BrJAhX4K[dk&aM#8[LLhH+Gj3@Mc/kBhadHUa^fD#N"ZrAO=;H%Si\QBGe9O#7
%C1G?i:o!u\JhSj=auT'Zb\bg&8#`#bFSM4[36J7[mb"ORhP99We6$8i%;HUW/#+jGclam?or+A_YFuG#^hK=7!AqWml.XXlr%(c3
%eD5!M:9`AG4hg]g77I#S[aI1gO^;tS&#8:b[<>;HItZCu@6cHJ[<U!-h.6f7ppF,1ac`<3Q#/e#F(H<;A>sBTq8qV`P)SY=Z;$W1
%C9)0g=ZocniEK45L7^RXgTZT?AK*gP<43)7?"0(9k)bmkl<Kr2gLr4B<OT^WkK5\X1;p<#%H"D42Fi\KQh7!*%g9[[Ogn!9KE_*f
%N0fT%9bX?]];#*(R<.)_AdTNG_+HV:=.71`7$U[Debd4CFcRsGr9RQ@@]l7d7R],1ZMh!e"Q[MfdjnkE4N=3F6F0iSH5\2044>);
%`I;Kl[,<ao\]sc;3D=._fg*`c&a9TU&kUh=7D4PI7:QaP50,IJlJZtQbIjCcI(p4[O+J+sFf'aBYc^s_pu&fi^\MVY;^ZfUG,7cf
%RRIm86Zi[PG%HgPh`3A!-2#+9M=/M`+l#HD?)MIP_09J12E6?j]M^kCc<pp]FG<XW=Wh#sYX>'+-cRYu:hhbI=3bEOh*E6PEJ'&K
%)pBg2laf<2?7Bh;f$KLb-2Bu'CBr@iGj.hg=Kh?]Q.QQ4Q!4P]rJ($'fDm2f(tpK>duk1,[;25]#5637Uui]aQ,8!p'C;!5nX(ZU
%lY0N]bK:!A?/q4C=G+gB2nW40&1<j1F:-EPf3?n-A<E_(XHb@.19)d&6!kLX_)6;,^.rsAYcl:-j>[\5WEb4rVjSle[4FH!Y-uT9
%d9QT[[6n]68.de3hq&9DSl(9=7DD(ala4DV=7Kra2u1Mqn<!YX!j(ql'`iLKImUqGp9,=;Etp8LY`nluGEhjV_6)a#@:5)f.h(e2
%<8(LTGB3[Q)#qnU(F7YTpD"$Yo)7Kj^;#37:;3oFY`nNG^U*kR%sE!l(jDi1Lp3)@YE5upU#;58iPb?6/72aEYZg;];%_E86haa"
%>*3+1HbgPD3gdb?k%0eq;^CXcCo=RE;]M7#0mSO4'BT<E-<CM`CW$\J=^j67h+NkR\q8=;S;pDtEgRZl&k)^i#IYJDqV_#7>+;:d
%JDR6+FOd,?U.)+EVb04nBjaGqXD(]>o\*9T<#F5aEo@)lg8_h0:T.0e5d*h-bMEa#RDTpmO&:@?)Q0hA]f+?$'a.@"7*Se;CR\Y[
%1g>71Sr;aZQ`42??CPg[!I@34!3]?Kep1PO?>XE[kd@D<Xb5gJ9c70%p8\S=>BSsXQAAW:Yo&02T\$1;WR>JK5@53s:kR)&%^G7'
%s+Ff@b?']nNM9n#<g"OsdA&t1H&CVqkd@Q;\L1M#MY#P2H\h8cZ1YnXXm.Z!S6&*44MZ52d*7I>MBdPgH%hK)`d*jI5_`1T?<3Rt
%p0bpde\,cYY:t8T33UBD05Qthf(OjjL<.PpoL9mD6@)R*Ak6if7$-7^Y&m$WbMn\IU_/V\OPY6^K_2-K1ShLTEsjo^2YE11'%t\+
%n;?RGgJj7TNVt?4UTr\kp<0tL,!-_;<FeVSi[_=0EF2(V2!um8NlHME6ftGjNr-%5]^otP/_13`4XS\"jtU76gH6FZUMV%UG-oM(
%^lGjK2IK&049k.cS&^%"D=ajENja4\R@?]t*GtC!^lGjK'\LekNrhC\j8SB2SHINl[Z4bHl=+(N*Gs1SYbQ%UU_h^)Et>_iJK8Un
%aGD+CjG-r0JK;56X\7oR!=.l''bBuf+29Z:^cUAMFbqh36d.+;`paT!fOBJ]p"9/BhB'p$Z(*CE3:Fg)3+Hj=HM$U4@C;<l^:*@X
%7+%(9VraWHFWC;ECVsoIm"[tnj5Q99>un;UX%2#n[ER:DKM`3kr%qDG.9'dAF[=;_"tnK/`4E"0*ar%[;lsH$+>dT*fd[c[i44FJ
%U0&g@SA82:5'@q.rtUYmJ9jC(9t+=G%LP[pX21Hb8LGK;.#@3Sjt&D1Pee*GJAhd(b$^\OX_9[BbWB!;V.`'W#c$"%'&oRC:]'AP
%Q/SB\jS_#efVTK1#>U-FRYcXughF,ZEDV7]9MPZnEDXIHOZbmJ:ftNU$SVqDkl:lU=N&V3.'oC`oFhF?n@!<pKr^c!Q]7[qW";p[
%R%P'1_ES`GL6rhab1NFV?()lan/OXm5oG1%@!MoAJUp-SV%j+:Lr?G;`$PZqd$]O'o9&m"*uBl&`B_7"jOTD+VWi\G4S&^X"cBn&
%^XmJ-(9IrgT_K^"`\msa6+0[;T*QiOZ+18DV:-U&^gdWQb#mWZ.?#2EAQtc<-shh-:7<ml*LP4tLs;%gcE&n$_1[J,_=8Aj1.B9E
%)Tu5.'9/6Se03GuW'8F:r`;CYN#jb*EPk$Z1^[MbE#;H4\d!sc2%105Yg5tX*n(meLZ5Vu$pqN,j]]0_&1BoYnhIL]NtVW72h@*Z
%(apd5CuLsp[0[H[2b?dZ'S;@#1f7)$>!1+UgEOHt53ie9,7jqMe43^K1\D?#5,,_dacBr"+>\(N5GFm"D0u8W\(Vt&04$+9d^Kt3
%<0JG%)c$Ok,mt?1l(tb.)PkA.Bc:LeQq9966,Mb%'Y\eegkE'WZ!dZ`]k'Ka_"ctXGUl,&4U[F0)+PGfbVR'B$!7rgTV;J1Fo'g!
%,mt?F]44:?.<Kb?6InOqX=+Khc\1p/?8b_*_=#[=,suu3Xl$6i+-m`cdY(/p\I"Q7#tT7k3K)7GLP!79`Zo80bDl-kS3H,PrKYeU
%]cnV9l&i\aArrl[!b!-M8GDaI0F5c,eF^g:5`l[94V@ilrZE4+.KC<g_!),kLEb!,>k91gOpW<:jcTm<3(tkfdb<@E,@QlcV#+k>
%/*6c!RSmfSS\(m)o0(N4G$PF&o5aTT_B[29MV;p'Tk:gm1>=Z5'?slIg;5'A;lEp\W\O=\]PoiGlSb>5$]c]1:hV4Zk5GZka3/RA
%*92Oq^sR=,7p>UV=]^O!88<Pe"$p:1T%_^?fu\5[),"'uPmm&!s2+>@VkHFcYu@Vj>C73iCe^q%q/B\T^"_`HJ98759O>I[-CUe0
%`DkRR7ul5o;lTsbI853;ouPn2Ggmn.rKL^@GcFgaC!5Ie?f##Mh!F1(blFY]07p1(Gl/1/'G#Z@28j:ALl+6@r&!H[i8i?gf$E[)
%/SfVKo1tVtJ3Z(pAuF@/F+&JoKiJT[>JhEVqV5tOWLBYsaW,.YQK!#I(5m%:+Le5.de.Cr)E?dFk9sSg;46^s*qq/,(6<C/ll_3$
%=#85+8Y1.%BLND(28!iLC%3<3G-asA;+Xp6(a1pkWZ;4:Z66I2ok1D-Om<U,"a;'`1ud@91Uj14QV>B_6]:F?\SU<==YjQf<5"AW
%'oC&7IUO.reh"MMK<H>Aq:520S\pN?40k^J_JY1e"O&dlH)mTCrUf9I,Bs1pgUYXZX:63-XDV'+Yn'g9dG;4IR$M&]]Q$rp^7aaq
%A&Tg0K0H?L`UBQGWemC'<nGK:noZP@X&pEC.rVi5famP7hU3dId%0+E'W\ljI/a&7A+ZTiq7L;27/2WR+)Q@j/sU[D4J6o,pV(PM
%JR79&(3pb<!+H,:'esI)NYSMm!T\l[jLIImF0.Go]*2"H($J'L:rH=2'Fsa_gctA3AXIJ7LIGV)^=Jc/c#/OBB]N#50j-Ukb:"[6
%lFAM`WAc5@"#$lHU#u?G5BP+ud`Qq;:@uO[]WNf:WOGBd+L-EsYB`BX2SkN%[5%lAcoX+4Lg16EQ-*//-H7\_B<'*;XHcl`$$e-7
%Xi)jX_Db@+_aAKHVcF=4Gd=VC:-Y"SRked1p%b_a2:?;\/ar)mB\t<hC,5=<BgDHOVAEmO"XDcajRP'dcJkbJ-TQK0&>/UpF8)83
%E@"93kl#n[lMlB</I=GE1Ug'b8Q8P0JWNCY(/PiF:^GNuH9U-AIPY5tD1FgpRCDXsAu8'\PrjC`L<BkJ'3=)W8$rS[VJ4@VJU\(l
%U<QU,G8<LScVlN>W5=ehi!+pO!\`mRk(C"15R_4&T^s#g5E$7UiR?&UZ%2l4%/2&1J?'s>=%-?$^fO"hMM`>d#V?`7F+-Sk\Oa8-
%6+NTFMU,\bB"Ys$qL-&Z\^O;tV5Y7Bp9\dE;a`5hR$gq++@T"7r&4l35!NldJE&!-RSa5$]9EM5Ju2/;J7TYK>6"N-;3dY/X46*]
%92jfJ8u@6V%qPbYII<T)caW]C-6PV:p`u7TLA(oIGIT-f?i,/c6aKT$):tCN9hpG=Wt((6nQ5`B)[X#\K)cdW85c$<Z&kc/l%sro
%1=q,1A7Qf[7,GmHU,fr=fLP39rBngSg+pWdYD)\4)MSG/Y[$1OE&*M?&QDN0K`kZ%6-BpE80G5m>X)[@JP?,C+r1eF?UD]"a?Yo/
%=9u0mUloAAbp2/uLOQ\*Gm(PhZm=4b'^m5#NMQ&K,gTuD81NjpfeAT+)d$sI>pRr7au_A:Uc]#o'nM?q)hb=;[@+X/Z\Sh",gR^A
%Lh>WnAeEDb6A,OtMa/KL']N,HAe@RP$5"T&.[#AjcK*8!P4G.Vg-jjb.X2;V8L.lu67a<7?&DNMH@lL9WWm=LfL$eCAo9)2&?1ZQ
%Jdip^%"\dG6A(*FP]p(8,1$M!BlG-QS,u\["qd4Vj:KucP-S[r$mI,KF-8;eLnl$i9ai5-cP7W1Lcm"0?\$39!dYqr-Ue=OGq<sM
%Yr/=@Ujnsn"AT#0m0p'>0P"S&`#8],A!0?jL-X<rfVP9!6lUtg7)fe*F*OW6[LhqE`P4c=8.#Abb0jEZ?st`f-lYM2JH;uXOW=RJ
%-Y,OV1C-Z86tQud8:=#FA-UGLbM;I/+Rin`8L&-R3/Wm=eepbOAi7O3U,a)dA-7BV[(q$G%A_k9hmJ#K<jIH<OAllF'b^jH5JC>-
%9d$ZZQl)FEm>qYmD5Ep0"R%gu*"iWMXg*eiJAA8ja"9&t5jD#K505,_p_-^O["+qbFG;@iO>S$a6Y$4KFMeqPKe4G?eh5GT!e_VJ
%e]7lf/!j$Ik9'8RiuSI8+Du^Gs0-,=Pso0]!'RN[[*%8'+oIj40!o.XBCgnEbiths6Z]DP0n4^4P6rf8;f4FRai+*S+4pad5G3<r
%`tXt,i"@h7m`ZcPp]6'!%fl.I2]Ft(F#Ba$'\`jJ(9*=2+)kLpJu$mB#t>\*N#s`lQmOCAIc.m#R59<M]TkN9IV?]?9DPO9#PML_
%I`O.!C`d&!@.NVX"a6IC$nWRocN@TBP&?%u%nPX#RCKs'T[%P<gHH,t:.aN,C`_Le=V/:>`Sjk64NaA:U],O;r/'b\m_FML%Zu>e
%F%?3#5WQosYcREd5@str+CYOJHT?ptRINo;g35i:/AgL?:gqM#"5PnnXsoZX9(L]F6)C#rOK5=He12R38jmV5@.C^g?BeW'l\,4@
%EA%F%TQJU^kJ%A2D\[b:AqKHEi1DH*)sc@d^bIPBdanb9?l?;hX+`?id%BGqRa$*;o:r7(bGRXsXQ-%QL/__U63fc08G="b\PF`Z
%_MUO:2##XOC7N#!\laYl,Y7h#"J>M$`!\U_]P2icLP@b4B-oIJBg+:_Ggjm+Z/JFI9SfWICE]punF/dA(C1RK=($:%4?>=3Bc]WT
%GgjllA9]=l>K!]Mo`l"q$J1)PfT;s^1;(Ft$:I'5][a_+VGd!rat_(!9;1=h9l49_$bd!^:I:T_lu&8uQAF3GAKaLDDCNm@cn`LN
%+P]ZYYJB37f,kEQl"4UJ9,$SuBQ(d]Z:H3]>OC1$oSYFMX;#077^fa)&Vn?&2E/Lgd[#cEM[XGOmgc_2e_9ODmaIo^eOXs\l<Ena
%9XO$QPsf<'F@#][PlQnD$HWgMQ%F$2#d9$S&4kDLRqSK1C6K!R[#hOA8&7Ushka.4#dXj>lKF0V;Uf$AMFn'&gaELXmT..h@]9.C
%E4k="lpp8'!$;lnXLQ=702tfOEt[^oeNb2G_8*:K_YA[jZ'*@b$6kVCQHMru:#j$n1#OXanS'be7r4p]R'7c4(/&M5^GDrS2I*7:
%)F%%p#glH'=5%R^Ad3ZhE/H[I.%"FRT^XY%VUur2AWX/AXr3N>N5L\/74!c`X;r%._nt;.oouhTK04[s9%0*T/1JV7_!>e2:0&FW
%RTk'.$(EOd6i_I"=sg0eMb!.^jM-i4*Pt-BkTC!`CfNJ?,AFF<Y$csiJtlS:RBna@RR>0^&ejZj_c;]TVD4-=>l+[hL5,P9HWcY@
%c@TY')oUU'p,&a-0[>I>4Yp+GpetI-Q7nD;5TOH79T9okJ$EqK+V5]?Ob.Hu/"Q*tp1;+Z_/;@B+olheK)JH-*594S!t)6m.3^Vt
%F+HEokZ&1?,_;joUUBb&?40KE&.h3jOkG&SKa_BVBsa&`7T/`Y<gKIW.]#h8MNe^;WW;^.:jFAG4r[4&P``hmfutTUY;kK@'Y4bV
%V.Vg!pf#IUOMr_V1tkn9]`]YV*Ml_)%RFTB7!asqUo+ob*c/I*$;<)#$lZ@$IcPd.fkXFIBeW&cR;2@Kg7/rj'V"b]G`#m)89cJ?
%"UcaB_c@UBo*g/[k)=QU>S@?M1/.3@g.AqgP8F;V?F6UOKr^q9X!Hd\#*gm\Ku?r>"U-ok>>dQrQ%[ls'g#u<jZKkP8Z>!r:hF/V
%M6[IT/Q5%I\:QHK.Kn&7EgEXM]VZB,)-!/'`W[qZa\dU)'b94q%>Ku8*7YeSq`(;Q@o+TE\:@jo\"37_-"Si";_XU8_GSXb;RfT`
%-+R-)#!R-]+A8APc%MNdXIFfJ'mX7:T,.Vb<q'!N/HPp:U1KFrO\g:k6,gnlUej-GeoYr5`uOdc5X(lpH0AfF`R*Y+hfoim?-MO6
%"2$!]V-?O&ZS2@fKomMCO9!%cEf`@^aaaTBhU:9*T6D9BZ?X?0>!iS'DG5kZ`]n\kONV+6]V=d\$6o^M$qgqs;Lh(RO=Dd!O0PA<
%XO(EEEH-,Tl7%NkU@hJq3MP'<JG1LScjt<4JcIGNE1$hf"C,6F"=l7G^g8T9\"<nUSM,E>5t4.7Ro'H<:qOPaCO!1N8=oL3/n+K(
%(Rn(e2(SIj&4M5n2!eq1$gk)X#c4=V<_$UUhipNNiH!'t03:S8C53Hj;J,2fe-c<2PP-JG"ItR<f#<+fY`qdX,me2H_U,tg6W*?i
%54t/T'[ZuL!I4AImN')ug?TUS9&jK=QhbQSeYWhMa'K=,!Q0Nie]ebR^Q$X+@)lGG,lf&LL*W#WW$;3ASV/[L&4FoIpg?<TMH^[*
%0)iF!/K^$b8rp,/m1*Ho)$LF^?Y)8.Yf`ppBms!@^Z%gBYmmoSreVYKQ\1;a:JI#C$N_<S,"`asVGoi0r(KY0SsAY.T?pj$T^XNK
%;JCABSJ:a.[b&6fp\,QqTF(-KosG',q<tO;^tYS0#&JNZ8cgXmLqF/'6fFTXJQ)(N9PPrQW*Jgeispk[O8Y5Frh5E8',Z&*Z5]p:
%_i)CWAbEg/agb_S<`gUQh<J8A@W[<$HE`7WirgBUd;0%,fjsduG-93AKZph>dKTV3BgtD(1+OlL-ReOTE1^9!&-WD5SIMq[j1U%>
%5m_Bk]LouoNNS5!c5VLTJM[nA=`VWc;W`?]JfP4'%pEAH^d:5F4<on2YX8C4<k3[2c)RLb`+[4"Rk\7N<`pj%R$W`m.mVukP]U@i
%keJ77MWfnOHqC=/i5F<#3t5Iq1En5dK4(nJ+>+fcMI\/.S-dU7,a^:gQ\&`8"4JDG6]e/a?_)cmVD8to)07h]<<qM_(0iX$lpfb3
%+OggfQGAGjY?$I\63kI^6(+EfQ^`*P*3p9'k^[r5jtPo"_1f\JTeTI^m"#0fTAW%'?J`Q/PoqFl3t&"HJ;dQ?rWf$jUm7V)\T%;?
%IO.<W<^Ns1!tmC<%P#c[KjkE`*Jt$9?>C-?@E2lr3sEWB3s'BsUI1Ht"V,\iX@Rp)8E)=flqW0hM"=BHZ&j;564`2qE!d7ISh'tB
%7l9PoW/:bJ2en9/Tm:.Bie@.hQZA53N_1I[S8rC1DrQ:Ui>uB5$OZ8*3N,2X@^uWp86U[-]#"Pk=(Mlf_TS/G(`LKRUX@<uncE=g
%WHcLKr%^TIRLE0dW=4%l:l$C\nP%92JX&sJ1/LSt7ah,X@3SPWp%T)*>VWRCra=_*;IY#5L%0dl!DPBV)D.j*dr[l^*^qO;=[>PA
%ZJ$H8"q3^U;'sN>='fH;M"UnOekf%ucr#l5=;8X6)Id="o3@+j3-E3MU7BqQF=WO:rr[HVW":U,KoptP+"(n]o^TgEp=p88Df1qA
%#gJ8f&i7Gq0/I,[8s*IH/L9k$+S@b;d]d8PAepFgaLqeA;o`1$QLo+*NPKT;boEf"PU\Um?G^H31Wh5Zp2Id4DQNJ"Rs^cIU)9=I
%<`.5=,N^a9O0:[7d.GH^#?tp_*BRfoTXho-ia.>VrS.;t7H#OggeqU9-&r)k+c&ta(karr`C+^hgR\(KafgUVUd"'1Pm:,hRho\#
%VGn.2Wo30X$T&G%9*GG79Yp?A-EJt9_P2*]^d$8_%Dro,Ul8UBL"3Ol'qMfXpL8AFA=.="Sq^pAs1UQ%VFkIW/BLRhT4W>qMO\#s
%>74*7LH+4<M6dVZ+Q*lQSd,'T^*BDc:;D@0L0/'@NOgkog=GIJ0.<K4FdS4dkY+kL8Oe+/9YI^+/=aYuQRWj(d"N!r0,<.Dp*khF
%MJ5pO6aBBXH`/Y((DV-:Q+^<5Xd#.[HrlQ6-8`r,A+N^c6?eW@-lWU!9k:]?^&$tR'Cg)SIFeTt'_r*rmkE)hM8KZQSjop_/gWFB
%,m9\@Y7f6hn,^]="`]u+5Y<tcUtS[d%W`[<]=RR\25MSU.fsi%544X[7i!S!S=(_2C%2`m3d+Bm(nU6F:`tisTpm:XMI.5u1!m5Z
%q.bkuJ2?.S%%>sN"XAc/o;-1>0n+p'/m'!p:ifb-fS,K!j/>sQ`(>^.LS!ml7euoaVd7_(d'+\E%5)`L__-4eb>k+;m83G21om9l
%_.&+;'$T/-&r)4@BIko9a(;(+P^+%@B4F%?9Ns5''%0:3egd;C$JueaM8#WZGp8k"OND%I12SED39n@h^+)kZPCQZK\G-[*3$="s
%9Y<TC8I"tmK&;b##hCY]&[T"N#$p_U4>OO".mZXJ[7%CA=cm;pNT#Q>olj@tBS'".RPd]!o#B6/oSP/U,,-eAQ*<-./IDp9Gisl?
%9&XiQ>c^f^//+MJ5[fOR8hii0H5%E&Z8nr4aU:!s_%B.n/2B]rqi""KclAn'QR/q,JPNXE['rLR:5e;:;'$"F;'':aPfc#YO'&/B
%kb6W"Tf#F[am)=G-rA=LXX<0YE3Vn\p;e5M$[M]djsY>57s,&@UVPiDW-E!7!cJ5N*Z!G'4NaNLFHK:S(83#]I#CG_onFl6NBiC*
%)koSnKEa@i6o>b?@MMAZ))?l!L+"?S[pk-p^7*[u2FMg51dlVR%8ica+Ennc6n*+/NXSdh0s]<`Ter\"FET'O"""b*BSV0uCD9:!
%lqgk&'er'AOq,]f*a,2`/$'rL'M@EdTJqIa@h45>.$(Y;$G=<u;S`PcnBfQb,.'S.UJ%T"r<[S*GYO"mWNcdHCk!(!^"E;e>SfLo
%EV:bf"#9,<fUk8;g7LLMp*[h9jM_%n>h\JirhM89W&HqlT2J[Sh?F/EP*5'aed7:GRk&E0dY:h/9MhrG@VbTO-mZn`ob*m\M#3Cg
%T0*[RT0foZ]n+ikSad"ERAlUGT]a8mZft%+93unm;e#t`cLce^0-r7-gRaX3m`"l&P_CA#[QSmYZor]!D,9s%JF@0Y4XibEX^gCT
%k266bpk4NE<7/&BWH3?QARa[53&i)3(#'C67U]Sj2a,")-Add8:B1s6B#@OQGe9/0g$Ajr$/[LofuX:0N&%b$Ts#>RZY4F^=#50\
%_GYbk'uC.R4&;\0HiHNt)bNprH-$N:Yh2L[jQ6`-878r"H0HV6\:5,k`0)'%0d)`4J!N.SR3f=3YPt]c"r3;[)+neV)2l^3DQk!I
%=7%:mMrk2LXiR[*6Q.6PV^;pB!^c\jhqP0h4*\,(&hD.BNG`$dgnqIf,a@'#nY4h$`uE0<iHS5to&F;lc&XfJgVWL?G;*?,7[DaH
%h7?F^%=3^B+HkI:]a:r=/@>M0adKqkW=?@/*4/7R&?B$T8=M[S!Y\1C&EfOsX'@B*j<[]n0+gfn3g[M:/@D<0ac9#m&*JOu2Xnf2
%=?Q1A)_=1Af0j:>b=\pP65pIant9Kd%K/UnmY*Qd/n2+QU!:82';5m5BIid&6D;Yj#_b/FcWrQ!%JXAjYu"tH%-F9P2L-3m]NS1:
%p)Pn=Z-#$ZiB;ddP7@%-%>JW6O=6@W:Q@re3L(buY/X/E(`ier>_<9$]r;AT]PN4BKj*IeZ6s$*I,e-t%S6YWMK?q5P0g6BI&Lu9
%BE5rn.EGt!b4'Gj@:i0DmW7c)4=9!;!.UbH#_LSnoZh`R8@#.dL*u-e<ZZt,4N#BC]Y'-sH>pOKjR%U!a]M\Xj_&g+M!EPh@@eje
%1fV;`1]dR_]snco0K!s"'_88ND;\#68?ZI!##]tfDi-/GH2U,c:]X9!-Mc(<9OTR/WX&TPFj5"Q7+&+r!l2%#5fsZf*PKQtb6jq(
%F3FL0)_f?,!_sue8!jJLRK6%fIKDfTJ71oK)T[1.:[P3Agk.H_SV]]i?:4%kk;%l?MXib/RabKNNrDHHqK_h#-DHG'DTEr:%-^OR
%&Z!Yi9k1EoD_=]dOr-FI?3W.(pZcF`Q5DWE>`R1;8MbmoG=DIs\U]YH8#`kINu_."(/tXcM0kj>9G^;J4\pI`;il0CM/Wh5NY:1q
%7\%kKiE*Kt5?>Fu+okAE";ij2GSJ(1]8O!fCi-CPT[+oI'h-FNON6L/CVX1R0t<,=$t0FEC8s"N(FR>?5,9,<*l'566k1bulm%T)
%+DY!pFpmpP+IH&%OY\ajF8#7B21c/!>,9Zp,%[$ZP7,+J("#QFGppIVl3)K&%:s6=F^PJcS0?5]\YS-Q-j5C"=/r&QLGT1m`T.iW
%1-Lp`n;G5Qc;;@=V[.*s=ZTQTaC'j\FT!eR,i_.>)#+g;"tgHr_&4(':m0gd;c0`[(B#j%1SK]-O#atlJZLsf6?jsearh?YJ7\Yu
%*[h`490gEM?C+XWQ;'qXaeK`!g=>D4QpB^s&R.!tG(ZebkACGJ-o9!o$7Rh'7':KR#%Oj`ht]<F:H+[ImD:;Ri#e$u;T?W2.tr]'
%.*Nt!ZdQAS)=Z5^>_6Z2\1'jG7cqNnh37o5!1'nHm;O!CN`6,R<[FRXYhY;3%t4uj-=tqm4HV]+I(=@a-:AZ?oL^G56YaDi!1sQ(
%n)2;0lkCc$=2t4O0I)[e5+BAB2)$0r+%#<UHGE@H&8#>ohh7\_&Tp4+OhWLB^scNALN^=q30(l9?cnfERWWsLF+,s'%h#)7^H3VO
%OrTu>)DR\LiS]9]"f;I5JpEr/<-&%\Q_l'*(,SGsFom3LY95[;ga`%1&=ElL+A+b>2^&9>$u4--_mj*"-Z]n:`;V^31nf[Ob-j.`
%'U?8FG(B"U7TU^`6\u>B6(#I5Vt>!MrG`7[C962IPo0KB'ZCss0\J'dZATE88IZU@C2l@U`]>Wk;%F.I5]/#bDF1qC`^mt7\pt#n
%OKogRpb93R_QFMsc5$kJ'4e(.?:`(C"0'#fjeu<5UF0!eGmFrhIi:(6)!;diB[T*FCNW,Oo7sbYlhoV\O:i:8!.r)9Kr:t>\-9(R
%'OU2?/H]hjaC&r@M\Qqi$Qk3,V[0Ir/#p;(Kh&(#H,c4*:n;0,oNuXD^5.Q>r5_b>]!7EjpS,o_T3efFHkj<g.oV:fQFj&]r#Ij7
%26-E+!i.ThqbeL'Op7YBpU1t:3uE84>>g`\J`,_(#qOsIH2nI/H*JO;&(=N^#+eU']`<p9XNfd_1_#"f^1aZD1YV'ZgMe.8KDs!(
%OpB's4UV/2i[T31%,Iej2>g,bbT-k2)dCnkLgHo)*/>IcO%pQW0W-]R+:Y]V*p"cV8tN$)8iMJ<ZJZNa?6EH2\qbp`a>%qDXTZTj
%\nK%E#OUa!r0A'`jPp@j%8[<p6\$@Nj[SpWqsHnU%V#mB7aTAmp#i/(K3-&F!W])I0!Ue,mr6,_eU+k9D`l-5,Gd;'5^bDqo3m2$
%T#>=-5W;h++1mKXP^#)4r8>,KBATjch,6T]4;T4B^WX06SJ$HKi8JB7I;Gk:<U/DkV#!c4@D1s4$J\a^pDF3>Ao2^$d!d8d@')L1
%jC'8s\!l1g=&g3eW@Aceai.d3j_QiT?Op@a'J&iO>c#rchM6!o2=#nPnk-EHUh-\\Xf[7Un&Gk9.5W&:3+dHKShPSo[!1d,]<>,h
%c]\!P1mEe\=hT.=Z?K.OGFsOPEP#!s-7R@1F7_bAT+W5ZfmQIZks`2pN8fNuG+VB\UkZKW,nd5:GFt%)aR2u1(tWa$JL<O%Q?St`
%jNY"-)M8O^,F+n<Pu,W<f;B+"r0DRRLfsp3iJ'!9dAYp2%'H.Y?Yc?RYrF_l'7iPM%?N/lJ:t:3FP4O%PgEo1"#=(Pp.nUXW3Snc
%B<kC#43r'K^WUUV+8mGmN/hJcn)P//5,T6MK&Y6+"_fi!i"M&cRUCkJ"n>1l[[j./?7GpB25r@.s/"\pi,H@VS@Y3Hbo+sMQU4\[
%6`&fA"7M%Zc6;G@el.RRs*=GTA#.K,,j);SnHI^R&d/V)m`mp_5o36"d5g`*'`4.l)]g7<eC$>p-I,s\Y!-A//msTn_e0r.LI8[@
%MAorgg][pt8B2qLgF=M?&%oBhZj%78e>ZO;D[/k6^f_h/#(]IF"4u<m"(D'hDTtLM1<"<435Wa[m)%S[<T'ZL\Ca+oc#t^%RLl&W
%GZ<>fc;<kB"32`><_,HO"81VXYb^LK%iMBP(j7m\$&s^mj_u1UOq]Dq<k2'_8QS#[p$+2TPN=Dr]O,I-fHj$lOuY+PJ8$YrW+*^[
%?WOC?hiiYq/>L+l6[WA_?Mbq5eRCb!,5$>T+)W5QL+'23^?CQh<75mE(`dRd3JYPRAEP[;<*!m=L54mZeAA_S!#-u_2F/.L>J"9!
%?WdQAE6]'U.\8\h=qb**h2mVc3QGjV!S*p%okYK+&kSLK@:]Ut4uVJ]<?uJ8r+X94lMss;gU?2/^HN">7rp9[6P?VlcFBi5i`,&8
%HPlt]as>2rWgm&JpaM@j,eU3R"(IGDfe,f!6<&fZC.Vf#7taEIl$C2+a@-LOa,.fT0(q-a8ugLZEJ./G794]+):0S)-,2T!U`SRb
%^qE\EQ*Wm8PCc"AA/m:nQPS?]9k=m7=Mjek=BbOR_Wa^Q!6f(fBl3f:;=&Nrm(K#e%Zo6YhaNIRPr+j5(I%$kaM.ct#D(uA;l"Yc
%bQ`gb9QQk3N;&lRcG&BA+rO=PnXMDdK!.O5_(r?Mi]<b(coSX+2L&&@RiJ:Y=,)"O,3MLi&G=*I:QRgV%"'RMhHM$O@n0m^0aC@:
%8YW)@4>=b.:]*CLh\iJA9G&?W;[(A*AGq0gVkp,)8TK%!QuZ/WkU;]XT=%Ag4.@_":]JD*Nm,#?*mrr^GW0RTJ;lE^3T>6X-NS=k
%Ku3=0\s1t^\Xf@g.%GT$1O#+3^VGEC7>1tl@^T_WJ@^P"LIYod=lXVB'eW[]8UM)%Tta"!$eq#Lmq>HE0l[[Y:)G\4g!$JS<9/`L
%q%T=g*'i'odB5p.%B-($QMIHr="ec8T"@_V8Y8t"R%pk2o`\]LgA%iJCI(9146D=XDi0QH][4[#2$Dl)3A<:OIkP#WgG(aYBU21f
%n_XCd\:QJ7nFe`U[`@/;ZHL)VS*#t!K3TbjIYB2_.FYug]:>.3+B-2,'?L&;ajj%i&OQ8@EXs[QF\ggDCaQS@dL4,5JZkA^JrOf4
%(.C\3;#/O4XH\YRe-i(be5pUJ!e!1V>ZKj#L7(WcO#e`O\H'S%a4R"F+^7,u7R`69<ZH,-YV22PmpP]`/,:;rOFBeE:G9QB*sG(C
%kO<5bY`d)h_Nb*.*lok+UVIbb&<,QG%po/O`K<NFgfWk7$`,h^A"cSp/;63d/:OAG>3](JRbeR+[Q-'"APajRCV[hj6W?DZkc-=0
%$mtB"N>.7>WMj8@o;S^!6<MG"JLmVgg0_mrRrnk(R?tq_0)@V0hM9@F<?QI[;Lq6"(7q#bAd*[PBW#$G!K`RLNTpW5QAuj44][nX
%NE,,B-,`*IThRtE'g7d>dL&VIDU4/K5ZXj\@IJ=",rnlKnM#q/T58&n#I.Z-*t,!oMZseBnsN?.9cuHlX:[#ZMF_eIjO-V;C!#Vt
%KY?F@ejf@)&Z!_[aI1g-[!+8i?E2!#405r`B=d1OM^i@?<GnRrdu0SUQkcSn`&T8GYu\.oG(8d_07YU!26ZQD*UJJ471Yjm&M^Xt
%`1d:!5gGD&1og<9;&[Qm8%6'C[O#?*`Ll0e4r"<6rLK32P\#mt$,NRe'dmYM9h*i!_j-%JRS.>M"A0DopMRlX/fJaENOUA_0Td^2
%:f0j3\qHR9>V<gJB$sr')2ntCPU_,p0*A27raP,2Q#MaL2M'61ndR!T`E>L,aDSq69bh$?nr[n8V>*BB@7VDF-,Trj@dqe[8Yh0l
%a)1MqTNTK!*3tUC[T;tA#/LN>0s2+2AEf79dbhIK?a0M:;D]kH(CMRVIEb0l:apSN%dg\>B/qdG)?>SZU-eE0]!Icc,![PNrePAR
%;FlPc8RNd2V%PDqUl[Zt:4)ssYCp5K!<m/T+9ro[aZbaC$(Z\f&%SD/=E'pdKW$78bS3$Zn;GFdfLXE9=Sa)]4&AJs,*QJ*;19=#
%'o.Q=7H/Jld#u#rp^1pJj3NWH;7X2"L?:0U%9o7CP(V\KHL<BR%4<aLP&Y&,Y8anH4Y'82V$V=7@P_8S\cCe^Y:C:Cb_`q\jM__%
%Ru0<DFm:EM%lURh2qq;(3U'$r"R&n3K$sl(KcjE\_2KP%5UWC4RG7lor`b*(f(h=:Bo$ZX7s_uqPk1#n<m\B8#RuCUJJ0<C5q)5R
%4=5DBl7T?>JKr-,=kk>2MCsS)#'ueu&&'L3]KAWkG8p;o681rh>agg/'Tu^G>Z?dn;<>Xe")g;a+^lBB^-Do\#:,F0ppVYlrQL/N
%LgfU"(n)Th^+hKhOf"Q<,0l);`XssYYCt9q<To[1`7SX_MugmMg9]:-c*W&0gIcXeVN5DN=FFoE1h8`(d`kq6\P,-e$(AofDKIqp
%IXaFJ;c,TMm7gN5Mjbc3K?A6XhLV=J4GnbDEpmm@GoUS,LWfL;*\p:s-e*O[_q-;$.kG4KPfqA[)6lK3G558M4Zcr9IB5+8WKg:Q
%Q_,#K#/GGdd?LPZs2YVN^jCZ?j^&lCj_0>kk9bCE=t<Wl\0S0_&R(ocP,&iM72heo(#B@5jcd'WNIP4J5&bkA'jF`l8ZQ\GcD=1^
%>3-IX<7EahNBEot_j$tI+@f>?,crK.#YusB>1%uS1)H+L't&X-jc[!f2M@utY&bI6C^+=O,YP1$iqT1>5'bQ9N=/D.$3@,3NX3bU
%C'=ok:sWiZ.u_bYqD>;\aV3tkk@,ET80AAtQ8G]Y,abWQQ_kK7k/9DejufagQb`b_ajUU0Rnf6ldgCag$/WVkqjrH^r(*P_K-;Vb
%WVVuK#580T[:6.]iA`)].sOWO^cTZf$BAM>;7]H'aETc5Q=O_6Mg(W%9WaR"HHt#4=iDmMB:,[K,SVG%1:<ic5F4d?E'\0b^.G&"
%GU<`@[NoUAq[]9Recp4SC&'uYV\OU2$41VqH!8#dcd48(f*/%h+D43uVO@e73_Sn.W3q4-V+P$f<fia.+daNi"XgZV?HPm7<WdFT
%'YDL:H7BD;+_HqV"PIeBg1)mqQm7Gk%I<ZO@g[GE"XIgd/da^iU-u,h!@1MmnAF1o'.7Mup\Rkc7'-c@pI'jA6)pq5Q$1[473u\+
%#t6%u1::T@09s+BX`it<9O40feaVm=%U0;g%c1,PWEMT!7iAS,eh0!`X$I?8B?S7nXX9e[/<WH-Wb<mB>cmoV9ldX.C)AoV;6Esh
%eUb2/p#c6(\QY]t6oL:jC'=e_<^:]5_M3ZI7(HJOH-adH>(O=pHmR(g>,>3i4R:3h(>YpN-sS#GPA"NJg2M/b=:53I()CACPZ/:W
%C99T?((KWFPcGPem4=G0kT!:<*g\'*`oUsCL%'4ePcGNI"7Rh(Wth//O<`[gXY<p$5;I0@o57'R:Ve>YCP=*q_W>O?Ij\flj#4q,
%!Q24=C6^iS<39.dS#\`Us.r\saNTG::FIp:#E*W1,*2*;7Kq%QXdD8f4U)VF42qVlndYSFgfd!"@B2+KeWN&!1-oob;SmME1'")q
%RgE:RcsuA$h,2-of]UKCh>P.TT/RFl3bOg`nE2($QFb/Yng%f%>!k)k/*=G7Q&BjP@\#uQ^_P!m^@HRZbp9HZGTlFaMr#HG;4K26
%m'sHXAhmErrT0ht8a2,P?>!FoN:4;I)`9J$]>?Z7DS&MG)Ukp2M)_J70NjARR[IJln"7fAUt@IY9)%VPA)l,YROMU7OZLY]lJcYK
%BjWUGY&CUP6SnP=Et*t(^g\.JYie-?/EgT=L1W>GpV%dDg_X<2m<k'rB[RKJHc=hOOr+rdgT1Bs:KY79T[@F/7BCk-&g`BW[\G6H
%/8Vp\$#GXIB-tb:lQ6++^A4:M\5CS$9((;7J*Q">U?&R3*p0u?L1^G;pb]Nae_r^`92YqKZ;H7X]Uf5Rrk2_>Ir?e7[]mO:@X*8_
%3o"A@5MFiEBB\d5o]kD\E.;Xc3gs7IGqp@Hs5dSs#ZLdM>Y_NP1gKt_pqN($RVL*ZRS5<fJ,cb:+&gkBe#?,MP,XFJ!.Y$+Be`Yu
%kPsHi-!a^0:^p-h.gOXWJ*^+Gc`uEX(6tdG151&_Lk"t#Md__n/lDg@5j5Z#-J\#X<friLd$A#aPo29t;b.Qp]_MFi8F+J,1O?M;
%[cu;\MTC;kkMGF4F&@3)bltEdVboV8Fddj%jJ)$pe]&^+MJun&W$8I'<LKnd<c@neY6\H-Pn9u@W!SDB\c9$;EUAZ,</iGI=;OE1
%9&8+,]'J8Kg12C8-F:j?bLU=$3RP5FK/qs0$#=@FQBk!T?hu6`C;MITk,5&Dg8DY[RA$k1enJl7W:mL"Q0&CnVH(9]_m6S-6S/5D
%Z'h@JgLdIfS_CQ4N?)$Q2H=T'e\5m<nu1-JWG64Jrc-,9O6UjL5-1Q^Z,YtObqJ.!YA;Eeeu&F`F14WH[LTKX-L5"tGAL5sqrh3f
%X+0"hZ;Jk`SSO^aqT$F$J2CrIfi=9>26%h!F[#fKf@PFVk5]mV2VES"\?g[tZbLY[2WK%ALVNcXY@e+?nMc2OlQ%%]55s$fr4i0q
%cBJ4K+8bgLW'@1E%7Zi)PO\10lVi#!%JN>bke-M5BCB4jEeX#Z9pcSjpci`r,uaNc#A\pG+JoH7cGD*;:^5G#j:PN%#LS/W6@L->
%-<0!W$">6cOU^'3(IL9]WI)DXC[-rI.f9ChA`k6Se_/FC@Q5F^q585F=SiIHTDnK*<cE/.Lmh^5:G@\#rr[<Ys7"4H?<F(G\p&BY
%q;Z/2Ea.jnn`4Y(*r^NBc!B?.kEBB%rqFUc60G.FDr:7k:JH<UNQ75IVOel5<c3"B=;+cd<.>9Fg$dZ&j3kXcksBk=/#D.$?4Ai:
%J1j$[d^XC3V2l*VU]'f8)&8/9r*jnm4;u[J9KaF<mS3ET<+je6r`.]H@a!r*81NCTjL72a]?AJ]k.!8:Sen0\qIG$KI/?>>o=#/5
%s#bE\"bg?E(5@UbgW,NVd8YGSE5Jn[ac!ktRI:"O22\eNcW<N2R`D%Xr.bDQ-1p6`5PN_UA#S\m&_pDf8%Vs_:(J];-[VWej2(4%
%V1Ui2OJ1o6h=>[NrR7$EPDrG[chF<6s1LAJ[fp[(X5e/3mGrM6`0R>`Q;e:m=0&m)<e>AXgH4GT_iYefo[KEX4&t]]ps8K&#:'4n
%qWe(-\)2sr8,!'@?!-gpiV:>+L*)F:$LZYa:(2GI;Y&E=9iJH<:Z6S2Bl&XHB]E@H,XlYM,6kZdZbKp1XNiUm]4YH2Nh>9Dc8!\M
%pdK(X^HX14oLV(#<9t%F`hRUGN:X.Cs7)*<f87B#hp5(6T^4mQ_o"Ic:QCG_HiF*:pKuaNGE7J$I)$b;cf+\DlMnl7YoW\=p#l@X
%UO9HEa$3s]s8RV4+,tKqs6h,k3l<)><qO,tC,?p&1@FPWcIV^"%\YELO!*Ai9/(a+7=+)%s#eokrqr[QWrP)T>j#a[legkeY5aT'
%AK'>k^c1S\EW*/KEP-_&Z#Rm8`:tkel;&b)NGEBOCq5OjdH9uj_]:8_Snj/,O8^km"]ERrPEWoW;1EVl^[]Y./F8)bO6FX@k]jUG
%=fr.rN;;5!\\,b)PB6-%TJTA4!DXrjLYe2m@-37A^CQB3n,/5^jjV]+`m2]_e>q!EA:28*?.WD$8Z=/:^TiaKahcKd(f^;-UVj&I
%LSLWlnPgVWk1Yt,f;b5W*ZhLZL5-^HUrh.cCOUe&Su6jX=nS-(*]g8_OY_uFQW]a1h7'-UjQ(Q#lYplb+Hr$;6J8$_Vk^$SWE5`K
%4l#iT<+cHbEdIC?[b1(oAG\JURCl"=T_@E`iVq6@cu,!=5A`&s2PuN43h/3MIXl,FFo(pUn\N?;=ku9Jr[h"JT5V0U_CCucg_,CW
%O/>rJs$!#Xf[r2*Y3h0lNrSb#a43(,f#hr]lX[L_RX-\Kn4V9aO62%]WIs/\h3UVnHRIk#A%clgUkMM$_/Q0SF7t>Y]CjPl*DDLZ
%jbDe9U#2]JoZ"_mN81!5g"meHKA'OulCAnjgk*)##]JL16LXg-hU:E*GV$2nG'%t>a'aC^26GY'G[Z(`(tgYC5'ga`f!e_roI^"<
%f[GIO$H#:IPms':RG)cGh&`3YcMhMBkkK,&l`RDON7,ai-_+'(JaAiIn"[c&cmg-.n\t?LkJ1s;OHKQ[cc29A(q13.lUIKdie64g
%h2^9.ijI`i\A(5mg*!g#q"8=uG^+%+@V)i/*!=#=_?0,6[ju=-0fiPX6tO9n=$_4fVVQ06M:O&0)l&CYISJXD2ECbP^WYlPiu*k=
%5:1/%36/r,q"j6oNcoUVf'GN@C%-JU;5$.^ClF:tH+i"laKG$[#eG8*7cVoe3V>mTG!\fmV^(n3!l5Am-'Bo8ZS#&)QM*6b;o-VT
%ONQocr'm72fuJM#3SHK2Ya)Xl4_50%4RCXEhQ<uUh0SbuN&@,Kl%U,u$PR6bo9OQG5MGALPt/e8*=b#OJ.)t_2u!la?Q[[d6XQt2
%g$Tm/=%M]t?c?*a_Md$D9gl>WF!`$5,B=HXQHGaVh"1"o:rd;A)c%?:s3#IQT:KK?c8sC9Y<pu8J=Sj?.`*pI*.t$Hn]V3fKj36$
%aS'qR30t"TcVqt-D!Y:_FhE5'?6!dO=Y$J$I7ZB<@DRSK_jR&Y99No,p22s!alA5^**!4=2GPoR(hcoi#W6RIEKUT'lc;+$raW7E
%Gr.Ri_cUfg?ETR3D2aKu[e<'P8=r@df2s(V[8&85g"[I;7:1mt+0FoMmgTfQ-qf7(>?L8^nb)FG-/JHaqAo`/G$9*`W$Bdb(0fZZ
%Xmk;hbiB=1o^Jq'fTM_iN,;?#s$nt47kqXjU=rf%',n<m*"NQl[a/1IpJ^p4YdLr%@td:n=e'r0YTOsa?p.:7CR==2kLd!9N7W82
%b1[L<Zo_7\FESFELE1a!SlP24n2!,+/4p1`_o&6J%mQ;co/,1*kNQe\&XE(NiZ*Y>C2o9n&[a#JbO5lNGE6K%5=]GFo5bTUH[_"7
%;:"!qI6>l?UQOYiqs`c_-[Be5G\1H5E4@p]5P;r:*6eI6AdQT,)-c08`fa+/%JFYln@icSrV+.P@=p<Y8'k:YlWcj%(1\=!b=8BD
%,a%DW3\As1<'0fRD8!0D#Xq7]da,TEOio)lgS_@C6.,A=5>S&\E-i2A3Gju46Hg(4kDB_*bis=qA.4m7I$>pS)cLO%:(7]80RVNh
%:r/J!'6D=h*E0SQbBjq%KB?u:.F]-(.Ik@4C:s\"#<VN`3SZ[9j^S\?`M8UA@RjHa*kC"M/9olK7\pU7l[PM7pTW$@rm@]DC'u'N
%N4i]'oAV_2B=bDV+TX[r$9F^,PupbT(9^JKTqdf/2n$)aR#S4II@;^*Mlc;r6ub7^g`LAB5q@$mM;:Bcc`5G$N>5:LU$Hq"2?5eN
%4kpkpNfHl0=U.@"!d[kTZ!<Su``eocP%qP:e#Ds"@/Vp""A9`*2?R&jj5bSSB^N\nc86.&PPt/QM$'%^mdE66jXJ0oUrSe6#Q&Uh
%IPO$oA97;:UK>.Y9RWL=HMngMnn.!#I9.dfpA'$$BF=K%-p=pD,dn6iR61:P.i'UIH;ZLtc\+@#h!:54m/22eIPEn=*4;)keI8M'
%]@`H19eV@gOEP2(dT*B^0e-(>bNmBM<(8>OkgT(?.E#e/eEnGXDS.%i5'gs^d@Gp[W$c>e=0ZpBqU\oZ2]f^TJMt?,]BS1lA8O0r
%@^*qB&eGEt#KNX^M=jomPI7CQoM_Qh.a'"UF''tI:#5(&L_?NXH@BS-ap4\a0G_R0fu)uS5M_iXGQ6C1iVQj&l.+t+qf@ORp9sF-
%m9a%']Q@rcgAK68k30;6c/XN;o%gi8NugF.*o:2uI-p1RiQ6DV\=fHp=&bJk:6MBgO29DLjL;[H?Y=9#c/(K@RQGhin(;77m]B_T
%PZ#]FrN4*n=6=,$dHgV!q[_6_1GdXk)JuTmI'='GK>f?bbE%^E#=#rpZ]DS6p%B^_7s:>^[r4GY/tX[)ZJXO3IuLSIPLdQ^ZFnal
%gM`qA/Dn2>oXVFl5P)=qeZdib06=J3MdPW7*mO'-*8J,GZ8her".nN1HnBgIpAAI*q;ko8+4#r(hqdX;+4"kl+&t-BhldO@e]Q4K
%fn\29;+7qB8+U)s^/"%0Y5TClD(JuXhl_G+epDiBnih3UrGVi[baKX&2qJkso9[qtgY'&_Zb7mReXQMM\%^aiS%nZ/EIN"Mj2'L3
%bM2dBf8%!-YFV-jRk*7CZqB`pbJTn.^>IcB]"HE4?[6n`p>O9B-bYes=+A'eY0Yp.hG.oD`P&`fk'HpjfCj+=IsUQY\bGq!:0HF6
%g.ZjKlV$O*mTnqS>TYL=]sTXt?5o0udU_D+cMX6,?"EX#rq,S^U].cNYt&=!Y]=;mIVJNH]7jH9LGq)CV,,(l#NbmElcn+l)kZQ`
%[EDp]h?WpZm#W8&2_N"RHn*tf0DAnT*qXZ[(Un[B^>2m_e<e?S#Btp/<u3OGr-/Ll'_'"AX9FO7As0Q/QSSL!k(CWUrn$MKKdTiK
%rmnr1W_Iui96LQT:Mr@@Y]*5G*cBfsMVd0]]smOlfiMEQf4/%Bo6r=:fM_ZZf7bll$YoP;.k!9t&Bca"#N'L3#G\&L=n/clZ//\*
%r4"c>]^t4I_Jjbe[skUUk,!?Cjo(\*oD/BD_<1'ST6!63gkFA%rTqGe2k&*S`Q#rPDsHK>IeLMMHu\Z9h7*3N+2sdtRsS5F(?[Vp
%-p*1p^6dr^NJVSXHMqpR8alJtN@0X:lPiW5G%@c?#f%385+$V@oASH_:E%Z6U)M>5><Vtn\%6s7dMuM/EeBdA`HZlW8ZI)R:XJ]Y
%GZ:s;ET>3-r]^3uO=YjP95u&tI\0mcfKF98f$434I''SR4LsG1b$r`kH+89EK(B,?$)_N`j\bL$ZGM#GHh61PpVlCA-SrGHG4hWE
%rnH%-l:F)_`Q9Vd>+E<QE.*2IGdY/&F(Jt2moOiG5"q'j]O'6@NB1]JfA9Lh\BELe\$d*5b'WGm?M2I%qH\Li?9B:DN@Ou$dDG9T
%CSkrObjO[$KWaRA52E__M9Q,Ykc]BdD<ihj%E^j1:i>")Z_/!1.!s\'50#;lYJ1q3>9)]Gp!!`&^;I8j5;YI)p!(I06!j8CgX"b$
%m?ph4hql4N#C!m(h!"bthUq.TpYS_lX5!)mZZSC@kpeYp\2AQ/(U)[J5P8?"DI9`BIC\&bDQ[e3l+B44]_8k>rLIa<8R-N;rio:A
%gVT.-X6JX!f)>>.n%TCaZL)kL2cnRkic8+IY?!lIWupBVZUipM]`?=P!gD_V[_FnPYd6=d850>bro:$u_f/fGh%GfeQ)pN-9],mG
%cJLal?XZ;t+.$3?K;7%X!nI%7pQggt/cB"jSG1RUpf$YSpZ6]"eb$T%bs%_kYslCA[IdkgC0uBOq:9n@ZC:SrYqXN]MsS\/Y2?ob
%9,8Su4!/&V5+g^cb9t3Nan"u"\`Cm)hLb^P7R)0m2L>#!jU_*FrR^oO()tPQR+gic(XPiXFN@fQRGOC!07VW(>rOG#,Q:qOTSf\V
%K10#4i@Ff/*s4"0Kb([2f0Lf"<eS`a%I/'=h033WmqrQD44GYA*S+[]J^)P4YtF62p&8aD\2G<C2?TT'B?>;-hWi67c]5,g7e>kQ
%nG2YFo3#;_bsVB#:VC^*Z2NpjF#&la07uih.K+MYRFLf8k9h(7M-$a+IK/SAe5jFFUG"cnq6F;fnt-uE<(/T0jntaXBlNr7e'1X0
%NTN@HJn(I'8X93hoI&u7>apc@EQ[/5G\JHDQesI@q8+5XRC;pciSnChN!,o1_QEEe)^H7Xc_6u<qS;Jggn:\mmS7_)Bu$>^7'/e(
%eEZo9FDh#>`CikQ#?=ZI3uMm*L/0.D#3R,aWn>l5?5k<^=/Yr>9nTeOSd$"t1q3>\,<ClioDd3M`+@m.e"krjL=WOEcfJLn,T$fH
%p"JSr-bRi2IJ[Q)EUMOoe]Io^3kR[NDr9EC>:YWhT74;^Gj33V>\hGpm;=3i_!U#15;Ur_H[#;1f)3hFD`SH8Pd,h\PC@MrE`Ue!
%"rt_Lo#].ZEc3KjR]ca)dj>rdCs2d<KB9uiheSAe%-]+]"s>>NZGP87g$$^V0$h5E2VfHkN*!aGB(.RV2,iB/\?ac1kO,u#4J(EE
%gjAVNomZQ!n8iUEo'u%Vg"YVlKB8Sho10q0Z6op]r`Vf5\oot*f<tmY)[e/U>T)k.`PlcI05]/TQ9MGMm(HN4rjhuFn#qjuI.P29
%HgcXR6t%T1g4.X#*qI(^;VPeu>kNT#V7+Xu\8!!'b7a+1kJ;-;d5rk"/FP2D-n?[Z/rWQTjD%S1?QRm7.>f'>FFMS@e\g^%WdIg^
%gcf'oqMVZfT4a\\206@qF^DllW[c1N?UdhQ<I];dqTdBE:\O]=r1'[9Vu#"@Vi-c%OsT#a83NU=k/o=JMrtj<_PnGih7ilMG0.r"
%kG7k5h>?*r0tR20c^\j,fAUNF.4dcMW$c@"Mt7m7+)p]?*Y!ENH9PHt%7]cU^Z$!E.=HF?[Qb"'OFZBEO?%oq53e2eX\W8^n;;b.
%bPLpSX^935:,_9ZNcp;rk3Yqto_$C#O.jW8+Z<rAQ[DuhW7J`;4(J%fJ%p3f"VaMqDX<@HAGM?k7O!$0q-#B5mQLC8l_B)>[kG9D
%E#3$e#kukrrFk5Hh.cTop"Z$0L(;A.hsPm'5CK7rrPts?2sCRVkH"-siF@"GHJZRAjl5(SiV&c-maH@jZ'KaY_gC9,(]nD'fei:n
%XC+$`@/'C]s)C7bkpPcIRj09nJ!mQ0o[DE`\bG0nqdDAZ3O@1E+b'+(-s;#slTI>g1H4d)h;']3e"F-bC&Ocq#.:#VR<;eorj[<#
%If&`5]2nY&p+<:lk"1'sktNZB^=^ZhFnj\Jeb:`m+7LIbThl7hQX2lAO%4UU^N8Yg2+q?S0*fU;gV&=6h4Ibg7Egf[ZafdQF5bh^
%n)]_/pQ&WUdrs>3mjcfOpWIuLWUDrtosk;bVl1>pS^uRT4XEPm,fd<`o,'^+NE7;tg=[k,N#*k2k;gOj:[Bfb[!Q@pcb[e-\CSZ@
%j&A11Ikn0.$!N)Q`80\Hb\r!"[jSn7qRp$MX:=sojTZNHn8jZ?%pPC_IQh!Ya]`"4kuDL(>GMn9RpjhgO0&qFc'_3b:$MW<_kUc,
%e"^'D#$SOK4C"?f/]Y39[^CGQnbpcOnLRH6THAZtem"\prd$9iC?,$Ch.O>]rX/8/O7]VW+2<-Z/&,nJ>.?G8HI=Tn`]$"m_\tlV
%ih,\CU*]oL^i4ejNNIRki3g(.If^OZo_[RgPKCN6n%8PBnef@;_:&2)QPNe*bTCg$\)t0.(N3N/IJVR\ot?!=$YssL/c20$41:Qh
%caN9//?Gs[r>Dq#Gend-<j2MrHL]bOX03;R^$$JhIXA31qcd-Fm2DF#62C0*f!gb8a5tL6aR[.#+P0!T;_^?sGBhl4oNpAkD"_f)
%*?EX5]rS/+cPE^6G]@Pf.^e5a=Li_Wag6uC`h'a&S$jQ3T!l,J<R@c#j#if"^KoU.ZT\0]?0W71^Y1PmFNGTMNN[Cfqs'cL9^1Ym
%gQuN0qV\)g+F)\tlofW7C8n&hkFHt2;.TV$b2Tm9HRN6K>5l1=rpXYdGd;GU[<ZcRa5Yn%o#_IokD;oS0?rt`qHLf!na;"r7/u1G
%I=nbHj3IARgW_[*=QtI"D<.^755J/`LMO#Y5Q7r&Z`h%<eP:V(n9%UCl+Ob(mRk8;o0So1_=H!3I='7tR7C="IK%gPJ+R=iCTjZd
%j99Mkc"tUlmE`JN4jJ\X]iV7U5=;lLqf^$N[4=1^jl_!^F*HO?gaV-Wl);)FRl!$pc?Fd3oBXB9hYuOS5CjW<?!KT$[`jC$7EY9i
%H!rl+cd1!>H+;A<98^p-g.mU8k).9!n,"cA9FBOumJU7iNm5/->4Lh8mbI/]K4hkVGFm#2XBj#-Xs.fO]l<oUm`1oo9JDrs0/(WF
%^22L&h#=`AGk"bB2KNtUDK:*sYrt5D[d1u/F0*ZQ&D$DdnC_h"q(o=$4P9A.AL[88ebSV1pk@p.pNFErhqcWFL%4GAiT?,/1Z[?Y
%Ir6?Ul[PIPqqLX\FDejgRHVW\a"P8rJL%-pf(TM9h8IS0N''aZYE(p8$oY:Q*`r0r]m"/3\MsB]@_64#'QBTpJZa'2ou>P$q7aB?
%4PVa9nF[8-L>P3iLTA!MG;@g^r:tu19r?MYer/k#^#[$#?>\TV)njYbKB9"LhHRknppT#4T,urGP2hB=K0<\9IO!EZrVa&sg[dqU
%QKrquIB\)`eI,`VYC.:)Y3sX2H=n<1^-+jbeD:RWQe?Im"c5K6'`6.-ik+G<T<'-%BDK#J].Ei_//,V!g+1FKXnY`l+R[>MCYSAb
%0Th]GHg1'[61<A'e%roTk-t5ic.GqI[!?QXQK7/EqRa;<Ib9gY>9?][D:tCon(TIRin)/I=(*-3#KrGlPHJNgO!i8clZhnG>Nk/Z
%2cgcmT0+l[BQ_I[%<oRg:"KEUDV:NJahmoDj(No)rklnPl,cV4n%*p]f+l#.fnuQZK;BmPMXL,WK@0&;?[FG4IY;cPRAKo3n/=-s
%4j,Rmqi)m2[V('U]j<eQ>TA]&5LK3qrEu^XXs1X\Z$:6^H!Z^+_jqQJjgO_a>J8S;/+8(T`nQ]+Gk2"_di0YW:tkk'pL@e)g[XB"
%cTq;D8,!HN@s@8%n+Q@n#Bnl%lo-nce^qEVWj:M5(&GSTpiZ/O/?I[qF`R`*K7f0XG$IZ_H_/An]RG8(eUu""JK%Zd/[l)M;1W1b
%s3[+JBVs?;MR_*GH2]FE%i]iB1$H%!5'7o34Nh\S`d#=%K":M)]%1O6?TgCdT`gQ1>=m@;J]UYP:A:Wd8Uik/0^eu9nR?C?[.3^3
%YWP(^#ZP2Gmd9;fE3V>Cim,*>E-ufmOu0k"K'XehlHaqG`^aIf*k)#m[ZZ".H['gGDY@L^bHB+!ou6b"4V\Uhjca1dGju/Sr8c8\
%h:Ph:^&.0^g<&@KYBnO#q[_.sCh(sLd7de:G!CNd0l<o`_<'\Oamo>KDr[6IEAOsl#=g_q]3fKj7TQe.ajTMPWMLlnYa8Y-2DOLQ
%P<6JCdEs\Z+M:kuma"'8n(V"&h:QE<$osdfP@7HTS::qdl;p'@$bt!3^.c;qbqo6tZWMR;r4n25#IhLWp""#8Un,*&1?Es^r)<ke
%C1GZN_9X(DKD#'!mbl+1Sb9TjDl0/nn\",iI%aQ#9KD\93H?`snZc?tIeaPn3.%=4-Js`RaUtcBo0;AL!g9);(KYP3mk&>ip:fk+
%)f0(mG3q1OSdY1?<93k_0+57Idb^b@NF,8%]"e/_RDbY(_7uLV,;6:+F:CXHch;,ME4N_F\FsFkj8.KMQ7=8(/,!:T3b5^YW*V".
%4]u('EW+9?ZLn,tfkL1MGH]j2VJkl#k`n:U%j!r=rH@4X;fgql^UI;>_9Li;n`4T``bl\lUuHd8;uQ6'[JK)s[JHcpC9mCNlGFIG
%FD;glfJWPDJW=uB0;jjIVjE.E`L@Y_GO-c+F":;)(09R$]F5_8LT%Ynp@'QYb&)KP(;m]]q3Ok^?[g5kCZVV[O+-^@Z2$@]X<)b*
%YIo+ch1+,TXlsCfqaFYj*c/'r?;k@gePBe\/ZbTBC3bd;nVJi<HP14IQ_,qcHaI/QSj0dU%NKV7llN`]>\h^:ndX]Mro(9AUpi?)
%DDtqMf-^raK/M/7\(7fBGONZFA%UQ7]s"aC%uQ^>s*VD&br51Wb2VGOeaoVk>c&XnYBq0R1?u!`8*.j'gpF?A?CJ0s)tfhRJbfQ<
%S%09AZ+*WDHL1;\ZaW[6CQ$ZBQ_qrM40'Im:tXO\p'9J@H`c)UJVrk1mq*W@?@'+IUN*s,DcE!u)p?$>Y35+R^R/5t$&;`FMK81O
%DgTD\4F&mC^UH28E`bL)Gj0O[q<dn)4&8*@b^h-JcAo3Pqo/@a2f@=:]Y&*:rr'e'q5p,f<1\QEs"Sai00Hp^/E>Rd@?9TfakY3t
%fAHSB&%pA%ls)Kbckbebr2[Fif&)G$hKQ07c?c_IriQ<-.pi]#^HJ.S:Y)uc-[VW)jH"_HHId<Sg$8#&(S5i[3OQ`j5R/]d!kd%>
%5CPoDWSjiP@PZg1Icmj%4_+g8?MB]@CYdD:[]c%U]jPbqik2LRZbE"):L9XZlu/CXjOVX`Sd^5_%Asa1dGaT@s*1X8a,Qdaen=cb
%]?>\DK*Ck2SN9sLpll8$kA%JSJQcDZaiD`tIHR@'g7HAM-AT2`B0>_Lr31\5>I)OM?_-l`X7OM7p[[8r\@tUQr"Rob:(G9pkA\Ht
%K(Fa`$(c1h.l^>oQ]?K;cG1.WpprW*`bF13!j;1H%ju/1j-ASqUVen%e+=ZD\u#AunHnR+R,4D)+VPB2Q.G`5F(%k>["%%=g[#-Y
%W*S,]FmNr4\6!CnT9dK?+RhGA;ZHdXL&>Xq@*rkMGGDRT4/5$c7:,5kgV[uj\lTDdp7B.ua`E\p2;1*0;-]uIoDl=H%p?3H'Ks8!
%53quGF6/@YZ;KR^B0C^'9!=icXu7ca5O5^kh!(C.h:'PZ:f\X5StfK`;WAb;k4S7`J&=M$kZA<h4(<GRi#c4*DVGgg2*;jQ*H."9
%pg)sF-&`C]rFkJWmEtp_dI;A4jhq$G3!S")4#m^gcDH=dn=tKF+b?\+VVW;$`V.&:oNbGdT9GJ<"3X;2=`QKRZY*KnDG[06_k$b*
%SUL?P.QE!gVJO/QJpf_On6Eq5Zp'r4_3c[hWUZ(aq\,]Efb%FL6=fiSA:5CX]EGZrSZR<I)7@]Ufr]7'HTg'S*SNNB3n`DEe/gF%
%QOM0EXa0kak9(2bEQ3jDI;=gQeQ0;Q;gb[R)Ep/DQ+I(^5<L!hDP-9tm14E\k99d]c8"6/FFGRgBY-/0*o!4(HF5YP=sGnRmG+7b
%mqR84Q#okg&tk,_5.Y'%BS&:iI2>)d<N!tgY><`"a-l99^Ofa;SkF]Rp!k2OgZ`(9*B^BD_qFEnO!Yp?^Mk>$?i?l=n[ZBm">PCt
%&W`g7dKK2QJOn,bn:8Btm5WtDb.73biY:S3^$^>cMPEK&S6DeI/!0&u,16?%jNBfCMA#H43Bp+lV'(OH-DS`b?!7'd?di,'8mS&m
%_2NeZM:Nj4l'nN#'pYcj2d;`(p#MSoDL]7c48KEWMI=T"pO>FUH3]UgBL\g9V<cT!Q#$:f=X40H(Je"m@g_7rKJ\*UR%=sh5J-RC
%Pdor4Bo$l21WXC&9kERJ.9"GNW/=3l-qH<Ni(=9@M$CbFg&Q`N2LkPSaY3\*EIu(kJ<:?@8l?rs)J-50Nm:>_,_OUuR"@'nbF,@c
%e4#ScR3X:$BJPcQW<FI:W6/RGjYL(S6XX*N+f`DRO>KmM7\PXD[AjY`0'>)KC+H\Z2d1F"W?af/`m0n;CY8mRFs]h!bBD<I8.sa9
%WliV6>*Y$^1T?,!H0o9RlkF$NeWB)RlU%?b&r=;1-`R8#M]&>um8.@AV[KWYO@)Y-G#TiNUH$.RJ'-("9PRYC'<NB[3eNjf(f"T\
%Ll#to]QT\k<GDaW[:Kl"c:ui?.``@.<9_c(J4t[a.&9]nG]'P(T'<o1]$RC1&i'NTBbq]<:mNm@Up')LlSTqfDE:U2Qc/lqe<%Ka
%<mg'3$>khl;0@H+hQ?@#dNEb-5m;NlUC(":.bAhZm6OJ)`:GGmj\282V@0amb5UX%P<k*'<n(#F$>*%#L%OeYGm^!S-6RhN5__AI
%$Aa#JX]:l)]`Ti0?b9"@h2M&@P[,]5RSF4OC;<!]$JOrg2<$>YBT^Q8=]0C:\XiP\X">l2920jBW_t0qFsG`TP@Rs4eD8nXcNNeQ
%\"cf93?7O7`uJc:<$g;Bp+&pul9rP#oj_Z(UG]C-ZS4p(>>`K)DG1i7a"B4(2\oCrOa!H:P1[\60*_O_g^;'Y@fgQ7=">36G\1$T
%2"_mOd's9Q..X+r7.!M<>%,o%h[2m)NnV[iP1JurS>UV/g/19tS"KuV=a$H<:Ab.##/g^h?3b5%T[#?Kk/uO)*N2+l7D\VZ)3\+&
%b%dJc!J:0!*D*T;$]W2?&!\o0q%,Bq>Us[g?"UYMKe8Mk;b!^oMj[SdIAQW?&uobtm4#oX3g8qX.*SVeEYK7!7'4$c*V<C/1DMTn
%?)Y'L5F!98OA4MPU%X-UNlGaj_XquD'kBI'PX@68WZi.&?U-E2BK%l9ItcR0M^.3RJNW+_H/52Tr'SgfcguHc9=$*8bYMfu_P(+a
%2ab+C(9Kh1kWhL9bG3Iq[:k_*rh]e"f0H9O/HqkQ)d>$ql,q=I74b>_O,9B=LW9#0r-"a!pGA?-*6YQ&8Q+'cE[JtNeVW!lm7qb:
%P,ICjBPR9(UT*&hYUA2QB[//a;5Li+N8$s;F:*,t"''NDF.P,E.<A2"h2[4Gk/Yi&qOMNe;&S;-g<o,k\N0+Hm8[#nPF6!l:YX:\
%^g#Na=1T'QB-kZf#$Y!C-b^&?Q2m5Z'fYBWYQqH9bq(_GjV1p.Q0#fg_F9YBKe"Z]S5%^kg3U)WDmRl85#q=?FeII@CHNCi,OVQP
%N>V4!a\&PDcu=t;>GNrUg4`!R=FN^%7Fd)q0##D*R^:FKg\13gVk?X`4:5TmI=Y@q'b-3-e6ob<ksA%tnUuV]TP(B?;;'5o1(&@a
%jdGC#it:#TRMT*C$H\2_F1Ppt.7jQBFeAaO![ot_JOVf/BMuWoduMF*=R'\jeP9)u1Lta];_=/'4)4R&_tOV5g;'d/78+u#<e.(#
%Z)gC>OqXK\c=UKWO(-]2%Q#5rm<j!2*,98nI!<E*]uCM=\d=M=;b!J>$I.&RLm=6$X/$E:Mespqg)is=1>Fs.W7*R8>#RYfTN3QD
%7@)b)+Hf^?QJZ1/!P0$'%h>uP=,WLj/R&0,b>d+WgUo$"_TWWVQ5+(tn@l:-Z`3"$Xb_ht5iZ)+o&V3theN^]\K@fE*CU8`QU*s#
%X;fYm'FP]#P#<Nn)n?hpf)b+hD7>HXj`(!nBKI-WQ`N_>)@Y6#if,ll5De,%'Q@"Ep-guk%m_]^AZ5o9685n#U*C5K4],8$BZ9=@
%!R94gfM!eDc&>s&W,JosYiY7Db*/j"^'SIUMp`H<R[2h9dTpUR@Xu1gL%`SKIV9iESIUNgTScI\WW\G"nO!O2b@e'5`.:tO0'Q8q
%qK$&eb+KOZX>:m4^A:/YS=go@2)dJO2AJ&KW)tC@"]VH$*HT'G`0ahub%Rm.nj,P>/<VB&#tY@>TcVq::g3*4-t_5@">m3;&T1FZ
%,:jCD4_XR[M+:XI#;o2;jl'Z'ZHh:Hc3D6uOM321\Ae90\VR^/d4\/\Aon?mZ6U/eNBI<k!*fiHB\R-f[-+Q!FCZp;9gHRT_3/=:
%HblVVqqQe=9X]QCkJl@_G",ZO\4`.[B"E`IL0d)b3G?(JEiQ?!=sA;"2QOMp"Bu2;n4YOu[rMt&XNpc^#IS/Ua_,iDE]]@^(I=aJ
%,g;o&7\hp<:-^uU.j=,;ZrHLT]lYHm%arn#(l]l@M2*)!#/SH4/'TYY>hTR\*=S!a"5TQo6!9hI@,G2,hSLa+*dLA(n"?$_;U[+q
%8e>l;4sZ5Ma%D0`o.AJp%7&dnog4a_hCR=4TGS1fW(Md]O:$c>Q@UN](UEX96/Hq\m0Yrk0QAkf]c-*6Xr],j6\PO*)f4&9<hR*&
%'!G^U?-4!O0[2@S)<u-ubjJ;j4O$Q/H&i"0&e[5CYhKJC%TF6SFr-)5>qinBjT;n=;u)Vn!Dr='e2+DU>eJKB]#7]=(^_s4-$aaS
%@M9L;6kdqn%`msi%Zt/np^7?!iqA,9I5a`\nZ4MNnlb*Zf3hg?_8<K^\oJo;./2BoT2irf3<[?'n]g,[]5gY7E?K3J2"LkW:=;5j
%#)JuTbdS"3mo'GngKVZB$[E`$-6WR3?oe`#Z*%,b9PNf?.PF-,mXQcaDHI$nm\*O]1'1D*'k$\@m5aMOFs;XH_8(Fks')\A&i@o-
%E8'c?>mVE[BobPol(<JV&X_"T=G]4["2bEo6+<lBFtDFY?n+cKd1/Y#=[$a-AM)qK[XpW_3]X2+Ia(K7e8T"L.kTH?+mtm)m6tPn
%D7/Ia\9^g@[(UJF@$]r_X18A)VlJRt--T;^j2"%IT]1mG>!F6LYY+8mK'<8X;!&"6&tshTN>3,/[#8S;XZ:VgJAj5ICN[)R.k?4;
%`a4TH?@nVZ0*4L15sTq;>L=G4N+2o=36rj(3)7<4c8ns.:oGKmXfk6VLf88#a=.DYmrtbfZN/F1Lf9D<qI23"?^2RQa=B5(j9n5m
%0BsO1"%-\:JaS7O][&\V:]]%J:!>.fQ/d^s=>c;>AQY3b6>"&b!OEo9^Yu#8cNQim,%a,%l\il8HrY'?!OL]<hGl(C>HN@96.#nj
%OQ[f+Yc1\]^0SP<I*(QR@)6FZ!\:S;[t<T%'mL@U8I$)VM*Gn^/_)GhlQYap)]04nQlGq;Anq2=eGFGP:["-%A^>N7peD!M+qW+0
%J*d,3;]j\Q=%u[n$YmYc.ML=2YThSr]0Mci$B+"F@of[3TSeWWBUL%P7?#*FNDmBEHEJ7l-$bn,LQ^ApNfo8R,7goF3mmZQSqO]?
%0cl$9UCiDVZNJIN=[GPWg5a0_',>=F>-EKV],dgrAOS46Wi1m2;(L`Xm6T/g[t7JlS:\?T[;nMImV,XjGG',?Le62Kj?(`<U3Z!<
%+@Ubb$N,KP52W\I1`Wa+9=0:O,0do_LeogM[%gJ%@RXu7P8j`4i=F9ndgFfs8Fsc`F0t_LK)o+pG,,scPEVi;<KYhu:q"XP'Oh3N
%+fc?2@u%2eLcYE8#7?o;DVpl<g;0;<qp^p6o/]^k%d5*X-s6l2dG0leB:opu@lkMYWjc\cTK0,7TjfP>6r!)a?k[?<(`WTqfBkg2
%&rCC6BLei;`"(US>$>6sobifeB++/rrJW`UHTR[-`'tCi[el#:@fjWnT7NEF.V`X%X[BuTF05]fBWVJ*1GB(;.(MFh;0%Z;XDjFM
%PoBk:;:ktZ>AO_m[T4^2FbSU,ij.Rd!NkJ/&OWGIU/md4*D.q.m:a#US``QpQkeKNfK6H^UAggBT1h<`SojM9Ba)s2G$@8!*_SHp
%(Gt:hPQH&tRMopR+OPa7MVO*C;1%bI/^>om?)\j(f%df%FeX.1Xq'GieI$mQWS<?V9rf:og2cUg*G>fN]5dcn\$C1a5$f-p#9%P&
%h@6Ui[:DSqinhAO"&/m\.-J%jN^i3`\HB:8;%;MrfEu@DdA1eQ3et^u1oe@%7!>6s%-487+Kh$tBP,p],n<l!KsLlhlVj1^CM5eE
%Bq+,sSB#=[BZZE2NOZ6:T](hkpXfsTPN-pNL(6%Vc+3GSUEJL)?0^3u,?-d_>J[8Ic:thiNTSg&5BidZRQ7kBFu7o3D@E(Ll5Z1]
%)gFHE:#H<Ap1"=7`$"S?!nluYAFF[Q0Jga&La.9`RYP58lsS_)L,FeAILR%4Igp-O<C\WHcO(u4m.,7k*=_d`s!"-ON4sKH*SSoF
%!r%/<'o]noB,U*8[Zb.qBX]"=L$1c:.[Ug4=!Se/Lh45;j^h$h(pr@r_6fur7I)&D[%eefjWE]nUJVKgiD2P(_le0DK]GEr4'Ji(
%#]nOJLATObJEfIRII!J)FePInB9,=P>cRs,V>%<:cbSmURn8;9QPX..1f'LM3Y6Ncs0dlYTuCjTDpf-$HATGKdV5Q.jiDJ2Q7Jo(
%b7QbP#eEo(dn307pt3NX\Du5m;o]W1k72T*o_9T.70hi.JND/6K,-D@Fu5L1UkX%L".`OD_e$$M(_d3)HNK_S+8r;#WM0dRSmh(o
%7.+5!B\4??-LIaMW($`2K)Ze)g9e4kOlfa`2N[9Z-p1a,8U$gnhj@r"-YWOBC-h6A2lE;d#V6HR*j$),'CtV?kgrhoCV<cu;MChh
%nn1fo#)WmI!UWP&BT^E#KQbkTLC+r35.;oK"*Lr[dQ4kE0H)8L27IHGHZ`;"![]T)dn9o_9J=$nbWmH;6N*nbM#N44+F']V9qBXg
%#]C.URfZE^#do74qU3ki[LBR=cp5Pki7M4JP"ntjdQ=Z%I-&`N0!lo"':6Q95>\.5'HBudda<W#gT7qt]U4Oe2<a-o7K.#*Q:[?F
%,#a^I>sYinLG0_skR;]+g%.m`i==3EdLaTX*@Pr$;EI]TO^=YVHNA\!#oj=Gq\s30,LbSjeV48+h[D%Tp9'1A%O)!gJ&+p001Ia.
%gi5[J^C-gJ^^@ZKGcqt/QUWJ4qct)fKk_&T`Boi\.#8?>YA'Df'3@8QDk&9u\s3naXEUAS+=uWY8&9:u`=09:+UD-oL^>)p4m%Hk
%p9Me?2[V3Lpq!qOPsk5T;,mlR.I<4p8LJ7S>a[FLePJc`];l%9J1DsfP3m0WZ;)2CHVO?u$*W*7C6FVa[FLOFd>>``s-2[i/($AR
%*ON;4@K+f/Q+Z^'7l,G^*IJr<"ZdF,@tn+&GYFZAd!Fj3kdI/R:+\&o#'cu$n,5QegkESPTGoI\?.I<#233JBT%^.snF^]]$BBIR
%G/5j=cZ?\E@)a`gQV%Ct_luIOJRJf]pKa^[M8RUcCf,+>UIc"RShPqS)pqAH#9%Gu[qH?\b2ji76;?HER1L[:\/;WJHDWdO\6f&&
%Tc6MJTcpC#`HcnNl:FeVNau]K)O!(`^F*;8ndfI![sn]Z[P9;j;;hH^=j<+W.(`;CML.ZULtCHrfG[B3E&kD%$9VP"*,Ut`6ek^!
%]JjYD.>f88@-*u3LQ#7]b-)^M<\6^&>8Nun"cQ8i/A"bh"GB;/=U,4nH](k+!mbJdUERAZb><>5p(gGGaXeHWAs?S/+F%!>_&t?^
%=Ni&]a6fOfW@I<t]gRP:J=sp`UQWWp[A?$;)@Rt.Kmgag.9ZKe8tUb-"#+qfT#.5;K6g(%"pJf?g7t@W;o'^-WY5hskpg?O_jN"^
%gT[hVZ:@:Xcq/8[@'I]p8tr4L3smMO4#M>`ZNJG9bTZ7?ZZ\0Fml:tS1=JK=H61e#2?Z=IT`Y`q"0/`Df[bc=JWQA=P@p+e.SjS@
%i6T2-$-K!n\;#b2_LmQLhO"BYpNBN"WCs.3'J/2_ap@m@_+COmVA^Z4f[b$aL1$.+KgMPp)u,UL'K1a*:8OBi$rF)P2%E'1#='_a
%$UQ>f&[IaQ5u:]06&kL6D+OlBede,_)CRY+1f9)*d6usUDk[P^.mid2;A7=/5c%\^"b!eJW%HeVC=P(I(8L1D>fBDo<@n;J_+<EJ
%dAO.(!pe3$<RT;On6Tco_0"O%_>`1S'-nV.ZtSc.U8u:ieVn3C@)8RP6c%F*7)AVqJ_D^4(pHH8Wj*6R<E3PEMB!%n.+fZ3W30<M
%L6$#;B[N2g?tT!g1auThL,SQKMUBfi.(J=s:fbchdCa-10`"O$d+%,."&?\)XGJj]V>VWQ)mCsDQ2tJ4OsUO-$k3oY]hL=Z>6_0N
%$^dTaZ%3[-K0YE''2=p+0;5Uq9f-W`Qc,*I#Y"HaM<:h7hF]`+97lGh-<N*]J47:E]SRt0Z=bhWZE7V]jYTib,VBBPJspB0,^Tic
%NZ'>B^bjHOV.5pr=pCLc-4rd>#\p)JeP\%]=Z'#]2Q:$">/!%R_:7`uL9kWhUh?d(bo83BV.]r_R^=B7LR_'qC!<?\@X2,+`sZS3
%TIk[P2C\EX</ln=RQ!bFTXmG]/6\LNNo=c]-CX)i!<\cIBFC3Mb6AOY1i"(>5ZNI#6!05gD?;M1lPQ'uRqQjpiGCUh@o0$r&YbX]
%;Uc6L<oES:UmB>pk>*7WB8m_Wn9,T9aYktboKB./-)/(]-27W9amCK=p(HL.ii5O_LGmXS@UK]o`Y[E<;4H!oL,AspS=hpQ*=[@]
%=`I$4]Fta.%?'4Hlp(Y!R'.V6/^Ia&70dKV9gnk!%'0gG3WQ6`fo7J;\#S6ERL3%&m:]US?\g>apC(:3d9X*moegCo!B[M^3Wto[
%C%^6.E,huk?9k`P/i4QM!_X&k`&l>M?PZAO_m16SUP0qf9mmL<1oLG4']!HLZNS/-U#/*s=rFL`"B;(4YSF7Pg=,bf!fM2p;$?u8
%SA!(0jT!a;L?mbYcjkd8g<We])Qg.d_g`I@*b],/,3]fqdAR8Y]'X1\1[l7`+.*NpTU1*`[Xt3p>#%EuX-%lq?X5'^TOiW=MU^Dj
%e.D5HaU5jc/#p,;0a=qi^_mf$SCtSb09p[U"AZ$3)a,VZd$1#'#me)_1_m!FgVqpflR0R+3#!tmj`D!j8.K-J8"k"#@;;fZCI%PR
%:qSHl!jL.j'Cc?-QF`?#OkNAXfsrq)m=rHM$>u+D4#]"D:fH^1Lr#6+95S(=;L":^>[n][)o\UumSJ;9?UHW,WRQqdlGXZ&:iKt-
%&=Rk#nGs5h4!\pJ:;D)b%ur`uaI3SkV0NjoRHT>5Feau`-:ZHWn9,MK'J#jJd/lfJ15r];_0NG]JZoD#@!H'B_.Z>+.cB`d<\WAO
%r-8Q/1=cee[q>b\KJ8p<3uV)V8(@sDQ<>#Z"F!(PTY?#rhKK/FD7"oYqGUG-[G^!\q.[40E,QnF+r#XPT^B<2/Y-;l5`>cl!CE<u
%XE8YXRDVD(%Q#Eb$)(`MW2`TL#mD_-AZ0b\*lC(R4+e4a\dJq68GP6"<)IaFi07Ks]@_Z=hn,$&5crb6YhP+&<&#WAJmY-&eBK7`
%h9]C#%^[M+U[/R,EFY6hAid`3<q4,m7X]3k:Sg[a0!ka+$f<R.$)'/=()/?E?"f(B&qY9-9qLQ$cn>EM*%rlH.g^:F$C2BQU\9*t
%aoSY[?#<$j8X([f5_F[n'96+Z/i5Q&IVi9)LaZpeFTVqe7:Tfe>d?E;n8=A;FeFj!=0&58aRH.\1%(%1:>ePGl"7?p['aS!dIB<6
%^nRF9"()Lb?0%:U2YjFR[B^j]f;(172XoX]$n8;l@`\#':p=#cV@sDO#$:tkFedoSVcKfG<;hC['O>C:lm6W)"bg=n/]7sp't&7N
%WT<QC9&>pRW_67TK=iEPK1"./]Od6f<(SEkFu1X:%`3R!<MuM(#*3B7:f=t1dFg/%?4Oj&"FZ)&@.Z2eb2q#$c@`8.#rcQBk79-P
%-lcYhR0WnpVlKUK[\<5kbF3RKT&7`,[m5(edCo_/hkKC&6R+3[2DC`2KBU9-F(GLn'!EJn<X.?J^dB5!10THfL4:]p:hYW-1g]^J
%Pd'2M-kKP+4skH08ET/%`>KB:VMjYqIs.LD-Gi\0(W@GJ3j7B3-+Mo7m9#Xa(KLIp3_7N&UV9Xuf*:V5);JQZXt@@CTaP$*qCIR+
%hZe\i#=hsUqUGYartj':!):a+KnhpVCnLq70-#.B$W)KD.0OBYED6PQQuAomdUh^j4O6P]`L;7+0N'3MQmpC^B-cI>GaF[!ak?`,
%ieUVNY.dl5!]!1J<1-?Tj&(+>"fV$k!TKJXK!OP[TP-G62"N,B)>dJ`LuoB]\V=_kL(R6,dO4heJp9hbYh'H>R$'u?>'L_r'/e8H
%)/38.C,1RulSWOR`9:Z\@_@.E*fm1t9h=">&?Z^\_"*^i)i"<GU.'c4e7fR`9+KP:]Q+#&*#]]S?0IBg$<)$^6Z46oqZ.7c=P,;3
%lm`@'XtYalg'K>nMI%*P1<YE$ObS"O&PDMs!;6;Df+75[';=?qcR:jZ!fE]?#Sh2P"]kS\d7cX+!aAhK/<pu)1ChYuL[#QdJFZ-`
%iic`LqZ,d$K/tHN@)Dd_NuNWV`?HO+L]fhBe4.g-U\:XnTQurH]nPh0.e*a"689Z3Tl.^!?'LWZ[;Gsj9G6Pa`LJc00)u-EI@e2R
%BgZ/8_3%%(dXak5)57R@WWcBJMRT=BC>7:cJVIoBL_3?2Zl3,5XQ!<La_82<@8db$ae8Tr&C6M*@]4G+J/J4t=:t,0WShD`[O5N9
%@2-f?,5m$RKdP--O/t^&5[Xk1UgY"lILTNGOaq40Va(Y>jucT2FeQkF%ZUfS3fb,X*tPd!Y2b/ZW$<XeE#5pB3&L+P#!ES(O)IJI
%Moh[l%eJ:e([19UIkA.)[7f:qRRl<)TUCZiE<5IJ,hOMs'SF.&FBZo(e%,q['nfoHNbj7g3^4!d7A[=f([>Bb/08[9.<@n78$a)H
%`*j1"#[?^Z#(\)L=jD=:\ILL`Zm)])Q1I@]7H"87_)K'I#8X<C9a]@+7Y>b>FJA3R%,PnpFb-BUCuI*FR9*B9)XL=K32Eite8gKs
%dg6Il1%?*iUQA$!UMbXmbu\K^$:0KX@tgY=]H(BL0p2gM2Zj]T3i\+6)_LD:O_8RGL+ZGWHX^o58ik=4`n\Wr:f-;t)[]fF-o'sa
%4'Kn)nr1I>6n;rlM'Us'X^LWYg_5P/^k0gB:JHQS'Y6QE@uXFX!mtUP"\4gFTX#hm6:'Xa]@-AB2gAc"-U]Y_f=TrK+Lqd[pZP@O
%(#m?[%s9tL$sc(#6r34\0Qd\Kr&`^Ee-`[Qa>*6Z[iGT+3d4?^R7%O"78lRN$q-Z8G<79q\C*FE/%)juDA[^TlK>uHe*R/6h"k(c
%?(bCUs%9a&"\TYM-3%p/7ccCb;"l(X7cj/2#7<Y+H0/9tpYlYs68*AD"92!&$O+joOTOV2DN)^gh$u9sABcu9M;R_fO"jO>oQJi[
%/&)4jF?@j6SaHe9Hr.j!<#\Vfh)jF&'_P[QXYO"e94dC%oV@gDed;UKLn=']N=G7NMXo!0g7:X.XGmTF5qOJr(=?_S"]Hog*-.sc
%C'SnC\%L1EJNK7ZZ:&]`%\fH'WbLM):ufts3[J,p(i9PV"7AR:X2*sKgX/-+-<X2e[QtdV.LS^l;d6JJ_fn/m]V$\(KShtEU:=`3
%Q?9V'.'O`;G2dV\*GDt8!E^UVI<AiZ6sTskgYE5!-)mbP&kIjsVkt+":b]#R.-;-:s&qLRQJH`F4O4tlJ(TsV(joF-deXe-)[?ET
%3.kW*;/!DMS\T^Acup'"n"[Ke<N;4^%OM[_]7$jR5$D-QQG0BaY321`CSlLD+&gV5grHNNh]sPuG.8A<''dMB2h#:ZA?m.DQ&Jb+
%'cOM!57)J=Nr)I\2f%t>m%tt&`N2I6j?9>=3aISV/Z,[^["O+d(0?](9^BqH)npuY4rhDsCDPCM8u:\T1FC+pmc1TqQnB%u)$_!9
%M'hlG/8N8T)UfXPc8(_?dr+I\Be,MiW2BF2oJ'_2BEq&HMOi+BCu@bnV:;k_?NEM"<LlL3Lhm,4'UsRX?('tMOOCB9m1'IHX!IUR
%O_oU.(ZD=(:kTPWAE#88Sf&\n^DBr^bL@g`K!t7K`t9eK#+Xrq;q%,oh%OP<2YFA4WV_R\P7hVC#PAC\WLJ%[!@anmm1V-0F^U*c
%aU[t8^?QN"cr%St[YeLSYMrRs+0L9c!n8r@K'Yf>_i7AJe*f(R:1`In1-/$(0=lgGf@k/8L3Hrth*RmmOA^-^kh^t!ouD^QUR4l:
%CUoI%ha^1ls!?H02/lU\$($]GSAW;r1St?5k4;7mb`mN@A*V5PLXVX%5p?f>%Z5%;#^rE;qj8FAqfBik,*'1[eJfi&n_)0#)brOV
%a7'8XBK'_KZq-*`66W)tkhOg=QRCLXS?Y`PnUBI)NFs:H+!rVhZu%nCAQjJ^M6\9k4Kq]:rDLS2\8(>>3FG@/.9pEgI9>?j.6EV]
%b^Hh_I\'Fn(Pl":6;O1=Vg0ManGU#]Bf_g('_;4f:+=Ke$$@Obcp0olbqp1ZL?A4Kh[i.gg1qse/eg%R<O^T/Vl)(('hG"n]``s5
%ZuU1XB`S]!8a1SlceM\Y]uC\"H8h_("C6X8C20W@0rDC'2)m"XFr?S6+_%l\qLp6F^9%T0-.J6R6!#KUDl^]Z.30^JOB=hdbr#2H
%VLCb/+`.n[d;L3$Fc[563kf<fek;t/hskS=[<'^YMjW321hnb=[UpEeR8>tX.RhW&3"(-1g-@a?Kp'UgA_jo*U6MB78R\4ARiVkC
%5_c?P0rh:)KRL/AY?r5p,jJ!oi(kf9Fetli[nrN\BA2eqApW%dBq/mXTk":o.1;1gP_S0a&So$UllK1uBiPp@2D[iL14#d[&&?Z[
%RU90kZPVo<;Bapmch+d2pQ\kOQ'M^HhJo8(c+[*Helh50#4HoQbA`X.qisXq82:&NV>1(Ueh),(dM5k4$g]O2/mB-<DaDW=#@XIU
%9NW_]Hl!^/(o]EpZnA+Qe0#OLNWokC7o1p<UmPgsY?35s^+6nBAa"7?NJ6rsG_XT,=QpK!N.M(3>*c]fF@6m:RNj>BhLUnb<r+FI
%M^YC&['"Jc/k37*dZ):>8SELFpG1ui;TqbZk_63__V+&31JtmN?RS5e=%Xg<RBh2'6Hf37GKl_5dM:)#a_>jjcja1C]>1R=Zr0*>
%c1Hibd#9rUeoc#t8kTP'J"q^`FkZ.r:CAI[W0K\<C8KNC],Y9.SgZ$jXgG7[?<>3OBFU7](>`6RI0R&_=(VfsPa,QfnA:]ODPlb,
%]?n,aHUg&>G6'PWH]bePaJAA*m$,TT4qjR@H*APtQX6-g1j&'e`t_$4lb+1<Mj$VOBtI6&dI)=$oQ-g!q]#B!QC_%MER8q6W1I9a
%OcQ]8Vc5%i)0JqX:Fe;"=0?3:-IfSdLb`@3h-iZDQt^b.M5`W^WiJl]m7(G_'4Y3`j#B9YF^jXkKt>967Ook!,q@W2))WI&,"NS=
%k63+qO5\CI;Z8g0BAugIP(4!q9tL,;Tp%s?W,X<K?WY?XK+ebW^U(R#D8kE@_nQuNge_*.1ktE=ql`A!RS@p!1[:K]eD2FJVON>t
%CI0,W)J#iX8MPqTYkBK;iHjR`\fP!8>`Tk)-_lp++/.uY`mic^+"FQ8_u&&6'<9d"0m0WlU'[>em-R2K?F5GC3m?t@@@TU[/CdD5
%4C?u$;;<FQOa&9,-hJGM,=BR5V0%PIPSKp&MR9aWb+"=[FA2!X/1/8YHD^%O*)g4IW+nDo$JYsT#p4l,[sC[2Zp2s\DRpLp=C%Q>
%P:2QkFGR<)_KeiB9ped;T4jQn&*\5C2/m;cQsPo&HpV+#.!9B=k]Q2nf7%d?jR*[rT;FC?.A[RpVHo`WKW`9nn)$FU$kQ<DJR1SM
%gD>=Qnu51rK7qt;3*n,4mZWa6$OJ\1<$Rl"6>`W9Q3^84UI7f3KV9]fe4`8n!@+:]K%%p^$#Mb-c+]kH3YH1.%o!*<6fae<kBP*#
%'%8bme\J%B9/8PK[@.LQ0u]IN4iJ:EEi^P9]S+;i`iqO]K!)8OT.m>_IapW\QO%NiHMHo#g_IRn"&H.VmY4\uo\mH%Aj`5AO678S
%R;"`C849@D0#b33gm/U2X42rs8gl''@jjWG*muHc3%Ru1],KrY\JbKL$X9kr!_fcY5S$atd"&E&I$\m'aKtlamsU\L6#*hH)U*s,
%DMgoILc>+/4tLn2O`<X_/KGfK-R!TQ0[E(p)JE2,drDrGM9$@r#1Z/;pRKLGdW(Z&W5+d\_59FU87E26j:#*.kVuKNMM1$WEK6,S
%Nh/Y5c0(4>9!Z_EQ)@+hE\Jiep(e+9jM9$oEs53n*99]@4IlR@M2Jg-#*7&o"&4X;$*)%A&i@G2LSQruWJa9:lO:CTYrKpdaB=+]
%64U:IGUqio>Y:oqj%U_A4d@F&U2kk9LgZrg:lZSD.VEpa1cEIF9iNljMs(I]">eGR:l]]GWZeb_)8/k(U@qR'XYF!=Di'-X,9o=O
%gM,k0"r]<[^A"6lo8b&tiSZNRd.)E"N?jK<Vt!u<N&`uJ@>86JD%0W<%Irm4m$tuJKlW"_$;\#=b$jltjUcd5U4&rupdF"*3HQ?b
%8/Fga5LFOK^@NYN!X'\hi2K6V&:LTWQ6i1ff`u'pK:2#6W@n!6(h';CTRb$n?"_\j5\FGoFQOEg7<e-nWc31Z^Zec2Gt=l<ObC<r
%9@r2,lC)Bfmdo)NJY,@`@d8-T6TW-5&\&cX;[&$@V.2Kj8`TH\n[oJo/+hl#rOUgY18;1)$+baiMQQM7%UONI&468@M:)j,YNtga
%T+TE(=/VO+5U<[BpM4V9.1r'e6&;])6-nMoVicr^CcfR0<"Cfd15;oM%=m"0b_4[O1orL,0;jTfIBnNaVGmfr#XaS#nn^r")Vl=L
%B4Q$#6*i;Z2n">5&j4^[h2pXKE(d:*^0*e7[iSHS1JXlsReB-C?&NE!F@)VY@Q)**A*Sf9#&u$?Na*#':MAi_s/?,kohm38KpOJP
%UcjqRGu#`V*[>;6fqWCP5ELk)W;h<22QV-"#3Uh]gUEqjk+rL"J,d^\/ed^N(R2]/YM4QcWU9?X%>ko[L*9n"D9(p[0Vt,EAa)4(
%s0-&3h8gb7Xg&/X_(Ock_6`O4DT_;KPAOMog1[7HWfb.[?QhX_i;b?2@a1N.ln*%2'%3Dn5O8q>#nr@dXM-ftNT/]C3[lkBej9WY
%egkP8XM9iGWg!Ftmnm<eUd!aFa:4L1YWoK:@(#oQX?1l/(ukA@q\q+_S9V-e:^G[WZHnO+Zc^<0;j7iBT_sgPX.`k9%G:@ZKl[&_
%nZC2_(<=n\l@_grPr4'B?cWp-Ud+Brck\igm.-O>p;6KBRm"mkeb(f.dLY7;595pU%LuLh8G0AT\0fl)'l!Etcd0(EXXeJUn+s3R
%djGYMjY@?p2-lQX8eaZc@PpR`q&L$(dZ/#C\J,0KU1dZ=l[Yd)kM]BPfQIP9_u2cNm(:'c<jBha4!2&olpi(MroILY>=.O[?@Es4
%[W8;j2F3kP4m_&(ro^CLp\&&;,0]Ok5AqL*URQK#03pa*3hcMKLV>p!S$dbEZ893WP1lsr9fbDHH3h/;B1gr-:AWUELX=YJ5:D3U
%TXf6-c9N_#pEeUm:/Rc3I##5GG([L\p9ZuT@=]Psq`-5Sf2Ul*QT%qpf*lmb/eL49lKLJ9Cr10sEM!;ap%H#m:Z9<MXA,:(e,r%&
%hSZ>:n5DT8<S5-*34us'>G.IZ;q]2Fhk3LfHg`\209:Gk\.s=7EgR,e?'Q8I#3f,Sk^QpLQ2u%A_BHX1;PmVmmlc^]Cq2/s@;6T>
%bLYp?,]GoHej-8<F>.XS+!BIt+P6_.*$_0hdFd%o_W;ft.\>`XHgt#0;$eC1Cj#]7:[d42*%?EH]%l+Mji^!bWT%1_iX9b1*K/7p
%dK1@R"OMUFUWkYFlmgsW!5EYhZ3U.aLl9fMg9;AH[2ZLbni_;UT:pMQ,ik\P*sSD$DEho4@embl:Ch717G),)q^(ldCkdgC[6[es
%(ZeWb!hlnqAu:NqmT3gLX]\8Wit5FqLY^'-MX)asLpTU%p)=l49_r/.>^^?Z>>$%+32s:pjulY=K%TU22fC:$dL$7P\r-qJ7@YlA
%@P%12kU6Iq5#gV,BgX3S0mh\d,J?2BS$%*Q0mprQ+h3MahEc_#B3W>g23kb9a8A?[2dbju15-s`1MYY[2TqZ26;26g[H32adrRS:
%P`8!V1ksXFgaX;OZe&AIl0*O+>-@Hkl-=(Kp;02Qi98E-onb3\C04]%-e=TkCLQ]YSJgimB86<_R:2YV)32KgK-0$qE3u5Sfct*P
%?d!fC-0i^s;AJcqRi.5,1P5jRB$g(8(gRWt%&]kg_9$_0oMJ<k2uGHnQKjU[A7BX!R2KfW1W+u21FRk!X?=[A:iOFu?n@i$^.keN
%;'PBF4nDGgK3`G.f0XH)Ri+sQ1HX`JK_4$sBjA;)c4&1Ub\3E3(esN6.s!qlMdUr9N\N?Ef%25:[@+EE0C5;-Yp\_&))g8+_pglV
%rEWaiSj1Y]m@lC`k$`VAbg"?CQnpOemO&3#fut#Z33tNWB3*p_[rn8J/j:#oXPV-9OJCaXcF#SZg1Fs(MKi1YF87DUeRs'-4\;=[
%1W+f.1P?7_CgW+Tet+.Z`0oFs:K$JLRFQH,T4RDL'.2S(mIN/aZ/a$GJtGqCf$(;)-cu9F1[LlL7Q[r5m<*[`$FuZDWKbWn?@-1S
%=-AJ/HtIQ)dfYQU1YV"LpYm^1M/CSO?=+\L4u<!'cE+/NM!eS]G,u_;[N`n1/F.(g/&_?WG%8D5@"=bMS`f:\BmXH8bk!r%WTT:p
%L[i#`j/@7\$_*KGb,Rld.s"3]^1EZL1_F?.cT<f8>JA9rgro*l(Lm!1M]h/-"?!VOiLC_?`f@SO/%_EJN!.46[VVNb>L@&+XW;[=
%S#=CP%5V3-SjF8A<o:;,lT/"dK4/BD4B"1>jrH;FW:Ra(Z"*1A]'Pt1UH?fmE4i3oCX?Y>biWW>+[kS?m$q_a`c/[KZYf)#EjqFh
%1[foGqtJBPff`=N*1bbF(!>cX@bWq(O::L"SpARtm$cOAgn;o-DWSCMR@Wq#&+?m5-]`-3aW7We1L%:`NEtl:5k`!]Q*i-agM:Eu
%4BFJMc#\$hT[]AmCKH\od*1e/Q.u-YCrb7p,aL6mD;KTH"91H$]jLhclb_SX0XEfaA`8I&R2tlg\?Yk&da0oHj:T%ZYj:9+I%jFU
%U\7@EbBMi3EM61[/0V\%,UDlPFWmUBSAb'b+2"N5=8p[kN`I4T)i=hklsugNCQQqY/FT?eM3>1g-nV5gZ#HI*EU-]EP@WIC\bB,#
%ZjEK(?l]tbr2:)[7=-Wr(;Uri"k#6]@js#&Paeel_S[8IgFLF;:-JG9QI,'Pb&lrb@7%5#0B+E+pR)?TpUX&]gYU7#aSTp%1)fGt
%#5QHkLRfGL6n^G1,ntM+nT&C!r`7hQACQoa^aU0#`u2RG+!i>"Fq\!1m>Kr@(GQdQZ\6*qDomslS%9F8B%U*0e:'4Bb?joL7F2k+
%<eO@5G=HR(E:cWT=L^5C(^R.$XhULm[;Au7iA(,+f=nn#8u2lFf8dO6#i4mLG!c=*CV^PFRV/ch:SWlP""&](Dm@TQ4/I+>+e.8q
%%)\(R2Yu`J3-3Mb7S;E1[ONkQ]i&$(::(,6BB`#HV0#Y[[.N`W9M:iW-14;3Qlp62,M%b%Cej-#127j@'u=O^PgZ&7nYKsqDE+>u
%\I_7r>?Uap?+9T][Fkq=roc,K-^;A/Gg+g*"pVt#*Fg1Y=JgKI@Vbd%:e)SbK2TdtZ12uT!Xm0U`>l/U4HK__>F^PA['qO^Ab+H\
%Vpb7s67I(uTsX?[kf-PfIi,"LBk&ZjrZ,mpqpVOf^+L[LOdFF3NZRmJ-RQ^`['?N=YaZu52+`#Z$+6D8V.5P4/XrYWjj0S=0PZhD
%W#]nn(Q+ma4OhsCi5=ke%-p!.%YbEDVVYET\f!,Ra%6)b4VYjNACMAKp0/\_p!TC#9^V02p1&\"0,I!5fG'f"!fcFIlKQkh`j,HD
%:g5KXYil./K'g3N'Bh!@qYQKeS+PC/0JdJ2ioA!5qGd:++Em\0V\E%Dh\1?`8hV4Wg>iQ_]1^sM7^RSaNJc>(.;WP<BX\08)t0n@
%Xgj>D&rrFb7Upbm`LG;2ASb,Q0J2!qPgA\A)lt%3TL-[&3%+Ng7=l-Z4UR0!ee1)na9i\;(u=Xj6q3A!ogq)@dLF<6amhKefG/+d
%Z@eof')LB7QH++-J<berQ/RE6%Oco4.pY*SoQb[6A;X=nA<[KO6LRn*V="9WME.NR-?3D]_bq*bKfO(<pr^5'02efqKgBX1EF]c!
%TnID*-c]i\Pa$Y6]'D*(Q5`Z`-F"X4l^6)"=s]9!+:XJJRZSif8uWTQ+Q%6pd*8BWEsLI0]8q6_'mN_:CIhJ&N]j8j,@nGf7`WZL
%?#D(m@bERR;c?u;N=7`U(063LTrlo@I6qes@QqH(KTM@682J6M2j.#Yb=IK6[b?BuZtGgkdh(4dYALC5.Oh-iJ7n%-/MXVlLbR1k
%DJhF668p6GrpfRVP`BIt^-Fs<><fDN7Xd@<36l2G1G[Dm@71uT^YepF2PJ+.;RRI6,SDld8s#]5\q,:$"Laa=rU@F/]=a>Y,(r$N
%C_=XWg.#<GQu8FKMG#@fB0N6JCU.HBKl6NMC+&Ma%3JIhaQXPu2mPL'Q9;$f-tr\qgt'6pb4N[;9;U-#]^SWs7UJ>2qM(!/CTM]f
%V8Ue"]o8CE,*g6h&Aj2=ItHZ2T@'-Hop?eJ)j&Ii4u>t1Q7&S!Eg'@>rCQGh;`hWE\4Xsid6Q/9*P/,u6=XcNJ_"sqqg4k?Hn'RD
%9=(_Hr>\_$o5jVSQQ/?Lrr)"'7*N"`[t;EG9C=27]nQe".5f\0eWHC83>"e@-_[Y?mj2DuaIc:Ur?HWm/,3)\6oT,HM5W"Ma/q:'
%R:=m`98FeAGbZ==Bjp<]..lcW)BD.+/<O=m*Q'Wn7dGMZ%q8)a_6])Z"B**18R4EOG/.m96YL7#fg==\+&]D)SjJ?/d4p(&+cP[%
%pGiP.NfgYq__nR+3tS7<-AV@f&Ghl'IV3>Fb@K5g3Hs7)d"`UhWuI^g[Orr8c%OeTF\qe/ob;D]YUdcDhQ36SDhSR+9^Rha3OXo%
%2&f?<)qi[qC,VZVD"^Z'nbt_]b0d^:24&]`,[Zm:^!D?1%m.4re<Ee@QYSqD)kWX)32<W&:X1&N:u=VfH\fZ1Ag7l)K+5m>]ia8Z
%.(dtT'WQGF]J#M%l"M$cfQg<-o8]dlVgEdd\r>m54\\:'f78@Cd)%`V6J2j<:tK1QAf8:Cj45!@lh#l,rfs'GW>Uc1K4F,Z*Z[lk
%XeIjl7X7Ht$&)r31MX)L6(_f(O>kZWQ'ea1UDfJ.As&%@&oNQ*LoG`2Sb4aQhDi);1":?-be+6>h@3sa:[#dpN+r6HBt(WG$/Q<p
%1&>K9_*P\=%@/QjEHE9?DoPakm@[oj$t4S)V9Z='=fA4/#gSLohl"tkj,`WLQdCZWqU8YO.'4,enb>?A%3Qso_urMDG9dfFTJ+5!
%rlE2'l$CG2f-VNl[u9pC&o)XL=RMj?4%%^La0;j!YQ&kP8[;6oaqsb+75W\u\`lkW0OhVu]XcAuH(/icmrB&rG)j#TW@=NRBZOlG
%TQ8^OE`>@l9aRKU?KuH*XVkRr8RXf\V?B783<dli1T)MjmUC=Q%Q!4UM!<H\3N&1e.!]tDje8/?;d\T8]^#D1L)uk0FR&[hSt%K2
%7NZupK[B^IIoq[hTidiXUihpiRIH1%aQlnZTDL'=BDl?;lB(&hlkbI/*k852+YF0nL/W>';cH(SrLjR9[Wc$A#(<A%i[4;\b7-$H
%Ta,3[q7&@VW%C<)-DmOUK#$CG-.1]hWGiZ*8Ufu^mGUB2OeIULIF`M%VEe.78QjQFP!Ag;YEV.jq.k5"--W?cWDeP\T]#'ih&5]q
%&ffs^F7hTj+Wi9ode42[,Y)]ABhITWnj@$@bE;erKFRW2EX@7ZN9W\V>H#_CW]PL`rPn`O5):dE2Z^3P_=`n;0.].gbn&9(9\]!*
%j5Zul8LNfg26$*?<?qV?("R'qLCj*RRV6D-bYns.!uGhDRhQ($qjOLUd,0a_?Q]i(mfpiCIe:@NS$VWT%gS9NJe[l*atGhn[=c&a
%.BE$:OR#.]#$9+Z/hI7Q*-c:9gYQ/rl!6qJlNZ%9CoE;<CA'DHMtu-'iIr+fV*l[=oFamm?[\Pd+nrHDfmV48FO98P$n>IW+MU_m
%/Z&S'7C8=gU*oR@>-WkeImh4ql\^]9SZDY:Lb>>Gg:*ad8D[!GL((pkAV\/;iZ=S*O@kjbEc<Z(B;"mJHS#l\6O/amrCc?C1W)-;
%n:UR\G^31\W,%1%mA<Gk_G_jKe!h6p.o?SYL=#u"@c>[e\pCac%bDAdYSDU^j6\g/ljcr.jZ2IoEFgR7V&rJ`qs8f[#r/j<3SIMP
%Xh%F)RRfl(F+-T&N[+-kMlFA.r:84YLCN!fCe2o@P,+2g_V.3E3rtIKP=<jlPdu4h_@uace&p.`8?t[dL:V@K35kJ<P2*WjKr"A$
%WGBSE"`P.?)A9%&E9<Q:,\7M8'pQ-3$MB/[JJb-ITd$"6A[*;\/]U<&,)[7`KN-nj/J>KV5U6C/UXu9ib7(EEF7S;kX_e<llN2i:
%En[-_lN=(0BapIOln\2&FD'c97^Y0,C$$DVm"7A>D:\17i,M\fG*%[(0AgX9n[Wl2$>fi3pF\BPPdb?4@R,k"f5)%BDE8&kh&C_'
%Hosj;2?#%KL/a9?`N^BS4a`T8_F<20C]9XBeoOEp&UAD)L0pY"RhZ_eH?!!1WIVi'X!W/cEG7p"C9SfOj>'ffp"e;d1&S>"^9"a$
%QS%d_]DVd77_a.d/i7Iab.!=YeH2RJFK:^*f*DP[cM'F+..s]=fhOBOS'8ZsI4G1Z/>9e.[O9(c>XEkXD@2&ci7n\2`*L"=Q;4Ac
%T(^Fpa4%cEA\m]QmY"/?SlD6HQ5S7UE]gg\fJTO#BhI_]?)d0$5G%/.8=q'g-EW/C&5A/WO6!-26&P$fC:sMgP;(Sj;5uLMj)AR3
%57W6\aC@0S9N5TA>J%cfHj">c[Fd]+fiDNR;_f+%AbHC<W9jH&'Dgs$<+Hsl7Xarjo]8S/MTc[Lcp#T9iRh?=-^)aio2X2r`+f@K
%P5cqp]()sM`)K?r+&""QqAT$/:@94NUsbA-Y@Cc"`lK%=NZ:^b!)?9&^J/;#$mpBs(ZC]"&<rjMGc$UU.2(njp(*(oS!Kp^N#ZDT
%/>p-=gLF"?<"2G+iD/M,&*IY&j_+\K!/skP5k\\0<$hccp+^W]GBhZE;[fhNE3X3Yn6j?\;jn?n<2K:L$(DuH7*)>*U^#@&!LN=%
%d4\i7M.Ag<Mn6K7htW\!;pO*;'\P-Sd!dB%A]^WnVgh2YQoUDkD97=(VfI+`Ml(JSPn2qGZI1Jg@2D7EqH<T3B0MX=4a4PGE!E]X
%cCiU8G@0o8-USL_\'KL[@)I.o],M4JYC)#Q_'$OQKaupRUJP<%bEpi3C7)t0CTDq104YDfA/fj-\Qr7iFN);!R$oI60_reP]SNI=
%SI&,("QfG.j6#^;p@!1M>@Iq<11gr+m_]l@#IHTY`k5?iHl-$kr?Ha`;2ujt@16n;RUt!n1Hl+PS`W93bL=jG&)/57:WZh=hQGlN
%:e"pAqF;oG7lLS\A34+sq[`ssZ)^Y;j'+%n56Rshq-rEe`b2-D5P9BU->maO^SBo*'TCmog!q(@:\gc;*D(jVqkA@_r8Gr3N_FEp
%g!3W5LAkR9>4i238<6Me6XT+p`r9b/r@:\?5.A>Rm%/]-$p>0M:s5XOM@1RfY7>ErKYB!Q`DiRp;L5BeV.tY&'^:[*Y+JRr%$"G;
%NEJp<22%ra12&u^-f8JbEH;G'hml-SWa)KTU)&X@TM)W?M(U3Z$8aBP;@3[SWk+iP*@7Xf.%[:b0=k76dR(^34$geO?#tj)kh2.-
%ace+qnUtP([jqrn:esM2e?shF5/tr-X,;KUe97/_C8R4RU-^<U1PYX+@YZ@F6G!_k:l[A,l,YKX;PB\><9Oh^gug@*?KO%ToA;mV
%d:Apr)7iWW%:(@g?S.LI?kuA_TaN1:d$_1ekX*BgJ"[Pf^<dKlN+GBn8j]6[,rMcXP1\G]=\a(4'Y(ePOq_1MI<u>Jh2d726$6=6
%FJ^TA\knP+>pp#</sIVN(J5mH$RM4gKp&e(67HBfdk3Pi^h55a"@j9>]WR'N/sKm:(OE0r0%-LNAb"0%P5ON1C#)o?XVqR!CThq"
%dKPdFksDkX)-Di>U#[6.d!P/&OX+3\M39KUA4[S0_P@QFVZ7;V?0JU)IM!u6-qTXUPa7_kP"b+,8Z6a)jM<`Q(+W\S3oPm&ks@tI
%FJ39:a@*IYU&4\oMfe2W=hJjM,[\.0/*_>E0O6*GLFe[#9Gb91`GSPfZYS8]n#5,Hcubs=qLCO@FJ5L)]$Pk2IRMn3VI9KVDn=:G
%l?AOR>ptQ"/sJ8Y$RMLqKp'sM9Ng_(Tm,"%qmt@8jQT"WBHj01f*1U.SjB/JB?K53$bb.TK*\,&ZpmED78OeH7,?-c[0p8a#9no6
%:m+1O-jcV#['$HbLnZNo=P"W,7\(u$UFqd_W><&tFs<$Zd'@i,LnlYfoO/NHYIdMk8mQ,7<tr3pKjO)tA'*5SSa3.=A5a9_C_]B"
%FeQWP;<1XlH:?Y="^=D-;-dkb4Y3Bi;tdV*BJdY0:3E8^\orn*l9`g>Y:6cW$Oq9:,-AFQ&m&B&*VF_]ValkO?0Ji%4sI>Ecn4O+
%Q<ISXZ^q^rDKVYh?;VtL(V3A]EY;^B(/7.941`dOh(slbl9^-:U.DL@oNYH>O^VPZ(A0biROpAK/;bG56>P*@/BPKMF'UpsQ?AnU
%\pB/hlU%5Bj&qsrTf)-1/c)PNUiiAXeF>*>lD[=^/sO:X(J<X($a"3bMe)-?O7eU]AQot\Xo3^%Y9rmd7f_5(pIseg^*Q09V_s2^
%gTC[b^h?Cb;>#_\OG^Mng3$TX/Z)]I$LOCH9!?O)AQfbYF&phjKSd"'dCI^E^ehCBaUMptd.D6lBU]=hU/XNa'DdZga3f\Lh"?]P
%p/aZN[[ds=*YiB`kf#0br%o""9k`XmF/C/0Ra?]Yh@nG?jb3=8G,Fl=qe)44eM+:]Z6$;lX$V&SaWj8s>"Wo;N2X4=R]FmL9pa4H
%HTQiO10>f$J&M=4eD+AkR)5*QrV)+J9W9I,@NZ>!Y%1%=AO>bl9?:]Lc21*YBM(bq4h`a`Y%K"l25PWN4^qh5qM]7^,K;X<FXYd4
%lu#M?cHZtfH_bXNbI^CR&q:n<Msi'lhbUW"3lc@*7'lm;;JN3SZ.Uip&b`3a97%kXVT#?`6\t'2CQ9i=WTdcHHV^RpZAa&)KUO4.
%N:E:HnYff*9O.t!/!*S;C)VC%$+4-$:*:^%mjmZ1$$GX6o3Fg[s-OZ_TRN-*b/?][,"5&]]R9C+d&\00,ukAqZK`/](:n^V.]+E5
%+k5_"#l;/?XK'<la]\08X"Hq0gUKBBmVV0I`,pKaP-)loK^cd;9[n;d)^V@8O<3/YP],)8'n)C8g+&$o;Hf]6H%hMh-GW^dC1>gr
%[.B`/D\<Bd^2p7IYb"TVmpE-:W!o5gRBi\c6DnjN#pJ,B?9O*f"eq+;ZFpZZAC`Spl+RVU[n7scn8,F*<S!5X&M04=cb#frW8^Sr
%7B!25#")9<VS30JWg[VQZjNcOnfj>668r-YP`[uKN+'K:nPr:4*Uf>LM5]eEOXl@K_'ukh"hFtC%*R;a%:ur#\n2Pn[[=XL<@,/.
%,!;U'q*SRCU"BtdICq.$D?(([]SUgJ]TDuf9*m&Lf.Ltf!e2qIXefs$;B9#N\HCJb_-;CB15?0iX207#]i[BOVV=2<lOHM+K\i5S
%SZ#.D-F>jZ1$o=20mlG/P9ESe:fi1g?,j72`:fgsfZB&"9!:T.2as;oVJ\4"dEdYmIF+'"G4=]N.^$K?*Hb19e!,k*<$O8oG+>W,
%C-ou(2^DZrBQg"8-oQflo/ZGUA*R6;W7k"R$fHcHPtP.XY,quq3iXC:.378K.did&Gg_HgS;INkeCN5B&Pod7(5MNuV`8ZkdfM:L
%mH6#]S5Lq(AXd1C>i)3EPQA&8XcdZiCR*>K4EJ+Sh-#"P2kjn8O$6A(R)r?p4/))sdr-M,A%&Z"Bg>nOl[@R8-]]_=k<m[qX6t7,
%>7%cprXD$`Ql`lMCK-kuKL1D`dUK3Tqb1-C*kf*WU5Q0(:E/Kf3d0q-b%LF.RpANedlsW6/r:laR?fO*f%#O@b<D`i=b.Z)m?)38
%l"^m-F@@B,X'#EXHLi%E<3cmBe<V3nX"g0JAjo0<Ts.PaMs#+Mc/l*=Db0(bXqLZLOq]*m_fo:*9uPOB6u*-f$k<MLc&<655Da-h
%%803+Nf]jqLa!dVk,>_59O51Rl%l+'T-U6+Nl?6XB68A$CHe#:g;Qk9[)C>e)69fZ7Rt-KVbBe?qi4?-'BP`B&Noru%`.,&*7Odd
%9nXqZG=#otYLT$'W2BSdW&8KrC)j&r"d,]Y:KIZD@9"PG,W>4j_l"kJ_Vt(@j<Z'[;Hk1`ad"Sg>>jB;`"hT`QmUO.2Bet5Gu"aC
%MtMdepZ=k(D:A]8L8jEG4[W3Xbo:>J/,-?<$Hk;c-I)*\&o9RTTI/]6o\Cg!O='D4n9ANRU.N)cTGc+:3Ro10Bu/jSRmY^I9PMmd
%d.CroZldB1T&usu>)TA\JX-kqo4:3YW@^b#-Iar@]N>A.OFj@7F&XpOOX>bbnRusUKHBK^/Q?r^&Nr/"P,Y8J9;qg9,su&Km6mX^
%#8?s&1fp-i0W!r\N.d.[,Vc1iU>7)%FP#uMW%k*^%T5V[T:qZ3dRkj.C9mhV)''BfVSPs)lXB%8"C@/!:IrLN(eu<WO.)0YQLl*H
%02=0hd$kcWQqH)\KXqdaRPgdTIj[2pjZel`/*p($ampXY6KNQ*^V#62G11@kUS]tlhM`n8&=tn%j\5QA'3"WClat-ceNk*$KVK8M
%bZ/99$eM.)lm8s"=;.]F3>f--rX%&V7N"Qe_>W:N,VBaF$W-*3KXLoqC#T,Tj@ncGX>QaE)8gm`:)a8/0g/4q1DV;`k8-WW`&+@"
%[R2#lTbk>+/bIgt'N"(V;H&1]>>,WLH\s5B#g+LDP[IZMUKTJ&mhmu/SAr,\:m_[@*2k6TR,XE<a--c0Vt:s<Xs,M=;g5o67#N'c
%IH-EtE\H*u%c(YcLW8o(JZYRD$$YK3Ga"%ZgAGB/Ai\K:3EO/-Gs,6&T:$b(RP@5i25R&NeROT<2rmR;1M';5R-q2n8rUDtc,S8@
%qbXMfB\.,2WHjC6lFhUuC$FCGm:cOqgOCO=m;N%(Qeu']"!6[?P3^fpmB>8o[G?3lCR8tdOLnptgY1fTIG1S'I69p'D=i=-qZm%.
%Q[ek`^3%5?q80+A'/=PVGJ12sO+jtn"RfQ<V&'Vh$`+M99Wu^^b>[aF%M^_k,uAth>M9j=+>c<[(KmBlN%ZJf[!fqo]IK&"VR9`"
%GD,5;EoOYie*'1-LV)^@d>X=9aY(:6Krm^IQ8hX:ID#r0,uA\QS]eE_e-u.Cd@2"j6i*,I^jYq59PECX&>j<jE,L"hgZ154(rOCt
%b_S1<&Xsie5>L0camCH"m@e!\;:eeD8hl$iU:;dR=N.mbo[nFblan:9FLL[+-DdJjVf3j7KY!U8\C=^=67H1mDfS^jkp@&L0Dfru
%C-\1EUMV&9X4$$0"Dafpig:SBb,W0)XVC7pn=l+lb]#SGm,0;W"L\ct-;t%(rGac^;,]_K`*41[(U!`p`Hm5g#j.MAQ?,$4d:F_8
%G;FR"49*#2:2!l2LCIuc9Rban-ZhS-&I^`4`8`362Kpq;LfuTl=a;9]h[[A-R4-iJcRY\^\Ptmb?XD>ufgRs/Ma#1?[SL#,<Tr'.
%FiW"^%.pWF=Xbd"`,r"H0-R%YYnIKXCqU'__%V^.Vjtccf>1rBTt%6>(BGed5&1A-=VkApkN-5`$,simai7X[Qmm`*-^7jV`P6*9
%2P[#WG@@]4QrZ%m&RQf^Gegk,Tqm/Me"p;!+erPYJV4_H>s_SPOldT,M7fI:.89311YeiHEja$Qpf&D489`*/gto;p5kT(dP[dIH
%CApO$Of%9&qDOQN4KU9e-\U,d]pee!h^bD/#0>'k,>1At4rI(3S'fVk)[kcGYYCWsAHh-dAV-]u5^V6YZFh;q`kbksZ;aq.EI4He
%Q0$tX,R`E_$cfW6+gqE^&f+(LkFT-96@KK2V>#%MC4JL!7aR0?4K*+^''Mf43EYeqTsfIb;/:O#TNU"l+5LS4OLf'FZDEJYI2HR5
%KMfb9r>s,reLRM0)m=5\AU:UsF[clWP7^F8O>1TV?B`$(8m!M(r=Jg'0mo[EPgBj_@8bbfU"gf+$c=;/Pi0H1ki%o[(UF%RZZ`i^
%^:s]j-7+mEd1cB3]FX`_bS7PU0goaiaf!bJ.VA,5)kEZiLpna#MlAiqW\&oe,=bJ\c<:CqTI\DJ8MP@O0QL[M4lo#p4u&p5\SX/%
%d/"AQ1L2+m@>A&[!manps&qAB-\#eF&#kt9%;^N?pAq5BodVAdcr_^,_o-XG\'p6]+.,CB*m8q%VfKELd6bsk3i9VrBXf*?CWFp]
%%[;.!)Bjk4c>+.npla#5+&Welp/CQ`+!0&P[4MU7nI3N%]%'0f<WLklZ-BT+TG0e^e"b(!3EFdlFrhfLD2i*?8,\.iEAjMn%U)1c
%c0ZY=MgNPW:6!f]/>Ipf]PPKgaK/NKh:])q5dLl9Yd;bjS5<,a*/YjD'gnK"M^3G_WeeSp)7:,L_,R\aPE+"h=*b/\Kde^/-ri2n
%VR@?_28BuY0'P]+8]9nZ#f;qA//$ZsNhioBW4driV"dRnr@RHXRQAc!2MS?70\Li!g*T=0ff\!.M#<r%g.N!gdt'NVqo3@Z'AZf@
%@\P5_c!l"g1:5F"^*a12nFDnI2g_CO?1nnE0D;W.j4PfSpdY#<<7p@O%j<821#Gn"l\5&Qa0bMt3)q#\XL8^WS!I?.d,[nWGb*jB
%XR/-dhBe3)YXn#'(37C`>sV/^@F=<rKU<tFP7"##Sl^t7UZ@7^,H,YR`sZbhP4&5j(Ju1L*6%WAY-^O\qt?<p/IO5BcjCn5!&\\N
%r][7F'61etHt-<?BfcC(S`9.lhiV\(URZmoiP@Nt&r>jSEI=QqbO*C7JL_o6=)W2Y8N`\KH,U:(U]$p&mteQg-g8j&In(UO(^Qh=
%Jc%^0<S[1c+MlJ;1"TOu;AgI<.6Q%`Y/emo=H<q_i%7N@0`n;TS8&(DEc2=q!r]XW:W$'i+2MM6VdgF50HK%u'7T3und0(N<\QZ0
%OW3U"JpmSMr__D`rg*!'@d:^SZd?Zj-Ib9QIrUh8(i+`)Ma\,QA#3#eX!&e5[-[nTou'Zn=bsSA:WYNs8E$^MWu3s%\B$g$9PHK.
%9QOV8W6\/6582aG\[r^2/:BF]I?&>"/[,cb-6;36PN?'`lJAX\m!bAOd:S$b#oaA!A;>3prq1]2DR6>*441Urr>:[5K4GHg!`>HY
%=/RmeH;!o'n2D<8CP-GgoEJ3m]jrA6.%OClOrm7b?Ojd2p:7`WA*Rj\BZ6*QTdO&[,Dt:iq<0MLU[m3Dhk9$,7,760CJ*tP8Emjn
%OQSrK3S5@nVY-MeFO)F:As816G:5PbYf5,$:!q^sM;GSB6KpF>meM/r(=Qop0VGRbXb`t2?0Q^4oKL6oVEL6n;*r7r:-6L`:-HU=
%mbLY*>Ds.0db,U5,BohDp1([P/;3E*[$\;uP!Gbg#BN4$093[@fU3nXmL/H(92+`okq5AGMaQH:(bFaW6qO'5G"Lr](O'X0dbU_A
%e2st+;NDD1QZjTq[g$e#TgNW_c*`+/AVJLg:J!(Te@b7BEgNeG_JY8cIhZ8)fH[uSO/(;]ljM8c?S]e$$\=!UK8"+IoqEV)f*H3A
%98sKhpIHi!/k'Bp(FV"\2:)t6.fS&f'ikU<Cq[!99;IMI2,NVp<!)IUl*`*/oc.&YH<1s$_NLHVl'a5Xf?VN)g`CL\QVuO;#j(Bi
%KXs@p&gkb&QjGo8cH<n)6>[b8au-'(%!P<XfFXIjlBf@*h:^DI5MLY?SBt`P)>"P'TdZUQH$&1>iN5&CH4:rpf@kP5n#9Rga4-G+
%L51H9(/sMA'naM"g%Z0.\_KqSj!ZGp-(T&)H3tbI*3&`]Tl)&O@oH&MHf2FbATO-7@bQ^=0:*)Z1##fk*DB1H3N_`s0b3$p(W2$a
%Q3C_BQn[QGhQ;h^[%06ORPSOHB2&9qV1aNYA)S?Gg4\1gP4o;cBnuBEfr$`f.3,VCb?iEE+b[>^o+%NTS%iUYVXg,"`Gu8>2/A=X
%p(MZZmh#"*8>'+pe-R:nV?$.'8DmU.eRKeSp.=7uO\t]una8r@rOo_",h1*UieJ.6,kBL(`ne*-$Te+=$Y<,&RBe279IZ+[<i-LA
%8o?^6`,\s*S4J$Y:t]X!Np1-"N2mFX1%['E]p:F2*(oMRe%MG1qMnd-os.2'h2I)NG]\Yd:;asoCo6P^(/n9:/KpsGS5[tm/YfJf
%oR/N!G&`YLD&uM8m^pMHbj;!(ho(njD=aTl`mnQRVQLZAKUK,qA5%E^h=!+o?,;f)pi@bro7]`BWh8KC]2*-->og;*PTI<4bLs?1
%k]%%L2K>gX+g,Q$<O`W*i.OEH=&s/1%ZVtr[[N1U9:.1*,0.(WC84TAk7hY?L.?DR+e*S33CWkQ@qt<e8sh&scsl:`mG?tC2.*B[
%YU@r%E9\>`6\M7LKSk$0-hK["!&O0*&)#X>_O:,]J;NtbJpQ9i\t%tG7^rXNACQplUE3lXk8Ff*817A6b3i3f1K$3./:,N1!\]Ed
%(C1P+R,,E%B@qi8&mC;->cC"B$#T'Rb?U^V1cZR+!tqDndnt]"s!6+E9S/.BWn)!C<D$YG`EPAm@]D3YB_"fQZjPd"E>gY-o,2R6
%=%j2<H)jVs^/RdC%=7qT!`,T(U0WjWgK$I@/qFsG\p+eY+M<Z%!d))nd+1fU"t+`?js$V*F)@B#<Pfmm])Sct;aM`SL;^J4ofIUc
%;\$j,.;`dC;+?Z*c^;9V1jjDB*,6BjIf[`a:WolA^VTk:%T1jpiXj@Xhel=-pi5f9N&H\uWY\9.D:$ZJ@KE[Z;cI*+Z'L$&8B!mL
%@W[Ng=#\(COR2WpF;)/D!T\?$dtKatjE-X54VeZdc+2J'`=4#bV`?VjDaa`^(U8ljS2u4s[-lQ,)A5BK"WkFN.D):loK9+%dq^7K
%<'Zsc1:j`lS*tuoRc`lf4pcpqR-"Jef:dlOiMCuu0sh$c]q8bkN:H(N9dS#jD\GKa(:/-%?\kQ<m5<;Z(e4BG8ZAK3IJVdU/;5=Q
%FjS1i%iVf&bnGEoW@+J(.um*YFgo`(YF>W;=2#B/7u;_'6?/bE]5mRi$mBNP7c0(Nj@kV`ra);efln8U**!)/5[1X&c,hRkS&'E=
%B&WX:#Spt6P^n'sl3[/jEO<?`Aonq/SPGqNl"I1R1.$ki\OEQ$f<q"B&uIPU1Rt2\%7XRbb>J+PU^2.HnK4.niT,)S#_SQ`79kCQ
%fXcp(+,/,f1A\5@.JIcT>ahTb*=9.8>"W8U;n820]pK8.I5Q$<8tao\YR;=e-(a)?7,DO_m1;(AqCPEGPjZMV;"m7h#rD7lj"pR"
%eUu[-]K_Y-cV,eX)Un+5OjH!]BfZu$rYRZO?Z?<P+/bL;1UMHlc'1A`@S.HCZ;DD[Q@uhfE6tNMmPVhMTdC^apUSE0D)@<mQRAQ:
%"S!'rW-aG39KNjB3PD'3]>i'3lLic#MEb*7/+uO.oNE+hcY)FE(m\f*CoKp-:0i?l3qY('pFu!<Pj0cXi>"Z1/im`[as0$G\?)#7
%5[4L,ke:?u`Y*UsMZ$MPiqF9g="g*XB$.GP9MHNC:FOp&TN.O1Pg[l2cF=on$k8'G*6.Z9Slbq;N#b$VeoO8bSe>^b=4BebVR,Rj
%[mEd5qu5j;W'Jm=V#K2%;qou(``HEjZJY#'i9Z'-6Y=@CrGAKB<8@3,K"rS/&mjb1+8D\/V2F<[h<g@[4B_&fU4q\h#osk>a=rE)
%6WGa]2i&N7UHMo=Rm67bBl.RAqIAWrSaN"_Q&D^8>g*ZEQ)H%*OC-k2n'h'@0Ad_6pLY"eDM@f5nm7hhf9!Fl..:h"@QWb0*pm:j
%NAJOnpV=a=&O5mJ6#Zdb*6__jS0IRS!Kk$>QZbkSfp]aoBm;d'pkV6g<KJ#s:nk8ii*'&gA48_/kI,BqrXRr!HZ>l2l;*\;G)E-#
%hVV"@m9'uTV2A)EC%MN75"f,I\FMqhos'E5Gk^((:c,Gu%d--#gga^$dg5?u`q0<1d)cgUkHVjt>]/u0"848A_FjQQ=8M.q\"epL
%MF'XRZ.m:Ka?hD[7]-lBcE9:WZWe($\ZnAc5-9lb9:,MSU_dKIbcMum/p1uAo/XS1`Qfu+\bt1;<06jY*"",p\qb@+5@#N)4lHU+
%5e>6-L<-9PJM3_D]2e^4e@,PX'!Vt(l-p2[(837$:N(D.`i+6f^+1OV;dVq7.cHZh7WbZ`c'FcScL(+B)KHW@^k]ZSb0i]fF]B:t
%ONK^?QESFc^)l+t!upHZXAi#![XWPnmLSMuF`OGMTppPdWIJ>so"fl9UaUei5UX-aYXChh)7RsHI>5GH,IaBhrM:q`M#B\ObB-"=
%X1.ZoYS$&!->e5P2.af&nl07\qd@fqSMBQ`lptSBAdmD(n85H0;;5)6Y\KVY'\PK=W6FfS%s9ak-^ZbY.cM6\WNZ9<r`6He7Jtg,
%@@OdKj"<(gqpbW,WNH9Ck(]@>=t-\`Z;p:JX*X<<UA[HL;"r!FVoUJ>6N%+!:u*nJ6d3PZoUt#k8@@h,p6W,).I,7X*k"d&"X9-2
%=g#t\m:j1qmCL<YJUb`!p1d4d\1pf=AP_'b*:K@_gJEOfRm!%-Y0?c1b6Gs&hbZ#WiDS&%+l)Lp_\K)jDUesAXkH]uLM!u0XX^.;
%i4!GTgXWUaXVtB:DT2%o"u=r1!VHh^L,[urq?NTsre!O@$Y4(ZJ(V3p2m)>>3(<PG$LPk"3S?lk;7g0S<543C-j&(<`#`GSgTP>/
%#(us9GAIcmRpYo8%:h],6$:4+MUO03F)oKshm,CIOm?elCe0FbhTKfi#'.UbknsCi%s$#M`.(8JQ4:%;mITm_NP73SQrZR=T&)hf
%hin[NP<G*D]s$HiWEo@7dG">JqR'9paCsOk&$BM!eMmJA<Kb75Sc*uu-jB9`Uji*E'[dPeV:88=([EbC:k-e&%W(m2;Ma^ZF0mb%
%edqH\4]UH\J$HDSaYTdJHhJ*+`dq%C-hK]X.%Bse[dEprd[e?o6L*kZ,p]j:;J<$_g_gc=>AUrT9HWrIZ`P1oX).-jc)o_ahih$i
%WiE$V>.S<S6F"V9qZFF,SHf_r(fR6&i+k9'jh,@52dRW(h`H.'WjI_R@]u@E1P)IDL,=4_Ps2&^NAQDGh'IA$U2;CBP_VZ]g#1l`
%MCE?S[6G,WCnufIcqUV"%DkDsj=^U;3<WoCEO8)rU(t0m%+j6XrWj'n6B7ot2'p[hVglE'k^N674o,I@L.Jj%DfG@1-AMDp4qC%7
%jF`JlYI0TKdDD<@@QKd44B#J/-l0)R(>9S8KH`e[`=X0YJGjMa@n*L[>;qESR%gfP$Mj6_#&Yro,4/Asg[_qhGQ/eY"@pVdPjUhL
%Ei>^=4"F"T.X`Ic?o$H,1ULb@f6<+NrHoQ\Mj]rA_J<M'Y:l%Sas%MJUYFe-LX,k".G[rKba's1MVt%a?BT!K<]>WVcn$0=YgA@R
%4(?oEnn5_8re]mhN[O!mb36\@f[CZt3OtKOr`d43/^'<5q"?au<ZNgQOa`qM0aTs\jmOgVAq#6d0'=0@qs?Lb%7d_dN8EscdT>M<
%9k^rgY*9^P;/^PdMc<1#RIo`baFj8!fKg1.S3LXn$D+^$;JtEGQ:$@GgQiEQTD(-T6T6C9CEom.YH<NYNrDjh>Itse+)eNA@pJ1N
%:)gcGh<lI'BcBU;CYM8c/N$HRBY!>L,?g3^YjPH#'.o^`.]-.T4(8A[V[5d']<'mc>EeLrRQ3*F6NhBmopUZ":gZ$6"-R/lV\a^(
%7;s]@`?/RsmmHpKTA#@e)8.lIp\klST24\([OD+?BmUZ-TS[)=G3h7*?j._HV%$JB^6g=fA6&B<++E-!Z+WXoI@n>NZ#(e^gMKDo
%gLa9"UmS`)UOA\MNNUTG:gGt#goa^`rl!=3GGBhZepEuX#;th%WGW!rI(&bq'sqb/a7Ra"\TU#]A<.R*=0I5bp++'..AO$Q;EtY1
%iP=m"Xg5GdfeU-\A/A/TWLF(M;?V]dle:9lfZQ\d)6K&YCTn%WUH@/)4D_>Z/#:o_q4IsRjQXA,<X.!AN2^_L.:Jq9a`GgQ;tW/F
%F>GVuZQ6hQ-RYcQkHeZEZqhB[UBrNBJW)!.53HoreCAb)q*&Pea#o_M__"g5*,L(pctdGqc$RFZQE[";Y9K[mFkh+WgPPWQM!3@S
%n8*?PN4M^d'NQL2d%K.2)91J9MkP;8,Y@o\SfO*M1G/Ii3NkB<]*]'-HE_pmUGoQtq\6e1G:($YWKOGn80M*AZ)1`XV99;kd\3rk
%b'lQ.-gJBQ2j9/R)g@E8"HEP^4Zt**lTV_-50&+!e4oh=K3hNr<2Y/kK)?)r/S*mNLhI!][6o30H7+sDE='#pcR<5!'ZM.[9_u&5
%2")/X<s*]pPUiS?NA=3I6!#Z&Z%Z)aQ'hDs7,6%noWD(;Yiqd$6ojp@8H%#5KSe:<qF'RIDHj`]Z=fEIqgEu<-i%m*))UN.[RP>6
%G"d=t)El6UR,#4BXNN[2?-8uV&pfN'Vc3^(i52m'4$qo,d1Ztt1XiVrmO39(ic7-<$#Xe?3E-Z4^M@D/!@SODh.`P0D?TL;;JPq5
%-t2-lDFF#_T!_q/C'b82C<38-GMWO9ZqYieD&b5L,!4*dGkYQl6LfJq?"b+ie86)h.K1N;W0/CQSouHVDR='`SjL#a-Erab&ob:f
%+a!rF9(up2IJA10e"ppXI9]=*_cI5U&>>St.M;$,*UI-p^n&f19Qptf8gn`!aYrN=><f&060_U5M4+g3)d7/=Bf1[M:!DdING$Z5
%RS\&uM0IVJ7O=qd3%BMd,]B7%T%(58gakX%%&Z;U^L&AoT>qWNaIY/)]NIpV'mBS*'6kYgaud(L7Rqf&;VJ0^eD:PgkJ;-g$+8T9
%+Op>JSXW#(2i?tIq`[qhT-\gi7!<*f+r$pWao9]O`Mq2slC(sNQmjm[6@HDKOPbCSI0h:E`\3R^#UIod.j]i_NP<N9I%XumS%rO#
%(utmF&JPc7\0SV):BjHt!dDltg*i+W*-Xm.'"gk8M3-`n=SEEK[n78^1#.L!l%Y7L[!#pDXH&48pbSXrpZI7n#T6l"p?DSAPcb%O
%IQD$Z>=e8jM9o:m4kj9^8lcfm3P:q4CgFHG[$%SR_#<Qh_#_3mD%D"mmQMKnFRO8hd9F?$OSY11*IU5H/CkP6\*;EU10Pq]c+I3g
%mI(Wh:NpM-7A?=L]]O[aW+iN.;ELXbC^bF@ACU=VN4bP31%lR3&3"K>DWiqDh$*>,-k<#^h\Fj/HBBMiS:NaaMfr,Ks$<uDdZ%O2
%q29[4Cd:=2%UGPPe.C>ue.C,g)`ZO"Pj1tEf8>%L[pf5.o7rSEVV&a"or%eN\VfXkiA+YCL"bA&>BQqND8[s(_Qks.]eXk:^mXB)
%FW7dkH_&^Q4Ul(sF*YrB.WumXGMLU6D&M@aBC6nti@+PrPN@8*5D8Umm7LmJT;`AL>$4578-]6:64ZcsD!B4m7ma<V[WSc#WqK0-
%8jWAom#c9dC]<i!F[tP0EJjU6J+QUc.DF,Ds(72Tr]jGJk9ZJ8meFi;4kV-T@QEA_MfsV.RJI[h'SG1c*`NA.-51D9*1t:B*I2S*
%[a2c/=7.g5G&I?OYk3fNg$#dp"acA;rI,OZL@Wj"^^V1QVVgj41N9(BP3Z-5^i"\#$IB?.FK+WQi?1bsnJ+R[M&20p?bOl=C`l^N
%<b*u%k9l+TLi+$Z`R26OT<!$IX.*?V5m\1Eh_1[6dMD\ae2INY&]/r\VGg.;DY*?38f,"Uh[lfqT7bQr`RL1"N]Okf&Y3Z[;onS6
%k@XKL%CcI:)B9XU$.M]b(CeF_>_L$qlqE)\)4s.&rFBhGMqY(T?2^6ng:l.Mk7"\=@rKQ\&:KU:)auu-c2A#'n)MD5*JgD@JfP+L
%[(dRqQeP;SK,p)#*k$RN./9T:6>aTt?dkRK7<VF+.MKkCdt;kFjrmXG;&LP7_m]re"B(n@Q6(Kc@(79Ge@2EA&C[VTa3_EY4H'+Q
%fQtnsEApr06U./CogcD9`74JhbkBBS-Ic,qg*HADU:s4+gk;9aO(rDF;gIE6Th&=%le@,_?$,>RQ"hQ5j'Ws2(7I+O'Yl,A72PqB
%dLtX4D0H8p#"[u#?8(1uRc4JGnZ:6"k<X56P_YW[:hjJV_GP1IL])p$BgV1WX6oImg6Dl#"LEg3m3W(g%H)ZWFJmk]G[Tsl(V0M*
%%5l#YD*79q[R(#N(8o7A-^D:!e"F;.d>*ZTOk.P>T![56&%*QMEJj,NBi%4+4ah_uj"mQ\J1eaN%<jkc8Pab[3dUF0JP4JZcb\=Z
%IXF8SNQC\#5J4Rfs!Vb-4$o1C:Ih?$m.(_Z8P!]qDl6[kIUrE=m&)9#/'n/8[Z+Lg*aN?'kBqQT]nk;BqI%\%\=kc3-]$[ZljLE#
%_mVi`4n_:$;e-,e;YS!9WZtaj1;8CgO7n4RC7@H;2/a2,W'C$'fJYsDlf`)dCTbf\f!"a]8%+`_)JGg]`1P'r(K#4`'N88n_j'=:
%XYO(0h<I"+L1U!fUPufob:!F:j;qJWmLfjQM"8cVKJ@>Me,*r].:4kXo\t[YW<>`QW\^?O>e(VBW%1.dQ9:FJgk8Gap(B\!RG%>%
%Y+;7^q:oGIQRcfHjYe&Mpq%TC#DJXCGAto5nq:?HY?fId>e[+4&u^dOrJ\T$7)!cN+!e4t#6n,35fD0[\QUmRQ/,>3I3#,:Pj/^e
%Qu!CK)Jm&g#WIbGT@u3!Y'7j"Q-ct+2[@!5%3q"+@dGdBccRc&]E;<i1("gsZ#k0<>lmO'Pd*!`oRaQa=IRe6(fT=Q;Sl,\d[AH7
%o#f"5DEs2TrOlBGB?D"FKYje'#B,tB6JAlZ@jdtX9rMnJZ",5h[Rm5E]+!G=7W/bAPiFU^(CAae[+Rfo>1A;qWS%)X3g[u8`3arq
%U]rFtOFI<<)Jb[r0*=\r>LdM`]00++"7+67l6.lZG,D4*$P0d<&P1kLH=@T7%p,r#mAd8e+>J#67SB*tH_87+QeT2W&dkJ5;lns;
%/!Eg5^3$-mnB?`gX-rhXb`r'V@d;.%&e`nFY"*X_lHL#ApGDPuROMSD`j@T[72Zb=O0"#KRKUr]HGu+X0#_a#*6;T&l_Rp%1M%**
%R/.^l#q6lY,O036cqB)Fm/+f0RPf5pDFis)jBd`nj:G\/R21:l$Em=?iYC?@8E5nD1=LRU23NKFV\^UdAN(smQSC>'Y.A^M[(Cg"
%']Gd7c;M."K\"$1Pt\g%C.<Ph4]-3O`SNkcN"23-N0`E)2B6gKMQ()e`X]_KM(<P`Y.!/7bA\A3#NM&?gF6tfNlrjl-$4@pLtV6/
%r7Y(h`f=b;jjXf\3-iQOmJhr=<o5F(:J^[sgNB7(#@_H6X,c_AMA(D3kPjn+AjV@Tch$fnru>W(&L\850[Uq6JE&YdS0P%2('ia<
%H"_C0,K:n(FHP4(aYZO4K2nX)8*!*4?$f-D1Z[2LKOU;AeEOq]lDgM^.L@s?e;/X3WN2FVei9[,3&.g>r[8q`B$*(*%B8g=*fZC]
%3sBBc;bXBdjaa<u:F5YkSL)$>O35?#I)s-B:j[2VZ!J=(1ai'S+j9)ci[@JHi[q#BZKq&^8fV(AmoQnLc0o;f0m>AF`V*EJN:OfH
%TS*Rtd.WmI,KA6`9-Y?fb0c8)p#SdP$!$5^&ZeP:esjC,;!8\P)Q_VE5jLrLC`sFUCdNJVWQ]T3!*.+ti6N)]8Q7^h*N@)e-IeUo
%1gW)6p3oQmE"hO1%MIZg:cC?ZDE+ERDF:1]'5Gj6,B>iBcoUPs'Lt9.#jl^mIQpbkh2^a-ZdoZ9*YV<CA3H!OV<pD@Pju5q9W%HI
%TX#0I*n.`<-6sFJ`5^,fj60uf(QK)u+4L*@%B35)Sr,j"9^T\O8k>m`3)"a1l<7*>+e]-t/PDk&!(-g3?:UpmR4*tC2+jGnIZ.7]
%A>hPC:d6)7%Ri_OpS7R#)*QYEM;,<$AgGl2>,iQ4%./^.Zp/$b^(aQXR40YG`71,(-,e<X!MYL8d;-Z.W;&sjY?0g:NG_B_h)e..
%1L.+]#'Inb%S]VGCe)E67,92bB!\Y?3>oN`*(NscH=CX8a[>/;U#q`Cl9P`a;nm&[-.I@oU33h>dR?d,03:c%l%/J"SX"2,=W%k9
%W%M"ML@S<OV:m(YpFCm)WN@OO2<%RQUq7%P_`fj\nDWhnU$-/9o[Wkk7\;3.DDZ,81M)QMQsSV.28*-^7ibRX/><$VCMMUkg*RI>
%[Lh.#Qf5h(;c>qh<rRdOr\45C=hMMad*GCH=.IUKj*(ooeGbTTUA0pb[/Hr$`?'Kn))W4RlMmGSQ,=KrqC*F2W"4AOh0J[R%(d`n
%+Jol;#CU57JHuR(/Z*HPdH;P[7R7\BFM4aROAMu7TTL<N]n[Z:))X53E>MPPLZ(#YDj';`pIb&+)>6J(cZ1#4;u^kLMu,#+Vc[nH
%77_)Fi"MBuDas^`0@JYk`/DGDiQK[@JXWtNK3+)(M5cg1$-V]HI,u&Ep5QC@P#<P<23NWmd#Y$kJM/IVmS?.WmPo@$[lhpJpIR!j
%>BbDno(:=/_W71R\\]"P7XHkmS:&_I5TKg,ThqtW89IU7WS\ud'2^koY9qtp;'EC%FtuRQBYjT-m8?7YbSFXj]J7#a-8qPVDtB>s
%^1,7K5(^#so#;_X0r:*AiWfeeFFh_]9\X4r+6^?6gd^Mg3tJ29gE7/ejL0hg>`>T$ZqV't=EmF#\n(Gde`<[("Jj15BS!ekV@LIH
%Z\\GjlG72IA%K>C!Hm4W?7''M]J;h'p0S_>:WW^a1SMNXR"d:M@VQt7ISQMILjHL]WD4U*8#T&"q=5E3/Iu]E&jI-kBq4t4@uAKn
%>19gc.D3P2H?9fGdgc,M,M#U/XmKI%`,-/Y4*Mt"s1[e:`6`o_Y\>8J4JBh@HCa&ZKqpM+9rWKl:7:h``QuW'EV)CjX2`L33P+Kr
%+mYs'IZq3l/pH3ORX2s&ec9tTC"@;=;1c<7/F<K!L$P[EST#.V8L()nqobGif7^k?4I":qIf4F]L@4qnp^=^X.^WK4Rnn(;81:$$
%og0B:<V3ASq@[b+_8d6g4/l]ln3XB@KPpg_D];WaJPZYdb*R5.3kVgE+5MirreYLt<VdlMEM@Xc,-`%b8e1\G@qrar8m$ZU+b\&-
%nSLb>N%.AZ[%6.HUpM_^>L2$9+ce.m&;AV8C569sI4*O2YX*?@Dr"IZ97W!6dO6i@9'BlHKXS9a9J_F_p:lipGRf:Rgi@'"1fjnn
%%=u>VUSEK32g.#MW#aOZe%SVJN>$&>Zkm3Cn@HoDR86'i;I,>4JkdC:TZ^EVd*?=nrV!2+K\C'I[nI_90h#,7M#a8#Y(r#=+a#*H
%bm9g-N7s`:J@"\^4eZTIo3F8#Z91QLrR4NKe=0Ck5;3Hhd:>T2KJ_O0Tku#+C1*ge'5C0bYXcU"'2qu=#74Y=4/77p[PasH:I[!.
%\4Q#%?\f1J0uY/`C+/*V5Y%`*[T-oQXlHiY+sU/Y0@&TIZn3MEA!Be,kN)e25hJM\('?)DXJ(VlA1];pUX/-Y>+%^7K?J^9mp\W"
%\fF_Fb.?]sS%>':;ft]gHr^S,2U45$rE]FjVQNdXoTbTA3D(0HZ1X1k4>j$#^_`>h0spNWp4"qfm\_"2RE+g`!THNAMseGk#lgB'
%KX+21-)&$QD"@9YUD.Mpon&qS<65f"^)Z[c'T^6;6;3NN>s(U5m3(B&)#@mQNB1\?(aAh;S?!PpprnW#CMOkm3^\\lVT;]i/A4lg
%mH9fNg<)WN[rERj<D;eTaF"C2mYkTtDfr'\"Hi%M2XbJuAgs+#g/%*e>UEAI.ch$r3eQ>:j=4FT\ujnth,6j0Deo%9+r/jd79^`6
%TWJ6?.6#ujl?98=&1"*,R+chQ/G&@&aJ`7&5[VS]-^5k`7,Wb5JY!"ueT8BUVhiaQCI\'8Ng<B5SdHmCY-s-0Hf'uagBpL$ZbJAm
%Y''3Ues_9'_Zqf\kmS;*LmfNOS>Z&p2NCTg4Z4N@g+(&*&7Z&+e49F$b/r4tKY!Tqq'+Wm,h/@Z9'u4L#lV_Ym0OG9=qP'h+#U?/
%[khehh;JoorKI==VK3()"d;f)B*bE@%9]^dXeVR7!AcaEEON9.emDF.*$.5EBs+#ulWT#X@&Q6_X0R8dDS^#,',,,1Irh@TO<K9j
%0Cin'DkQ)E[D/UnWAeF.b8,j72"F5)M@"u2?$luL#pD01KnlJBYZQ\-enX7#*?fLmM1A7SGU:iK*K!P0VE^r$q1Y:l-d@XM?2pPa
%j_OdIg6[Lu!2c2%\n`YR]\il]8Dt@93aR#7!I84oe6PYZYDg\mg.?J;/>TFc2Rr90m5X=^ZG6j>['O6*HUh7%VXDW\36=73XpXPO
%hHHOL<b9brYT95W0VO<!g;Lf;Ok:r4'N92n%p`15i/"A=b,G7bK^CJa8=1Puk?U)jAg(D65X-Tjp;2s/=KosVWOHf^',S,?1%cJp
%\Bhm2&JiiJAL<5Ma+,q:-Ie=]\""+Q.fT-<bM,BEIER?qgio9(hrF@8')n&QXWb&)7_(GGo#.d!0C(WG_L'=aFYGd^%eeCVZELu#
%hX-[/*aYi'fLZB([3]onZ.U&+qdP9<*[moW/h5RpKicRimIXA]O(=ikC&l.PI(''1&fN_CoSM3cM1eo>F$c^V:K[$t1.&HQj4>*^
%$]NFF*p&C.$^D>g@C`#P#^mn+#(cKn#d*aZW.!T7KO-&hXjgQtH.lmd6D+%WmeuiKkS%1">"#s9S!t(KI.WaBA]<St;-\guH6tFS
%6=Cap*.DXWSnL&M[hC1q!-$\:K6'Aa"hmA)=U`RnX^c%D_)\3F1>$2kF%/rc;IeET^'SXP;_<0t3[aEJZ[[a>_[U$'6a;#$5(r=r
%1_*e#c8!#;I$@Q&?o)munXXE8KMeq7\e<L$*Rj7qakiOQgP"CGS%ssDHAJTC3Mrr[C5@nLI@/ZX'3I_9,#b\,6KV!2#/h@,mKel?
%mmbOH)/VT!pE>2UVUU9"3,<]WB'5FA)oqpi;aYY#c*+au3C<.,&Hco;lbUkL>X15,B@K&$:!i[Q;kaWK"FXV;?R6%'h$/9OX@\pT
%eHUHQ14nsg[:20H+;SY6eC%SDp5egp/PP%#]MP$kA\%BT_.U&<qZU,gGe_<L[Jcc,k(M;@Zj,(3S5<QZ[l#P_cKAYQNhP2kkkiBL
%D]c%e\o/MQbF-AbQCVP(HWIK;>j1"/;;>2qU:feT8V(\".m7a2:O)]$m86KFl19MGmTjK:%X4E7N7np:8.\_76#qa<Kt;7PLR!h0
%%7i\d,o#Tq,qIU"<5d:'<oh>f:qQAa;)"]a_]f[dq[kWZa0.qk0BM75_];gjRO3s=__JM_QSWdnc^gmcjQCW,:FNY.<?.4a66N'#
%a:YHh%1./UZ<UdJFNfS^/J9grJ!=f@>dbp-cH)k`+giDf?4A1p&k3eFX"Bo>gG3f7Pu-@"rJE/$AL-s"X1*cA<^I4RHC^C!pVq5F
%Qr*!'*4oIfp<1L8R]N]iKTQ&!oo%7OqD[gYYR0tKoLn"n_S!OHl*<:BXouIf%[m8ljZ4?mYiF7AEMY@L8]E[!-;UR'60\'S4"Cd*
%#*W<X-e,9O@P13M.m_Aj$2)@9DVdp_gQ.0<,bqeh`#+\7KN.6MU)8.gMQPR::R<42[EG(H]d2+X9W?eFa=U%Oh=a>ID@*`"Xr?jd
%WY;S)#=E[.<\fYkd4q>4g(e+pVqpbY6\sK6,"Note:a:%MMX6'md7XF2kb;nErBJTp%qgrpPPZuYNTHF`p'Ws]Up+X-e^06kJgA]
%_kJc:U>6P*n+];i:*7B[00T6#DZ%g/KHC\<_X:Bb:qMWbB8)#U/SqRjJBW)aV';UVk9>?n#rLtPpjU0.m>JrW,b]B/?tpETq_3#?
%a_2P`H.9)GTho6\Ljo'KM3.V:2uk8Sm[h$h;97P?7\#\Ul@7\sT+\_$[C7f&l;DbfPNpQ].dg@UFX;.%Y2_+('kK@S.Df_o<5(6d
%[J6!*Y\[h*l],^'43k*OX686J_ql[,X5YCk;!^d2mUr<?G8[fJ,#3Om7HssIT+YeQN1/EpSIcHLf.hDc9W4M;eS-e4G5%ZTQl/%\
%XK+=+B%3+hcD(\g2%un;N9Y.7*+1"7j'$,_?],#'9^T,GhB8NP=lSig1/%lK,OsICM)_3kpY+1AZS`ANkCgE\6enURC7Z`sfeIOm
%W4RF)e;[.A,u5ql:sUW!l7V?.`=-u_#_TY$-e+A7>j<!VHDW8sk<t:FP]?DXWO]u*i;t`V-"q6a9O.rCh@NUm64]R,W:[<I@KZg4
%CZ!a)E/tRAqImB09O.Z3L,.-tZ>q./7sD0ZB'+qF2iaNWp+..hDgQZ^@&<Q`IZtCB;o3!jT'hK$L?Fp'pJXe2gRR%mcSbTUq>&n^
%=oB0:5GG4I[bmh[J--Z`YjWs'CYKDj&1CW&@eTI!\i>217?I+TVg-YR+8"Jr'Ha''DcSY$ELC=1?/1\VbrH#'WX!PScqa6n#3)O&
%ZMbYj\FVko/P]/m0)nu:cA=!K3)\?h?@3YhQ%J>jUWp"2/h+RoW1u2(kjId$NUsO'iclT8n%caor7Y=Bn#gPC)ZODR!-](2@>*R*
%(N'M@V,[Jrm?ZC1Ga((IIAihe0BJi*qWCoIPd\!]Q?3:_[Nj_<=)Ls"d5sm$N%uAi-X-omrTN'1QhU1a$S+BpiY;(Kb&9@1<;YPL
%UDI!V6bucRkm?03_ACX.HgBr!([O,u;EI^T!:!jQ?o,l_BgZJ$UU9aJmHtXU^SNq^)\V]bntN64SD0O>+l9<ATTiW)n'Of6`(<Q9
%q]QqZ<X.+Hl1`rUM(Y](gPUV6E)a*5q8B4Uo9mJEV7&U*WY&Ft:@<u534_q<Uet.7j[2PtiA8SU6rg_D]=]qiMu=M?Bkn`JoF_Bk
%0OuIaZk)kkUZ2a"<@0S_HsjH=77n-gJ_fBO[Cu:[%Mj"B74E7a[8Il2+&@"deRsh<UieDeBN09TS\E](D'1n`&%[hWb[fGIn;<p1
%NX+,1'<7uY%2bXIO.1RVrH*ulI.0h9Iu$qslZU5rZI?'V2tIHX;h[DG9IO'`2tL^jbob*ORGnq6R:jl-[OLN-r&L[sgK7n-J+AS^
%#8ATJBcqNV`/(\++ka:m0C,k?keC[9;+B6')qlf/?5@rUY3[B!ffu^);8VARB)+9[+%P/bJMS=R/edO4&)>cTqZI:K2,?Rg70iWK
%cp4I=VM!Ok0^.@o4u%U<D::Nl[3J)VL01.kSX38_:kQ[@$WARBB^'Mr&dsA\Y^/F%WO;An/=Pe$P\Y31PNQDW,>mNHP0c9XgE7t7
%8pkQKoZ7iOTsi!-o5!*0%gS2cKsd9$a$`#_0AiOASuRrOU36HhFPIO`Tb2@P:``78X[/-d3!^DOg7GHeFXT".LKCRNL%C<9i\ao>
%8[Wj<m25&6pcd[/%k!4/51<$PN_JNnm)N^"'#1sQokS/bpkZIWb/iX:J/nl<\;<DN\`&<&l2XDrM9bd:I9>A*<4A#kLdP31\YP4=
%!<&Vu$>!aDQZC!P,cruk52'A+^[kO)PW;AcQ$=HHEd=Rl]+7r-9rMhbP%`UqN4-Vi;*RZLS1l>ENLNiQ-g-_akfude-t*pqH;JW4
%8uNgp&*msWe@dRL"PnM'BB\-bo*TJ%S@sWj2B63eB,`aTa+,6:gF;0I9F0\Q1#:KgO:/j7M:5<qh+QV$:CJt#0<$6CZjr;\W*)gU
%L$*&o?FBm/f>oV3RgECZmslJf?,`G-4$0.=ipA_0A!8dtPPd;C#2GBu$1+BR70NS8YI;H`oC,TAWeL6_Nh]Nak9cSN#Uq@j@2;qU
%le(k!@NK?!SYK-KPu1bV#AIt?@5FkJhGLVHp6n]/"E0QWM`9J=IX*D)?h,ecSc@=a_om]a->job9F$e.d/N#$.ibs5BgU$%>+n)a
%.+A@8G^u;&7RbP[@T6J09]'TLV+@3R4_thERQP[YI*B.sb>[*V_IJAi1#R]`Zrti.Zm2_',QXmEit!fWm21P"@!9c2lrcZCD#Hl_
%H9a/)B20)7]&jObV+bldqGY.aD=TJVrV62L^\mNos5?2os7TOoq"LCFr9GI)r0Mod_!h<H+9(5[s7O]fp`Da#puc"5pCI<%L]@=n
%Dh%Q&J,H3oq89uFnUIusp$Ek#r5X<dQ[el'+2@dGJ,cGH"+hWZ%t=QU^\[9roZQ_&03?>u.K~>
%AI9_PrivateDataEnd
